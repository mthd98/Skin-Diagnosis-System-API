2025-02-08 19:51:51,670 - api.middleware.authentication - INFO - Checking Authorization header for /new_cases
2025-02-08 19:51:51,670 - api.middleware.authentication - ERROR - HTTPException on /new_cases: Invalid token
2025-02-08 19:51:51,670 - httpx - INFO - HTTP Request: POST http://testserver/new_cases "HTTP/1.1 401 Unauthorized"
2025-02-08 19:56:28,042 - api.middleware.authentication - INFO - Checking Authorization header for /new_cases
2025-02-08 19:56:28,042 - api.middleware.authentication - ERROR - HTTPException on /new_cases: Invalid token
2025-02-08 19:56:28,046 - httpx - INFO - HTTP Request: POST http://testserver/new_cases "HTTP/1.1 401 Unauthorized"
2025-02-08 19:56:52,534 - api.middleware.authentication - INFO - Checking Authorization header for /new_cases
2025-02-08 19:56:52,536 - api.middleware.authentication - ERROR - HTTPException on /new_cases: Invalid token
2025-02-08 19:56:52,536 - httpx - INFO - HTTP Request: POST http://testserver/new_cases "HTTP/1.1 401 Unauthorized"
2025-02-08 19:58:21,050 - api.middleware.authentication - INFO - Checking Authorization header for /new_cases
2025-02-08 19:58:21,050 - api.middleware.authentication - ERROR - HTTPException on /new_cases: Invalid token
2025-02-08 19:58:21,050 - httpx - INFO - HTTP Request: POST http://testserver/new_cases "HTTP/1.1 401 Unauthorized"
2025-02-08 19:59:19,264 - api.middleware.authentication - INFO - Checking Authorization header for /new_cases
2025-02-08 19:59:19,264 - api.middleware.authentication - ERROR - HTTPException on /new_cases: Token has expired
2025-02-08 19:59:19,267 - httpx - INFO - HTTP Request: POST http://testserver/new_cases "HTTP/1.1 401 Unauthorized"
2025-02-08 20:12:19,075 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 20:12:19,297 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 20:12:33,684 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 21:22:02,413 - app.middleware.authentication - INFO - Checking Authorization header for /doctors/login
2025-02-08 21:22:02,413 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /doctors/login
2025-02-08 21:22:02,413 - app.middleware.authentication - ERROR - HTTPException on /doctors/login: Missing or invalid Authorization header
2025-02-08 21:22:02,428 - httpx - INFO - HTTP Request: POST http://testserver/doctors/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:22:02,719 - app.middleware.authentication - INFO - Checking Authorization header for /doctors/register
2025-02-08 21:22:02,719 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /doctors/register
2025-02-08 21:22:02,719 - app.middleware.authentication - ERROR - HTTPException on /doctors/register: Missing or invalid Authorization header
2025-02-08 21:22:02,719 - httpx - INFO - HTTP Request: POST http://testserver/doctors/register "HTTP/1.1 401 Unauthorized"
2025-02-08 21:22:02,730 - app.middleware.authentication - INFO - Checking Authorization header for /doctors/login
2025-02-08 21:22:02,730 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /doctors/login
2025-02-08 21:22:02,730 - app.middleware.authentication - ERROR - HTTPException on /doctors/login: Missing or invalid Authorization header
2025-02-08 21:22:02,730 - httpx - INFO - HTTP Request: POST http://testserver/doctors/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:22:02,730 - app.middleware.authentication - INFO - Checking Authorization header for /patients/register
2025-02-08 21:22:02,730 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /patients/register
2025-02-08 21:22:02,730 - app.middleware.authentication - ERROR - HTTPException on /patients/register: Missing or invalid Authorization header
2025-02-08 21:22:02,730 - httpx - INFO - HTTP Request: POST http://testserver/patients/register "HTTP/1.1 401 Unauthorized"
2025-02-08 21:22:02,748 - app.middleware.authentication - INFO - Checking Authorization header for /patients/mock_patient_id
2025-02-08 21:22:02,753 - app.middleware.authentication - ERROR - HTTPException on /patients/mock_patient_id: Invalid token
2025-02-08 21:22:02,753 - httpx - INFO - HTTP Request: GET http://testserver/patients/mock_patient_id "HTTP/1.1 401 Unauthorized"
2025-02-08 21:30:59,601 - app.middleware.authentication - INFO - Checking Authorization header for /register-doctor
2025-02-08 21:30:59,602 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /register-doctor
2025-02-08 21:30:59,602 - app.middleware.authentication - ERROR - HTTPException on /register-doctor: Missing or invalid Authorization header
2025-02-08 21:30:59,602 - httpx - INFO - HTTP Request: POST http://testserver/register-doctor "HTTP/1.1 401 Unauthorized"
2025-02-08 21:30:59,889 - app.middleware.authentication - INFO - Checking Authorization header for /login
2025-02-08 21:30:59,889 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /login
2025-02-08 21:30:59,889 - app.middleware.authentication - ERROR - HTTPException on /login: Missing or invalid Authorization header
2025-02-08 21:30:59,889 - httpx - INFO - HTTP Request: POST http://testserver/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:06,822 - app.middleware.authentication - INFO - Checking Authorization header for /register-doctor
2025-02-08 21:32:06,822 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /register-doctor
2025-02-08 21:32:06,822 - app.middleware.authentication - ERROR - HTTPException on /register-doctor: Missing or invalid Authorization header
2025-02-08 21:32:06,825 - httpx - INFO - HTTP Request: POST http://testserver/register-doctor "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:07,038 - app.middleware.authentication - INFO - Checking Authorization header for /login
2025-02-08 21:32:07,038 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /login
2025-02-08 21:32:07,038 - app.middleware.authentication - ERROR - HTTPException on /login: Missing or invalid Authorization header
2025-02-08 21:32:07,038 - httpx - INFO - HTTP Request: POST http://testserver/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:14,555 - app.middleware.authentication - INFO - Checking Authorization header for /register-doctor
2025-02-08 21:32:14,556 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /register-doctor
2025-02-08 21:32:14,556 - app.middleware.authentication - ERROR - HTTPException on /register-doctor: Missing or invalid Authorization header
2025-02-08 21:32:14,558 - httpx - INFO - HTTP Request: POST http://testserver/register-doctor "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:14,751 - app.middleware.authentication - INFO - Checking Authorization header for /login
2025-02-08 21:32:14,751 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /login
2025-02-08 21:32:14,751 - app.middleware.authentication - ERROR - HTTPException on /login: Missing or invalid Authorization header
2025-02-08 21:32:14,751 - httpx - INFO - HTTP Request: POST http://testserver/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:27,118 - app.middleware.authentication - INFO - Checking Authorization header for /register-doctor
2025-02-08 21:32:27,119 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /register-doctor
2025-02-08 21:32:27,119 - app.middleware.authentication - ERROR - HTTPException on /register-doctor: Missing or invalid Authorization header
2025-02-08 21:32:27,121 - httpx - INFO - HTTP Request: POST http://testserver/register-doctor "HTTP/1.1 401 Unauthorized"
2025-02-08 21:32:27,298 - app.middleware.authentication - INFO - Checking Authorization header for /login
2025-02-08 21:32:27,298 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /login
2025-02-08 21:32:27,298 - app.middleware.authentication - ERROR - HTTPException on /login: Missing or invalid Authorization header
2025-02-08 21:32:27,298 - httpx - INFO - HTTP Request: POST http://testserver/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:33:48,967 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:33:48,978 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:33:48,978 - root - INFO - Getting database: Users
2025-02-08 21:33:48,978 - root - INFO - Getting collection: Doctors
2025-02-08 21:33:48,978 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:33:49,085 - app.models.doctor - INFO - Creating doctor profile for email: dr.johndoe@example.com
2025-02-08 21:33:49,085 - root - INFO - Getting database: Users
2025-02-08 21:33:49,085 - root - INFO - Getting collection: Doctors
2025-02-08 21:33:49,085 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:33:49,475 - root - INFO - Getting database: Users
2025-02-08 21:33:49,475 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:33:49,674 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 0faab8aa-fb68-444f-bfdd-77b6175efb10
2025-02-08 21:33:49,686 - app.models.doctor - INFO - Doctor created successfully with id: 0faab8aa-fb68-444f-bfdd-77b6175efb10
2025-02-08 21:33:49,686 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:33:49,686 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:33:49,693 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:33:49,702 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'securepassword123'}
2025-02-08 21:33:49,703 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:33:49,703 - root - INFO - Getting database: Users
2025-02-08 21:33:49,703 - root - INFO - Getting collection: Doctors
2025-02-08 21:33:49,703 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:33:50,060 - app.utils.authentication - INFO - JWT access token generated successfully for email: dr.johndoe@example.com
2025-02-08 21:33:50,060 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:38:52,671 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:38:52,687 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:38:52,687 - root - INFO - Getting database: Users
2025-02-08 21:38:52,687 - root - INFO - Getting collection: Doctors
2025-02-08 21:38:52,687 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:38:52,784 - app.routers.users - ERROR - Email is already registered: dr.johndoe@example.com
2025-02-08 21:38:52,784 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:38:52,784 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:38:53,069 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:38:53,069 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'securepassword123'}
2025-02-08 21:38:53,069 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:38:53,069 - root - INFO - Getting database: Users
2025-02-08 21:38:53,069 - root - INFO - Getting collection: Doctors
2025-02-08 21:38:53,069 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:38:53,442 - app.utils.authentication - INFO - JWT access token generated successfully for email: dr.johndoe@example.com
2025-02-08 21:38:53,442 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:45:26,063 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:45:26,081 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:45:26,081 - root - INFO - Getting database: Users
2025-02-08 21:45:26,081 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:26,081 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:26,187 - app.models.doctor - INFO - Creating doctor profile for email: dr.johndoe@example.com
2025-02-08 21:45:26,187 - root - INFO - Getting database: Users
2025-02-08 21:45:26,187 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:26,187 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:26,665 - root - INFO - Getting database: Users
2025-02-08 21:45:26,665 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:45:26,865 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 4e88d5d8-21d9-4cf4-bfc7-c35ce7a0faaf
2025-02-08 21:45:26,865 - app.models.doctor - INFO - Doctor created successfully with id: 4e88d5d8-21d9-4cf4-bfc7-c35ce7a0faaf
2025-02-08 21:45:26,865 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:45:26,873 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:45:26,881 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:45:26,892 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:45:26,892 - root - INFO - Getting database: Users
2025-02-08 21:45:26,892 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:26,892 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:26,990 - app.routers.users - ERROR - Email is already registered: dr.johndoe@example.com
2025-02-08 21:45:26,990 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:45:26,990 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:45:27,816 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:45:27,816 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'securepassword123'}
2025-02-08 21:45:27,816 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:45:27,816 - root - INFO - Getting database: Users
2025-02-08 21:45:27,816 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:27,816 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:28,184 - app.utils.authentication - INFO - JWT access token generated successfully for email: dr.johndoe@example.com
2025-02-08 21:45:28,190 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:45:28,190 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:45:28,190 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'wrongpassword'}
2025-02-08 21:45:28,190 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:45:28,190 - root - INFO - Getting database: Users
2025-02-08 21:45:28,190 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:28,190 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:28,544 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: dr.johndoe@example.com
2025-02-08 21:45:28,544 - app.utils.authentication - ERROR - HTTPException during authentication for email dr.johndoe@example.com: Invalid password.
2025-02-08 21:45:28,560 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:45:28,560 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:45:28,560 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.janedoe@example.com', 'name': 'Dr. Jane Doe', 'password': 'securepassword123'}
2025-02-08 21:45:28,560 - app.routers.users - ERROR - Email is already registered: dr.janedoe@example.com
2025-02-08 21:45:28,560 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:45:28,560 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:45:28,580 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:45:28,582 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.testerror@example.com', 'name': 'Dr. Test Error', 'password': 'securepassword123'}
2025-02-08 21:45:28,582 - root - INFO - Getting database: Users
2025-02-08 21:45:28,582 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:28,582 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:28,685 - app.models.doctor - INFO - Creating doctor profile for email: dr.testerror@example.com
2025-02-08 21:45:28,685 - root - INFO - Getting database: Users
2025-02-08 21:45:28,686 - root - INFO - Getting collection: Doctors
2025-02-08 21:45:28,686 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:45:29,170 - root - INFO - Getting database: Users
2025-02-08 21:45:29,170 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:45:29,381 - app.models.api_key - INFO - API key allocated successfully for doctor ID: e1c6832e-b6f6-406c-96f3-bc665e26b449
2025-02-08 21:45:29,381 - app.models.doctor - INFO - Doctor created successfully with id: e1c6832e-b6f6-406c-96f3-bc665e26b449
2025-02-08 21:45:29,381 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:45:29,381 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:47:14,694 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:47:14,711 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:47:14,711 - root - INFO - Getting database: Users
2025-02-08 21:47:14,711 - root - INFO - Getting collection: Doctors
2025-02-08 21:47:14,711 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:47:14,814 - app.routers.users - ERROR - Email is already registered: dr.johndoe@example.com
2025-02-08 21:47:14,815 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:47:14,820 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:47:15,108 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:47:15,121 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.johndoe@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:47:15,122 - root - INFO - Getting database: Users
2025-02-08 21:47:15,122 - root - INFO - Getting collection: Doctors
2025-02-08 21:47:15,122 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:47:15,223 - app.routers.users - ERROR - Email is already registered: dr.johndoe@example.com
2025-02-08 21:47:15,223 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:47:15,226 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:47:15,235 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:47:15,254 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'securepassword123'}
2025-02-08 21:47:15,254 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:47:15,255 - root - INFO - Getting database: Users
2025-02-08 21:47:15,255 - root - INFO - Getting collection: Doctors
2025-02-08 21:47:15,255 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:47:15,684 - app.utils.authentication - INFO - JWT access token generated successfully for email: dr.johndoe@example.com
2025-02-08 21:47:15,686 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:47:15,700 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:47:15,702 - app.routers.users - INFO - Doctor Sign in input: {'email': 'dr.johndoe@example.com', 'password': 'wrongpassword'}
2025-02-08 21:47:15,702 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: dr.johndoe@example.com
2025-02-08 21:47:15,702 - root - INFO - Getting database: Users
2025-02-08 21:47:15,702 - root - INFO - Getting collection: Doctors
2025-02-08 21:47:15,702 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:47:16,066 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: dr.johndoe@example.com
2025-02-08 21:47:16,066 - app.utils.authentication - ERROR - HTTPException during authentication for email dr.johndoe@example.com: Invalid password.
2025-02-08 21:47:16,068 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:47:16,073 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:47:16,074 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.janedoe@example.com', 'name': 'Dr. Jane Doe', 'password': 'securepassword123'}
2025-02-08 21:47:16,084 - app.routers.users - ERROR - Email is already registered: dr.janedoe@example.com
2025-02-08 21:47:16,084 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:47:16,087 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:47:16,098 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:47:16,101 - app.routers.users - INFO - Doctor registration input: {'email': 'dr.testerror@example.com', 'name': 'Dr. Test Error', 'password': 'securepassword123'}
2025-02-08 21:47:16,101 - root - INFO - Getting database: Users
2025-02-08 21:47:16,101 - root - INFO - Getting collection: Doctors
2025-02-08 21:47:16,101 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:47:16,204 - app.routers.users - ERROR - Email is already registered: dr.testerror@example.com
2025-02-08 21:47:16,204 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:47:16,205 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:18,416 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:18,434 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f3152838@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:52:18,434 - root - INFO - Getting database: Users
2025-02-08 21:52:18,434 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:18,434 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:18,539 - app.models.doctor - INFO - Creating doctor profile for email: test_f3152838@example.com
2025-02-08 21:52:18,539 - root - INFO - Getting database: Users
2025-02-08 21:52:18,539 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:18,539 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:18,998 - root - INFO - Getting database: Users
2025-02-08 21:52:18,998 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:52:19,191 - app.models.api_key - INFO - API key allocated successfully for doctor ID: f27d52dd-8b7c-4779-b707-3861658a5f5a
2025-02-08 21:52:19,191 - app.models.doctor - INFO - Doctor created successfully with id: f27d52dd-8b7c-4779-b707-3861658a5f5a
2025-02-08 21:52:19,191 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:52:19,191 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:52:19,207 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:19,207 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f3152838@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:52:19,207 - root - INFO - Getting database: Users
2025-02-08 21:52:19,207 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:19,207 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:19,308 - app.routers.users - ERROR - Email is already registered: test_f3152838@example.com
2025-02-08 21:52:19,308 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:52:19,308 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:19,308 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:19,308 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f3152838@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:52:19,308 - root - INFO - Getting database: Users
2025-02-08 21:52:19,308 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:19,308 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:19,422 - app.routers.users - ERROR - Email is already registered: test_f3152838@example.com
2025-02-08 21:52:19,422 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:52:19,422 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:19,422 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:19,422 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f3152838@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:52:19,422 - root - INFO - Getting database: Users
2025-02-08 21:52:19,422 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:19,422 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:19,531 - app.routers.users - ERROR - Email is already registered: test_f3152838@example.com
2025-02-08 21:52:19,531 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:52:19,532 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:19,534 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:52:19,538 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_f3152838@example.com', 'password': 'securepassword123'}
2025-02-08 21:52:19,538 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_f3152838@example.com
2025-02-08 21:52:19,538 - root - INFO - Getting database: Users
2025-02-08 21:52:19,538 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:19,538 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:19,976 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_f3152838@example.com
2025-02-08 21:52:19,976 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:52:19,994 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:19,996 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f3152838@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:52:19,996 - root - INFO - Getting database: Users
2025-02-08 21:52:19,996 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:19,996 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:20,090 - app.routers.users - ERROR - Email is already registered: test_f3152838@example.com
2025-02-08 21:52:20,090 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:52:20,090 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:20,106 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:52:20,108 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_f3152838@example.com', 'password': 'wrongpassword'}
2025-02-08 21:52:20,108 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_f3152838@example.com
2025-02-08 21:52:20,108 - root - INFO - Getting database: Users
2025-02-08 21:52:20,108 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:20,108 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:20,492 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: test_f3152838@example.com
2025-02-08 21:52:20,492 - app.utils.authentication - ERROR - HTTPException during authentication for email test_f3152838@example.com: Invalid password.
2025-02-08 21:52:20,508 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-08 21:52:20,508 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:20,508 - app.routers.users - INFO - Doctor registration input: {'email': 'test_6e60bd5e@example.com', 'name': 'Dr. Jane Doe', 'password': 'securepassword123'}
2025-02-08 21:52:20,508 - app.routers.users - ERROR - Email is already registered: test_6e60bd5e@example.com
2025-02-08 21:52:20,508 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:52:20,508 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:52:20,760 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:52:20,760 - app.routers.users - INFO - Doctor registration input: {'email': 'test_7c1a5ce9@example.com', 'name': 'Dr. Test Error', 'password': 'securepassword123'}
2025-02-08 21:52:20,760 - root - INFO - Getting database: Users
2025-02-08 21:52:20,760 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:20,760 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:20,857 - app.models.doctor - INFO - Creating doctor profile for email: test_7c1a5ce9@example.com
2025-02-08 21:52:20,857 - root - INFO - Getting database: Users
2025-02-08 21:52:20,857 - root - INFO - Getting collection: Doctors
2025-02-08 21:52:20,857 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:52:21,339 - root - INFO - Getting database: Users
2025-02-08 21:52:21,339 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:52:21,536 - app.models.api_key - INFO - API key allocated successfully for doctor ID: fd762b46-96e8-463c-a96c-b978f83513d1
2025-02-08 21:52:21,536 - app.models.doctor - INFO - Doctor created successfully with id: fd762b46-96e8-463c-a96c-b978f83513d1
2025-02-08 21:52:21,536 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:52:21,536 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:54:06,975 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:54:06,999 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:54:06,999 - root - INFO - Getting database: Users
2025-02-08 21:54:06,999 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:06,999 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:07,126 - app.models.doctor - INFO - Creating doctor profile for email: test_141e3845@example.com
2025-02-08 21:54:07,126 - root - INFO - Getting database: Users
2025-02-08 21:54:07,126 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:07,126 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:07,573 - root - INFO - Getting database: Users
2025-02-08 21:54:07,573 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 21:54:07,786 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 13e1e081-0363-458e-a279-929c53839284
2025-02-08 21:54:07,786 - app.models.doctor - INFO - Doctor created successfully with id: 13e1e081-0363-458e-a279-929c53839284
2025-02-08 21:54:07,786 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 21:54:07,786 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 21:54:07,797 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:54:07,797 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:54:07,797 - root - INFO - Getting database: Users
2025-02-08 21:54:07,797 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:07,797 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:07,899 - app.routers.users - ERROR - Email is already registered: test_141e3845@example.com
2025-02-08 21:54:07,899 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:54:07,899 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:54:07,899 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:54:07,899 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:54:07,899 - root - INFO - Getting database: Users
2025-02-08 21:54:07,899 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:07,899 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:07,996 - app.routers.users - ERROR - Email is already registered: test_141e3845@example.com
2025-02-08 21:54:07,996 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:54:07,996 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:54:08,012 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:54:08,012 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:54:08,012 - root - INFO - Getting database: Users
2025-02-08 21:54:08,012 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:08,012 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:08,122 - app.routers.users - ERROR - Email is already registered: test_141e3845@example.com
2025-02-08 21:54:08,122 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:54:08,124 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:54:08,126 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:54:08,132 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_141e3845@example.com', 'password': 'securepassword123'}
2025-02-08 21:54:08,132 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_141e3845@example.com
2025-02-08 21:54:08,132 - root - INFO - Getting database: Users
2025-02-08 21:54:08,132 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:08,132 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:08,492 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_141e3845@example.com
2025-02-08 21:54:08,492 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 21:54:08,492 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 21:54:08,508 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 21:54:08,508 - root - INFO - Getting database: Users
2025-02-08 21:54:08,508 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:08,508 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:08,609 - app.routers.users - ERROR - Email is already registered: test_141e3845@example.com
2025-02-08 21:54:08,610 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 21:54:08,614 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 21:54:08,615 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 21:54:08,615 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_141e3845@example.com', 'password': 'wrongpassword'}
2025-02-08 21:54:08,615 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_141e3845@example.com
2025-02-08 21:54:08,615 - root - INFO - Getting database: Users
2025-02-08 21:54:08,615 - root - INFO - Getting collection: Doctors
2025-02-08 21:54:08,615 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 21:54:08,979 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: test_141e3845@example.com
2025-02-08 21:54:08,979 - app.utils.authentication - ERROR - HTTPException during authentication for email test_141e3845@example.com: Invalid password.
2025-02-08 21:54:08,979 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-08 22:02:25,921 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:02:25,934 - app.routers.users - INFO - Doctor registration input: {'email': 'test_141e3845@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:02:25,934 - root - INFO - Getting database: Users
2025-02-08 22:02:25,934 - root - INFO - Getting collection: Doctors
2025-02-08 22:02:25,934 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:02:26,031 - app.routers.users - ERROR - Email is already registered: test_141e3845@example.com
2025-02-08 22:02:26,031 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 22:02:26,031 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 22:03:09,479 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:03:09,492 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8b2c093c@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:03:09,492 - root - INFO - Getting database: Users
2025-02-08 22:03:09,492 - root - INFO - Getting collection: Doctors
2025-02-08 22:03:09,492 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:03:09,594 - app.models.doctor - INFO - Creating doctor profile for email: test_8b2c093c@example.com
2025-02-08 22:03:09,594 - root - INFO - Getting database: Users
2025-02-08 22:03:09,594 - root - INFO - Getting collection: Doctors
2025-02-08 22:03:09,594 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:03:10,050 - root - INFO - Getting database: Users
2025-02-08 22:03:10,050 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:03:10,264 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 1c6d78ae-dc2b-4803-9b74-07af73fc1359
2025-02-08 22:03:10,264 - app.models.doctor - INFO - Doctor created successfully with id: 1c6d78ae-dc2b-4803-9b74-07af73fc1359
2025-02-08 22:03:10,264 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:03:10,264 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:03:10,264 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:03:10,273 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_8b2c093c@example.com', 'password': 'securepassword123'}
2025-02-08 22:03:10,273 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_8b2c093c@example.com
2025-02-08 22:03:10,273 - root - INFO - Getting database: Users
2025-02-08 22:03:10,273 - root - INFO - Getting collection: Doctors
2025-02-08 22:03:10,273 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:03:10,637 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_8b2c093c@example.com
2025-02-08 22:03:10,637 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:03:10,637 - app.middleware.authentication - INFO - Checking Authorization header for /patients/register
2025-02-08 22:03:10,637 - app.middleware.authentication - INFO - Valid token received for /patients/register
2025-02-08 22:03:10,637 - httpx - INFO - HTTP Request: POST http://testserver/patients/register "HTTP/1.1 404 Not Found"
2025-02-08 22:06:03,452 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:06:03,459 - app.routers.users - INFO - Doctor registration input: {'email': 'test_7acc8cc7@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:06:03,459 - root - INFO - Getting database: Users
2025-02-08 22:06:03,459 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:03,459 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:03,563 - app.models.doctor - INFO - Creating doctor profile for email: test_7acc8cc7@example.com
2025-02-08 22:06:03,563 - root - INFO - Getting database: Users
2025-02-08 22:06:03,563 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:03,563 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:04,023 - root - INFO - Getting database: Users
2025-02-08 22:06:04,023 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:06:04,215 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 002ceefc-dbf4-4366-afde-0b9eaa44b605
2025-02-08 22:06:04,215 - app.models.doctor - INFO - Doctor created successfully with id: 002ceefc-dbf4-4366-afde-0b9eaa44b605
2025-02-08 22:06:04,215 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:06:04,231 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:06:04,231 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:06:04,236 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_7acc8cc7@example.com', 'password': 'securepassword123'}
2025-02-08 22:06:04,236 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_7acc8cc7@example.com
2025-02-08 22:06:04,236 - root - INFO - Getting database: Users
2025-02-08 22:06:04,236 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:04,236 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:04,599 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_7acc8cc7@example.com
2025-02-08 22:06:04,601 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:06:04,603 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:06:04,603 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:06:04,605 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:06:04,605 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwMmNlZWZjLWRiZjQtNDM2Ni1hZmRlLTBiOWVhYTQ0YjYwNSIsImVtYWlsIjoidGVzdF83YWNjOGNjN0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjM2NH0.7CxwAMpZqEW3Id8gNR3q2PUiRBWt3H01TUhozVXaYls
2025-02-08 22:06:04,607 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:06:04,607 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '002ceefc-dbf4-4366-afde-0b9eaa44b605', 'email': 'test_7acc8cc7@example.com', 'exp': 1739652364}
2025-02-08 22:06:04,607 - root - INFO - Getting database: Users
2025-02-08 22:06:04,607 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:04,607 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:04,708 - app.models.doctor - INFO - Doctor with id 002ceefc-dbf4-4366-afde-0b9eaa44b605 successfully authenticated.
2025-02-08 22:06:04,714 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:06:04,714 - root - INFO - Getting database: Users
2025-02-08 22:06:04,714 - root - INFO - Getting collection: Patients
2025-02-08 22:06:04,714 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:06:04,714 - app.models.patient - ERROR - An unexpected error occurred while creating patient: MongoDB can only handle up to 8-byte ints
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 89, in create_patient
    if patients.find_one({"patient_number": patient_number}):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\collection.py", line 1755, in find_one
    for result in cursor.limit(-1):
                  ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1752, in _run_operation
    return self._retryable_read(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1861, in _retryable_read
    return self._retry_internal(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1828, in _retry_internal
    ).run()
      ^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2565, in run
    return self._read() if self._is_read else self._write()
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2708, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1743, in _cmd
    return server.run_operation(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\helpers.py", line 47, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\server.py", line 170, in run_operation
    message = operation.get_message(read_preference, conn, use_cmd)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 1697, in get_message
    request_id, msg, size, _ = _op_msg(
                               ^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 419, in _op_msg
    return _op_msg_uncompressed(flags, command, identifier, docs, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OverflowError: MongoDB can only handle up to 8-byte ints
2025-02-08 22:06:04,724 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 500 Internal Server Error"
2025-02-08 22:06:55,217 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:06:55,228 - app.routers.users - INFO - Doctor registration input: {'email': 'test_1ab34ab7@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:06:55,228 - root - INFO - Getting database: Users
2025-02-08 22:06:55,228 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:55,228 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:55,330 - app.models.doctor - INFO - Creating doctor profile for email: test_1ab34ab7@example.com
2025-02-08 22:06:55,330 - root - INFO - Getting database: Users
2025-02-08 22:06:55,330 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:55,331 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:55,780 - root - INFO - Getting database: Users
2025-02-08 22:06:55,780 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:06:55,991 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 05900a4e-f1f5-4f66-816b-5c28d546ee76
2025-02-08 22:06:55,991 - app.models.doctor - INFO - Doctor created successfully with id: 05900a4e-f1f5-4f66-816b-5c28d546ee76
2025-02-08 22:06:55,991 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:06:55,991 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:06:56,011 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:06:56,017 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_1ab34ab7@example.com', 'password': 'securepassword123'}
2025-02-08 22:06:56,017 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_1ab34ab7@example.com
2025-02-08 22:06:56,017 - root - INFO - Getting database: Users
2025-02-08 22:06:56,017 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:56,017 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:56,357 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_1ab34ab7@example.com
2025-02-08 22:06:56,357 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:06:56,357 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:06:56,357 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:06:56,357 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:06:56,357 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA1OTAwYTRlLWYxZjUtNGY2Ni04MTZiLTVjMjhkNTQ2ZWU3NiIsImVtYWlsIjoidGVzdF8xYWIzNGFiN0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjQxNn0.h1Ir61ZX6XVQ6FryMj4_rFdThHshVqpMBSsRjM45C8A
2025-02-08 22:06:56,357 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:06:56,357 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '05900a4e-f1f5-4f66-816b-5c28d546ee76', 'email': 'test_1ab34ab7@example.com', 'exp': 1739652416}
2025-02-08 22:06:56,357 - root - INFO - Getting database: Users
2025-02-08 22:06:56,357 - root - INFO - Getting collection: Doctors
2025-02-08 22:06:56,357 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:06:56,462 - app.models.doctor - INFO - Doctor with id 05900a4e-f1f5-4f66-816b-5c28d546ee76 successfully authenticated.
2025-02-08 22:06:56,462 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:06:56,462 - root - INFO - Getting database: Users
2025-02-08 22:06:56,462 - root - INFO - Getting collection: Patients
2025-02-08 22:06:56,462 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:06:56,673 - app.models.patient - INFO - Patient created successfully with patient_number: 5007299606877391595
2025-02-08 22:06:56,673 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:06:56,681 - app.middleware.authentication - INFO - Checking Authorization header for /patients/c3840374-843d-48a7-863e-04bb00995c77
2025-02-08 22:06:56,681 - app.middleware.authentication - INFO - Valid token received for /patients/c3840374-843d-48a7-863e-04bb00995c77
2025-02-08 22:06:56,681 - httpx - INFO - HTTP Request: GET http://testserver/patients/c3840374-843d-48a7-863e-04bb00995c77 "HTTP/1.1 404 Not Found"
2025-02-08 22:08:16,230 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:08:16,244 - app.routers.users - INFO - Doctor registration input: {'email': 'test_1ecc681e@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:08:16,244 - root - INFO - Getting database: Users
2025-02-08 22:08:16,244 - root - INFO - Getting collection: Doctors
2025-02-08 22:08:16,244 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:08:16,345 - app.models.doctor - INFO - Creating doctor profile for email: test_1ecc681e@example.com
2025-02-08 22:08:16,345 - root - INFO - Getting database: Users
2025-02-08 22:08:16,345 - root - INFO - Getting collection: Doctors
2025-02-08 22:08:16,345 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:08:16,805 - root - INFO - Getting database: Users
2025-02-08 22:08:16,805 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:08:17,016 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 58f77a6c-309c-4396-9545-48e82f460bf0
2025-02-08 22:08:17,016 - app.models.doctor - INFO - Doctor created successfully with id: 58f77a6c-309c-4396-9545-48e82f460bf0
2025-02-08 22:08:17,016 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:08:17,016 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:08:17,016 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:08:17,016 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_1ecc681e@example.com', 'password': 'securepassword123'}
2025-02-08 22:08:17,016 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_1ecc681e@example.com
2025-02-08 22:08:17,016 - root - INFO - Getting database: Users
2025-02-08 22:08:17,016 - root - INFO - Getting collection: Doctors
2025-02-08 22:08:17,016 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:08:17,376 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_1ecc681e@example.com
2025-02-08 22:08:17,376 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:08:17,385 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:08:17,433 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:08:17,433 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:08:17,433 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU4Zjc3YTZjLTMwOWMtNDM5Ni05NTQ1LTQ4ZTgyZjQ2MGJmMCIsImVtYWlsIjoidGVzdF8xZWNjNjgxZUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjQ5N30.XiIzeMcGzVCiKI3_v0-2D7VQ35_JKw2czwbfucrPi0A
2025-02-08 22:08:17,433 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:08:17,433 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '58f77a6c-309c-4396-9545-48e82f460bf0', 'email': 'test_1ecc681e@example.com', 'exp': 1739652497}
2025-02-08 22:08:17,433 - root - INFO - Getting database: Users
2025-02-08 22:08:17,433 - root - INFO - Getting collection: Doctors
2025-02-08 22:08:17,433 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:08:17,544 - app.models.doctor - INFO - Doctor with id 58f77a6c-309c-4396-9545-48e82f460bf0 successfully authenticated.
2025-02-08 22:08:17,544 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:08:17,544 - root - INFO - Getting database: Users
2025-02-08 22:08:17,544 - root - INFO - Getting collection: Patients
2025-02-08 22:08:17,544 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:08:17,757 - app.models.patient - INFO - Patient created successfully with patient_number: 8644567373396462932
2025-02-08 22:08:17,757 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:08:17,757 - app.middleware.authentication - INFO - Checking Authorization header for /patients/52534e16-eb65-407a-9666-9fa0cc08844b
2025-02-08 22:08:17,757 - app.middleware.authentication - INFO - Valid token received for /patients/52534e16-eb65-407a-9666-9fa0cc08844b
2025-02-08 22:08:17,757 - httpx - INFO - HTTP Request: GET http://testserver/patients/52534e16-eb65-407a-9666-9fa0cc08844b "HTTP/1.1 404 Not Found"
2025-02-08 22:09:16,864 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:09:16,879 - app.routers.users - INFO - Doctor registration input: {'email': 'test_0738f0d3@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:09:16,879 - root - INFO - Getting database: Users
2025-02-08 22:09:16,880 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:16,880 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:16,980 - app.models.doctor - INFO - Creating doctor profile for email: test_0738f0d3@example.com
2025-02-08 22:09:16,980 - root - INFO - Getting database: Users
2025-02-08 22:09:16,980 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:16,980 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:17,460 - root - INFO - Getting database: Users
2025-02-08 22:09:17,460 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:09:17,672 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 2f11b024-f4f2-4ded-8c8a-94887bf1298c
2025-02-08 22:09:17,672 - app.models.doctor - INFO - Doctor created successfully with id: 2f11b024-f4f2-4ded-8c8a-94887bf1298c
2025-02-08 22:09:17,672 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:09:17,672 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:09:17,672 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:09:17,688 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_0738f0d3@example.com', 'password': 'securepassword123'}
2025-02-08 22:09:17,688 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_0738f0d3@example.com
2025-02-08 22:09:17,688 - root - INFO - Getting database: Users
2025-02-08 22:09:17,688 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:17,688 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:18,029 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_0738f0d3@example.com
2025-02-08 22:09:18,029 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:09:18,029 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:09:18,039 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:09:18,039 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:09:18,039 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJmMTFiMDI0LWY0ZjItNGRlZC04YzhhLTk0ODg3YmYxMjk4YyIsImVtYWlsIjoidGVzdF8wNzM4ZjBkM0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjU1OH0.B_qz_zM7zYkD8EMph7WP3-hY31F25_EMUWmmCDZsigQ
2025-02-08 22:09:18,039 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:09:18,039 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '2f11b024-f4f2-4ded-8c8a-94887bf1298c', 'email': 'test_0738f0d3@example.com', 'exp': 1739652558}
2025-02-08 22:09:18,039 - root - INFO - Getting database: Users
2025-02-08 22:09:18,039 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:18,039 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:18,137 - app.models.doctor - INFO - Doctor with id 2f11b024-f4f2-4ded-8c8a-94887bf1298c successfully authenticated.
2025-02-08 22:09:18,137 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:09:18,137 - root - INFO - Getting database: Users
2025-02-08 22:09:18,137 - root - INFO - Getting collection: Patients
2025-02-08 22:09:18,137 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:09:18,345 - app.models.patient - INFO - Patient created successfully with patient_number: 6674396203759783441
2025-02-08 22:09:18,361 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:09:18,361 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/78acefaa-a299-47f9-9901-2a59095dc852
2025-02-08 22:09:18,361 - app.middleware.authentication - INFO - Valid token received for /users/patients/78acefaa-a299-47f9-9901-2a59095dc852
2025-02-08 22:09:18,361 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:09:18,361 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJmMTFiMDI0LWY0ZjItNGRlZC04YzhhLTk0ODg3YmYxMjk4YyIsImVtYWlsIjoidGVzdF8wNzM4ZjBkM0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjU1OH0.B_qz_zM7zYkD8EMph7WP3-hY31F25_EMUWmmCDZsigQ
2025-02-08 22:09:18,361 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:09:18,361 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '2f11b024-f4f2-4ded-8c8a-94887bf1298c', 'email': 'test_0738f0d3@example.com', 'exp': 1739652558}
2025-02-08 22:09:18,361 - root - INFO - Getting database: Users
2025-02-08 22:09:18,361 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:18,361 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:18,466 - app.models.doctor - INFO - Doctor with id 2f11b024-f4f2-4ded-8c8a-94887bf1298c successfully authenticated.
2025-02-08 22:09:18,470 - httpx - INFO - HTTP Request: GET http://testserver/users/patients/78acefaa-a299-47f9-9901-2a59095dc852 "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 22:09:51,101 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:09:51,110 - app.routers.users - INFO - Doctor registration input: {'email': 'test_66f09e8c@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:09:51,120 - root - INFO - Getting database: Users
2025-02-08 22:09:51,120 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:51,120 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:51,222 - app.models.doctor - INFO - Creating doctor profile for email: test_66f09e8c@example.com
2025-02-08 22:09:51,222 - root - INFO - Getting database: Users
2025-02-08 22:09:51,222 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:51,222 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:51,697 - root - INFO - Getting database: Users
2025-02-08 22:09:51,697 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:09:51,903 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 348f00b2-36cd-4270-b4e5-17dd3c05c3e7
2025-02-08 22:09:51,903 - app.models.doctor - INFO - Doctor created successfully with id: 348f00b2-36cd-4270-b4e5-17dd3c05c3e7
2025-02-08 22:09:51,905 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:09:51,905 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:09:51,905 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:09:51,913 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_66f09e8c@example.com', 'password': 'securepassword123'}
2025-02-08 22:09:51,913 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_66f09e8c@example.com
2025-02-08 22:09:51,913 - root - INFO - Getting database: Users
2025-02-08 22:09:51,913 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:51,913 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:52,254 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_66f09e8c@example.com
2025-02-08 22:09:52,254 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:09:52,254 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:09:52,254 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:09:52,254 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:09:52,254 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjM0OGYwMGIyLTM2Y2QtNDI3MC1iNGU1LTE3ZGQzYzA1YzNlNyIsImVtYWlsIjoidGVzdF82NmYwOWU4Y0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjU5Mn0.rU9EkCbWfjZnXntG1EuQkP9Eu88f4GqRj3bFKdZv_mo
2025-02-08 22:09:52,254 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:09:52,254 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '348f00b2-36cd-4270-b4e5-17dd3c05c3e7', 'email': 'test_66f09e8c@example.com', 'exp': 1739652592}
2025-02-08 22:09:52,254 - root - INFO - Getting database: Users
2025-02-08 22:09:52,254 - root - INFO - Getting collection: Doctors
2025-02-08 22:09:52,254 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:09:52,367 - app.models.doctor - INFO - Doctor with id 348f00b2-36cd-4270-b4e5-17dd3c05c3e7 successfully authenticated.
2025-02-08 22:09:52,370 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:09:52,370 - root - INFO - Getting database: Users
2025-02-08 22:09:52,370 - root - INFO - Getting collection: Patients
2025-02-08 22:09:52,370 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:09:52,370 - app.models.patient - ERROR - An unexpected error occurred while creating patient: MongoDB can only handle up to 8-byte ints
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 89, in create_patient
    if patients.find_one({"patient_number": patient_number}):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\collection.py", line 1755, in find_one
    for result in cursor.limit(-1):
                  ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1752, in _run_operation
    return self._retryable_read(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1861, in _retryable_read
    return self._retry_internal(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1828, in _retry_internal
    ).run()
      ^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2565, in run
    return self._read() if self._is_read else self._write()
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2708, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1743, in _cmd
    return server.run_operation(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\helpers.py", line 47, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\server.py", line 170, in run_operation
    message = operation.get_message(read_preference, conn, use_cmd)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 1697, in get_message
    request_id, msg, size, _ = _op_msg(
                               ^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 419, in _op_msg
    return _op_msg_uncompressed(flags, command, identifier, docs, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OverflowError: MongoDB can only handle up to 8-byte ints
2025-02-08 22:09:52,385 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 500 Internal Server Error"
2025-02-08 22:11:49,480 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:11:49,508 - app.routers.users - INFO - Doctor registration input: {'email': 'test_cae090d9@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:11:49,508 - root - INFO - Getting database: Users
2025-02-08 22:11:49,509 - root - INFO - Getting collection: Doctors
2025-02-08 22:11:49,509 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:11:49,608 - app.models.doctor - INFO - Creating doctor profile for email: test_cae090d9@example.com
2025-02-08 22:11:49,608 - root - INFO - Getting database: Users
2025-02-08 22:11:49,608 - root - INFO - Getting collection: Doctors
2025-02-08 22:11:49,608 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:11:50,060 - root - INFO - Getting database: Users
2025-02-08 22:11:50,060 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:11:50,273 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 2d9b359d-d970-4209-bacb-a8853c78e3e7
2025-02-08 22:11:50,273 - app.models.doctor - INFO - Doctor created successfully with id: 2d9b359d-d970-4209-bacb-a8853c78e3e7
2025-02-08 22:11:50,273 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:11:50,276 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:11:50,280 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:11:50,284 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_cae090d9@example.com', 'password': 'securepassword123'}
2025-02-08 22:11:50,284 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_cae090d9@example.com
2025-02-08 22:11:50,284 - root - INFO - Getting database: Users
2025-02-08 22:11:50,284 - root - INFO - Getting collection: Doctors
2025-02-08 22:11:50,284 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:11:50,684 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_cae090d9@example.com
2025-02-08 22:11:50,684 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:11:50,684 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:11:50,684 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:11:50,700 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:11:50,700 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkOWIzNTlkLWQ5NzAtNDIwOS1iYWNiLWE4ODUzYzc4ZTNlNyIsImVtYWlsIjoidGVzdF9jYWUwOTBkOUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjcxMH0.drdqeE83fGwsWyUS_GD0AZqL85bIJG1Iy6ZPrmZ9BfE
2025-02-08 22:11:50,700 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:11:50,700 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '2d9b359d-d970-4209-bacb-a8853c78e3e7', 'email': 'test_cae090d9@example.com', 'exp': 1739652710}
2025-02-08 22:11:50,700 - root - INFO - Getting database: Users
2025-02-08 22:11:50,700 - root - INFO - Getting collection: Doctors
2025-02-08 22:11:50,700 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:11:50,790 - app.models.doctor - INFO - Doctor with id 2d9b359d-d970-4209-bacb-a8853c78e3e7 successfully authenticated.
2025-02-08 22:11:50,806 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:11:50,806 - root - INFO - Getting database: Users
2025-02-08 22:11:50,806 - root - INFO - Getting collection: Patients
2025-02-08 22:11:50,806 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:11:51,001 - app.models.patient - INFO - Patient created successfully with patient_number: 59558623
2025-02-08 22:11:51,001 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:11:51,017 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/e4243711-7c4a-44a1-9603-f47b9242ffec
2025-02-08 22:11:51,017 - app.middleware.authentication - INFO - Valid token received for /users/patients/e4243711-7c4a-44a1-9603-f47b9242ffec
2025-02-08 22:11:51,017 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:11:51,017 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjJkOWIzNTlkLWQ5NzAtNDIwOS1iYWNiLWE4ODUzYzc4ZTNlNyIsImVtYWlsIjoidGVzdF9jYWUwOTBkOUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1MjcxMH0.drdqeE83fGwsWyUS_GD0AZqL85bIJG1Iy6ZPrmZ9BfE
2025-02-08 22:11:51,017 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:11:51,017 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '2d9b359d-d970-4209-bacb-a8853c78e3e7', 'email': 'test_cae090d9@example.com', 'exp': 1739652710}
2025-02-08 22:11:51,017 - root - INFO - Getting database: Users
2025-02-08 22:11:51,017 - root - INFO - Getting collection: Doctors
2025-02-08 22:11:51,017 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:11:51,115 - app.models.doctor - INFO - Doctor with id 2d9b359d-d970-4209-bacb-a8853c78e3e7 successfully authenticated.
2025-02-08 22:11:51,115 - httpx - INFO - HTTP Request: GET http://testserver/users/patients/e4243711-7c4a-44a1-9603-f47b9242ffec "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 22:13:11,563 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:13:11,580 - app.routers.users - INFO - Doctor registration input: {'email': 'test_b82e655e@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:13:11,580 - root - INFO - Getting database: Users
2025-02-08 22:13:11,580 - root - INFO - Getting collection: Doctors
2025-02-08 22:13:11,580 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:13:11,671 - app.models.doctor - INFO - Creating doctor profile for email: test_b82e655e@example.com
2025-02-08 22:13:11,671 - root - INFO - Getting database: Users
2025-02-08 22:13:11,671 - root - INFO - Getting collection: Doctors
2025-02-08 22:13:11,671 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:13:12,205 - root - INFO - Getting database: Users
2025-02-08 22:13:12,205 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:13:12,414 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 22892a9a-a8f4-406c-9ee4-26bdb02b4068
2025-02-08 22:13:12,416 - app.models.doctor - INFO - Doctor created successfully with id: 22892a9a-a8f4-406c-9ee4-26bdb02b4068
2025-02-08 22:13:12,416 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:13:12,418 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:13:12,424 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:13:12,429 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_b82e655e@example.com', 'password': 'securepassword123'}
2025-02-08 22:13:12,429 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_b82e655e@example.com
2025-02-08 22:13:12,429 - root - INFO - Getting database: Users
2025-02-08 22:13:12,429 - root - INFO - Getting collection: Doctors
2025-02-08 22:13:12,429 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:13:12,811 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_b82e655e@example.com
2025-02-08 22:13:12,811 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:13:12,811 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:13:12,811 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:13:12,811 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:13:12,811 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIyODkyYTlhLWE4ZjQtNDA2Yy05ZWU0LTI2YmRiMDJiNDA2OCIsImVtYWlsIjoidGVzdF9iODJlNjU1ZUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1Mjc5Mn0.l9-nUrTmKxmzxYxh4eWO9IQKm4VsEvbXsdXJEJAWfFY
2025-02-08 22:13:12,811 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:13:12,811 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '22892a9a-a8f4-406c-9ee4-26bdb02b4068', 'email': 'test_b82e655e@example.com', 'exp': 1739652792}
2025-02-08 22:13:12,811 - root - INFO - Getting database: Users
2025-02-08 22:13:12,811 - root - INFO - Getting collection: Doctors
2025-02-08 22:13:12,811 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:13:12,924 - app.models.doctor - INFO - Doctor with id 22892a9a-a8f4-406c-9ee4-26bdb02b4068 successfully authenticated.
2025-02-08 22:13:12,924 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:13:12,924 - root - INFO - Getting database: Users
2025-02-08 22:13:12,924 - root - INFO - Getting collection: Patients
2025-02-08 22:13:12,924 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:13:13,134 - app.models.patient - INFO - Patient created successfully with patient_number: 57899396
2025-02-08 22:13:13,134 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:13:13,143 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/57899396
2025-02-08 22:13:13,143 - app.middleware.authentication - INFO - Valid token received for /users/patients/57899396
2025-02-08 22:13:13,143 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:13:13,143 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjIyODkyYTlhLWE4ZjQtNDA2Yy05ZWU0LTI2YmRiMDJiNDA2OCIsImVtYWlsIjoidGVzdF9iODJlNjU1ZUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1Mjc5Mn0.l9-nUrTmKxmzxYxh4eWO9IQKm4VsEvbXsdXJEJAWfFY
2025-02-08 22:13:13,143 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:13:13,143 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '22892a9a-a8f4-406c-9ee4-26bdb02b4068', 'email': 'test_b82e655e@example.com', 'exp': 1739652792}
2025-02-08 22:13:13,145 - root - INFO - Getting database: Users
2025-02-08 22:13:13,145 - root - INFO - Getting collection: Doctors
2025-02-08 22:13:13,145 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:13:13,240 - app.models.doctor - INFO - Doctor with id 22892a9a-a8f4-406c-9ee4-26bdb02b4068 successfully authenticated.
2025-02-08 22:13:13,251 - app.models.patient - INFO - Fetching patient with patient_number: 57899396
2025-02-08 22:13:13,251 - root - INFO - Getting database: Users
2025-02-08 22:13:13,251 - root - INFO - Getting collection: Patients
2025-02-08 22:13:13,251 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:13:13,346 - app.models.patient - INFO - Patient found: Jane Smith (patient_number: 57899396)
2025-02-08 22:13:13,346 - httpx - INFO - HTTP Request: GET http://testserver/users/patients/57899396 "HTTP/1.1 200 OK"
2025-02-08 22:44:46,681 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:44:46,699 - app.routers.users - INFO - Doctor registration input: {'email': 'test_5c85e5f4@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:44:46,708 - root - INFO - Getting database: Users
2025-02-08 22:44:46,708 - root - INFO - Getting collection: Doctors
2025-02-08 22:44:46,708 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:44:46,805 - app.models.doctor - INFO - Creating doctor profile for email: test_5c85e5f4@example.com
2025-02-08 22:44:46,805 - root - INFO - Getting database: Users
2025-02-08 22:44:46,805 - root - INFO - Getting collection: Doctors
2025-02-08 22:44:46,805 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:44:47,187 - root - INFO - Getting database: Users
2025-02-08 22:44:47,187 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:44:47,395 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 6a5370f0-6740-4db6-b5b6-b230209e1b23
2025-02-08 22:44:47,395 - app.models.doctor - INFO - Doctor created successfully with id: 6a5370f0-6740-4db6-b5b6-b230209e1b23
2025-02-08 22:44:47,395 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:44:47,395 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:44:47,411 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:44:47,423 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_5c85e5f4@example.com', 'password': 'securepassword123'}
2025-02-08 22:44:47,423 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_5c85e5f4@example.com
2025-02-08 22:44:47,423 - root - INFO - Getting database: Users
2025-02-08 22:44:47,423 - root - INFO - Getting collection: Doctors
2025-02-08 22:44:47,427 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:44:47,783 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_5c85e5f4@example.com
2025-02-08 22:44:47,783 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:44:47,783 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:44:47,783 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:44:47,783 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:44:47,783 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZhNTM3MGYwLTY3NDAtNGRiNi1iNWI2LWIyMzAyMDllMWIyMyIsImVtYWlsIjoidGVzdF81Yzg1ZTVmNEBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NDY4N30.YtpCeF6lq2rOxiPw1EPEsKrIJDN0_qxt6soYqCn-4Qc
2025-02-08 22:44:47,783 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:44:47,783 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '6a5370f0-6740-4db6-b5b6-b230209e1b23', 'email': 'test_5c85e5f4@example.com', 'exp': 1739654687}
2025-02-08 22:44:47,783 - root - INFO - Getting database: Users
2025-02-08 22:44:47,783 - root - INFO - Getting collection: Doctors
2025-02-08 22:44:47,783 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:44:47,889 - app.models.doctor - INFO - Doctor with id 6a5370f0-6740-4db6-b5b6-b230209e1b23 successfully authenticated.
2025-02-08 22:44:47,893 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:44:47,893 - root - INFO - Getting database: Users
2025-02-08 22:44:47,893 - root - INFO - Getting collection: Patients
2025-02-08 22:44:47,893 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:44:48,100 - app.models.patient - INFO - Patient created successfully with patient_number: 77979961
2025-02-08 22:44:48,100 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:44:48,100 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 22:44:48,100 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 22:44:48,115 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 22:47:33,619 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:47:33,638 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 22:47:33,638 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 22:47:33,639 - root - INFO - Getting database: Users
2025-02-08 22:47:33,639 - root - INFO - Getting collection: Doctors
2025-02-08 22:47:33,641 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:47:34,076 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 22:47:42,127 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 22:47:52,662 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:47:52,676 - app.routers.users - INFO - Doctor registration input: {'email': 'test_bd3e8493@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:47:52,676 - root - ERROR - Failed to retrieve doctor collection: Not connected to MongoDB. Call connect() first.
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 35, in get_doctor_collection
    db = db_handler.get_collection(
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 101, in get_collection
    db = self.get_database(database)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 85, in get_database
    raise ConnectionFailure("Not connected to MongoDB. Call connect() first.")
pymongo.errors.ConnectionFailure: Not connected to MongoDB. Call connect() first.
2025-02-08 22:47:52,677 - app.routers.users - ERROR - Error creating doctor: Not connected to MongoDB. Call connect() first.
2025-02-08 22:47:52,680 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 22:48:33,338 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:48:33,354 - app.routers.users - INFO - Doctor registration input: {'email': 'test_a66560b2@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:48:33,354 - root - ERROR - Failed to retrieve doctor collection: Not connected to MongoDB. Call connect() first.
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 35, in get_doctor_collection
    db = db_handler.get_collection(
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 101, in get_collection
    db = self.get_database(database)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 85, in get_database
    raise ConnectionFailure("Not connected to MongoDB. Call connect() first.")
pymongo.errors.ConnectionFailure: Not connected to MongoDB. Call connect() first.
2025-02-08 22:48:33,355 - app.routers.users - ERROR - Error creating doctor: Not connected to MongoDB. Call connect() first.
2025-02-08 22:48:33,357 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 22:48:52,265 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:48:52,279 - app.routers.users - INFO - Doctor registration input: {'email': 'test_5fe20129@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:48:52,279 - root - ERROR - Failed to retrieve doctor collection: Not connected to MongoDB. Call connect() first.
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 35, in get_doctor_collection
    db = db_handler.get_collection(
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 101, in get_collection
    db = self.get_database(database)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 85, in get_database
    raise ConnectionFailure("Not connected to MongoDB. Call connect() first.")
pymongo.errors.ConnectionFailure: Not connected to MongoDB. Call connect() first.
2025-02-08 22:48:52,281 - app.routers.users - ERROR - Error creating doctor: Not connected to MongoDB. Call connect() first.
2025-02-08 22:48:52,282 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 22:52:30,246 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:52:30,262 - app.routers.users - INFO - Doctor registration input: {'email': 'test_d7b66fe5@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:52:30,262 - root - INFO - Getting database: Users
2025-02-08 22:52:30,262 - root - INFO - Getting collection: Doctors
2025-02-08 22:52:30,262 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:52:30,365 - app.models.doctor - INFO - Creating doctor profile for email: test_d7b66fe5@example.com
2025-02-08 22:52:30,365 - root - INFO - Getting database: Users
2025-02-08 22:52:30,365 - root - INFO - Getting collection: Doctors
2025-02-08 22:52:30,366 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:52:30,729 - root - INFO - Getting database: Users
2025-02-08 22:52:30,729 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:52:30,941 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 08e01d7c-1193-42cf-bff5-89f4093ea4f7
2025-02-08 22:52:30,942 - app.models.doctor - INFO - Doctor created successfully with id: 08e01d7c-1193-42cf-bff5-89f4093ea4f7
2025-02-08 22:52:30,942 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:52:30,947 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:52:30,956 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:52:30,964 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_d7b66fe5@example.com', 'password': 'securepassword123'}
2025-02-08 22:52:30,964 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_d7b66fe5@example.com
2025-02-08 22:52:30,965 - root - INFO - Getting database: Users
2025-02-08 22:52:30,965 - root - INFO - Getting collection: Doctors
2025-02-08 22:52:30,965 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:52:31,315 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_d7b66fe5@example.com
2025-02-08 22:52:31,317 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:52:31,321 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:52:31,322 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:52:31,324 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:52:31,324 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA4ZTAxZDdjLTExOTMtNDJjZi1iZmY1LTg5ZjQwOTNlYTRmNyIsImVtYWlsIjoidGVzdF9kN2I2NmZlNUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NTE1MX0.iF_2lhFoYvihKhlFW49-roA8GZXJnYOfFQlBJzCqdiw
2025-02-08 22:52:31,324 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:52:31,324 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '08e01d7c-1193-42cf-bff5-89f4093ea4f7', 'email': 'test_d7b66fe5@example.com', 'exp': 1739655151}
2025-02-08 22:52:31,324 - root - INFO - Getting database: Users
2025-02-08 22:52:31,324 - root - INFO - Getting collection: Doctors
2025-02-08 22:52:31,324 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:52:31,432 - app.models.doctor - INFO - Doctor with id 08e01d7c-1193-42cf-bff5-89f4093ea4f7 successfully authenticated.
2025-02-08 22:52:31,438 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:52:31,438 - root - INFO - Getting database: Users
2025-02-08 22:52:31,438 - root - INFO - Getting collection: Patients
2025-02-08 22:52:31,438 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:52:31,652 - app.models.patient - INFO - Patient created successfully with patient_number: 91491838
2025-02-08 22:52:31,655 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:52:31,658 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 22:52:31,658 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 22:52:31,673 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 22:54:34,404 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:54:34,425 - app.routers.users - INFO - Doctor registration input: {'email': 'test_274203f3@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:54:34,425 - root - INFO - Getting database: Users
2025-02-08 22:54:34,425 - root - INFO - Getting collection: Doctors
2025-02-08 22:54:34,425 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:54:34,525 - app.models.doctor - INFO - Creating doctor profile for email: test_274203f3@example.com
2025-02-08 22:54:34,525 - root - INFO - Getting database: Users
2025-02-08 22:54:34,525 - root - INFO - Getting collection: Doctors
2025-02-08 22:54:34,533 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:54:34,901 - root - INFO - Getting database: Users
2025-02-08 22:54:34,901 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:54:35,110 - app.models.api_key - INFO - API key allocated successfully for doctor ID: f2135ddf-07ce-4859-ae01-f60eae6a000b
2025-02-08 22:54:35,110 - app.models.doctor - INFO - Doctor created successfully with id: f2135ddf-07ce-4859-ae01-f60eae6a000b
2025-02-08 22:54:35,110 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:54:35,117 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:54:35,126 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:54:35,140 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_274203f3@example.com', 'password': 'securepassword123'}
2025-02-08 22:54:35,140 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_274203f3@example.com
2025-02-08 22:54:35,140 - root - INFO - Getting database: Users
2025-02-08 22:54:35,140 - root - INFO - Getting collection: Doctors
2025-02-08 22:54:35,140 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:54:35,491 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_274203f3@example.com
2025-02-08 22:54:35,491 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:54:35,491 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:54:35,491 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:54:35,491 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:54:35,491 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImYyMTM1ZGRmLTA3Y2UtNDg1OS1hZTAxLWY2MGVhZTZhMDAwYiIsImVtYWlsIjoidGVzdF8yNzQyMDNmM0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NTI3NX0.3x1WqDppMhQgd78IcDRc3YsHw8jFeg1ft3UFA4YnFPw
2025-02-08 22:54:35,491 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:54:35,491 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'f2135ddf-07ce-4859-ae01-f60eae6a000b', 'email': 'test_274203f3@example.com', 'exp': 1739655275}
2025-02-08 22:54:35,491 - root - INFO - Getting database: Users
2025-02-08 22:54:35,491 - root - INFO - Getting collection: Doctors
2025-02-08 22:54:35,491 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:54:35,607 - app.models.doctor - INFO - Doctor with id f2135ddf-07ce-4859-ae01-f60eae6a000b successfully authenticated.
2025-02-08 22:54:35,627 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:54:35,627 - root - INFO - Getting database: Users
2025-02-08 22:54:35,627 - root - INFO - Getting collection: Patients
2025-02-08 22:54:35,627 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:54:35,847 - app.models.patient - INFO - Patient created successfully with patient_number: 17445200
2025-02-08 22:54:35,847 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:54:35,863 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 22:54:35,863 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 22:54:35,879 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases?patient_number=17445200 "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 22:59:55,514 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 22:59:55,530 - app.routers.users - INFO - Doctor registration input: {'email': 'test_ca346cc7@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 22:59:55,530 - root - INFO - Getting database: Users
2025-02-08 22:59:55,530 - root - INFO - Getting collection: Doctors
2025-02-08 22:59:55,530 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:59:55,644 - app.models.doctor - INFO - Creating doctor profile for email: test_ca346cc7@example.com
2025-02-08 22:59:55,644 - root - INFO - Getting database: Users
2025-02-08 22:59:55,644 - root - INFO - Getting collection: Doctors
2025-02-08 22:59:55,644 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:59:56,011 - root - INFO - Getting database: Users
2025-02-08 22:59:56,011 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 22:59:56,221 - app.models.api_key - INFO - API key allocated successfully for doctor ID: aa3674ed-20bf-4abd-8afd-4a6423f0b01e
2025-02-08 22:59:56,221 - app.models.doctor - INFO - Doctor created successfully with id: aa3674ed-20bf-4abd-8afd-4a6423f0b01e
2025-02-08 22:59:56,221 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 22:59:56,221 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 22:59:56,221 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 22:59:56,221 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_ca346cc7@example.com', 'password': 'securepassword123'}
2025-02-08 22:59:56,221 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_ca346cc7@example.com
2025-02-08 22:59:56,221 - root - INFO - Getting database: Users
2025-02-08 22:59:56,221 - root - INFO - Getting collection: Doctors
2025-02-08 22:59:56,221 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:59:56,572 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_ca346cc7@example.com
2025-02-08 22:59:56,572 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 22:59:56,572 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 22:59:56,572 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 22:59:56,572 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 22:59:56,572 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFhMzY3NGVkLTIwYmYtNGFiZC04YWZkLTRhNjQyM2YwYjAxZSIsImVtYWlsIjoidGVzdF9jYTM0NmNjN0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NTU5Nn0.qB2joJSGQ6l-qGLaUMhZMJS6ooy57PWLslaQo-GBgkw
2025-02-08 22:59:56,572 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 22:59:56,572 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'aa3674ed-20bf-4abd-8afd-4a6423f0b01e', 'email': 'test_ca346cc7@example.com', 'exp': 1739655596}
2025-02-08 22:59:56,572 - root - INFO - Getting database: Users
2025-02-08 22:59:56,572 - root - INFO - Getting collection: Doctors
2025-02-08 22:59:56,572 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 22:59:56,668 - app.models.doctor - INFO - Doctor with id aa3674ed-20bf-4abd-8afd-4a6423f0b01e successfully authenticated.
2025-02-08 22:59:56,687 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 22:59:56,687 - root - INFO - Getting database: Users
2025-02-08 22:59:56,687 - root - INFO - Getting collection: Patients
2025-02-08 22:59:56,687 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 22:59:56,895 - app.models.patient - INFO - Patient created successfully with patient_number: 39353315
2025-02-08 22:59:56,895 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 22:59:56,905 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 22:59:56,905 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 22:59:56,911 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:02:55,720 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:02:55,752 - app.routers.users - INFO - Doctor registration input: {'email': 'test_27c30ec6@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:02:55,752 - root - INFO - Getting database: Users
2025-02-08 23:02:55,752 - root - INFO - Getting collection: Doctors
2025-02-08 23:02:55,752 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:02:55,852 - app.models.doctor - INFO - Creating doctor profile for email: test_27c30ec6@example.com
2025-02-08 23:02:55,852 - root - INFO - Getting database: Users
2025-02-08 23:02:55,852 - root - INFO - Getting collection: Doctors
2025-02-08 23:02:55,852 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:02:56,202 - root - INFO - Getting database: Users
2025-02-08 23:02:56,202 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:02:56,314 - app.models.api_key - ERROR - Error allocating API key: type object 'datetime.datetime' has no attribute 'UTC'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\api_key.py", line 111, in allocate_api_key
    "created_at": datetime.now(datetime.UTC),
                               ^^^^^^^^^^^^
AttributeError: type object 'datetime.datetime' has no attribute 'UTC'
2025-02-08 23:02:56,314 - app.models.doctor - ERROR - An unexpected error occurred while creating doctor: 500: An error occurred while allocating the API key: type object 'datetime.datetime' has no attribute 'UTC'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\api_key.py", line 111, in allocate_api_key
    "created_at": datetime.now(datetime.UTC),
                               ^^^^^^^^^^^^
AttributeError: type object 'datetime.datetime' has no attribute 'UTC'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 95, in create_doctor
    api_key = allocate_api_key(doctor_data["doctor_id"])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\api_key.py", line 129, in allocate_api_key
    raise HTTPException(
fastapi.exceptions.HTTPException: 500: An error occurred while allocating the API key: type object 'datetime.datetime' has no attribute 'UTC'
2025-02-08 23:02:56,314 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:02:56,314 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:03:58,123 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:03:58,150 - app.routers.users - INFO - Doctor registration input: {'email': 'test_befa6340@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:03:58,150 - root - INFO - Getting database: Users
2025-02-08 23:03:58,150 - root - INFO - Getting collection: Doctors
2025-02-08 23:03:58,150 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:03:58,246 - app.models.doctor - INFO - Creating doctor profile for email: test_befa6340@example.com
2025-02-08 23:03:58,246 - root - INFO - Getting database: Users
2025-02-08 23:03:58,246 - root - INFO - Getting collection: Doctors
2025-02-08 23:03:58,246 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:03:58,483 - app.models.doctor - ERROR - An unexpected error occurred while creating doctor: type object 'datetime.datetime' has no attribute 'UTC'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 81, in create_doctor
    "created_at": datetime.now(datetime.UTC),
                               ^^^^^^^^^^^^
AttributeError: type object 'datetime.datetime' has no attribute 'UTC'
2025-02-08 23:03:58,499 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:03:58,499 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:06:03,795 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:06:03,803 - app.routers.users - INFO - Doctor registration input: {'email': 'test_88247dd8@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:06:03,803 - root - INFO - Getting database: Users
2025-02-08 23:06:03,803 - root - INFO - Getting collection: Doctors
2025-02-08 23:06:03,803 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:06:03,914 - app.models.doctor - INFO - Creating doctor profile for email: test_88247dd8@example.com
2025-02-08 23:06:03,914 - root - INFO - Getting database: Users
2025-02-08 23:06:03,914 - root - INFO - Getting collection: Doctors
2025-02-08 23:06:03,914 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:06:04,171 - app.models.doctor - ERROR - An unexpected error occurred while creating doctor: type object 'datetime.datetime' has no attribute 'UTC'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 81, in create_doctor
    "created_at": datetime.now(datetime.UTC),
                               ^^^^^^^^^^^^
AttributeError: type object 'datetime.datetime' has no attribute 'UTC'
2025-02-08 23:06:04,171 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:06:04,173 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:10:59,089 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:10:59,105 - app.routers.users - INFO - Doctor registration input: {'email': 'test_74d216e9@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:10:59,121 - root - INFO - Getting database: Users
2025-02-08 23:10:59,121 - root - INFO - Getting collection: Doctors
2025-02-08 23:10:59,121 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:10:59,216 - app.models.doctor - INFO - Creating doctor profile for email: test_74d216e9@example.com
2025-02-08 23:10:59,216 - root - INFO - Getting database: Users
2025-02-08 23:10:59,216 - root - INFO - Getting collection: Doctors
2025-02-08 23:10:59,216 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:10:59,661 - root - INFO - Getting database: Users
2025-02-08 23:10:59,661 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:10:59,868 - app.models.api_key - INFO - API key allocated successfully for doctor ID: a24cc0b9-6d23-4987-9f81-7af22e6a848e
2025-02-08 23:10:59,868 - app.models.doctor - INFO - Doctor created successfully with id: a24cc0b9-6d23-4987-9f81-7af22e6a848e
2025-02-08 23:10:59,868 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:10:59,868 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:10:59,868 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:10:59,884 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_74d216e9@example.com', 'password': 'securepassword123'}
2025-02-08 23:10:59,884 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_74d216e9@example.com
2025-02-08 23:10:59,884 - root - INFO - Getting database: Users
2025-02-08 23:10:59,884 - root - INFO - Getting collection: Doctors
2025-02-08 23:10:59,884 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:11:00,368 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_74d216e9@example.com
2025-02-08 23:11:00,370 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:11:00,373 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:11:00,373 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:11:00,375 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:11:00,375 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImEyNGNjMGI5LTZkMjMtNDk4Ny05ZjgxLTdhZjIyZTZhODQ4ZSIsImVtYWlsIjoidGVzdF83NGQyMTZlOUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NjI2MH0.jyLD-PKidebD9zMuQH_lm7FoDIDTLxSlZHvtRnJeDsc
2025-02-08 23:11:00,375 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:11:00,375 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'a24cc0b9-6d23-4987-9f81-7af22e6a848e', 'email': 'test_74d216e9@example.com', 'exp': 1739656260}
2025-02-08 23:11:00,375 - root - INFO - Getting database: Users
2025-02-08 23:11:00,375 - root - INFO - Getting collection: Doctors
2025-02-08 23:11:00,375 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:11:00,475 - app.models.doctor - INFO - Doctor with id a24cc0b9-6d23-4987-9f81-7af22e6a848e successfully authenticated.
2025-02-08 23:11:00,483 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:11:00,484 - root - INFO - Getting database: Users
2025-02-08 23:11:00,484 - root - INFO - Getting collection: Patients
2025-02-08 23:11:00,484 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:11:00,691 - app.models.patient - INFO - Patient created successfully with patient_number: 30959893
2025-02-08 23:11:00,691 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:11:00,691 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:11:00,691 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:11:00,691 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:12:51,101 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:12:51,114 - app.routers.users - INFO - Doctor registration input: {'email': 'test_536e8821@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:12:51,114 - root - INFO - Getting database: Users
2025-02-08 23:12:51,114 - root - INFO - Getting collection: Doctors
2025-02-08 23:12:51,114 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:12:51,212 - app.models.doctor - INFO - Creating doctor profile for email: test_536e8821@example.com
2025-02-08 23:12:51,212 - root - INFO - Getting database: Users
2025-02-08 23:12:51,212 - root - INFO - Getting collection: Doctors
2025-02-08 23:12:51,212 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:12:51,562 - root - INFO - Getting database: Users
2025-02-08 23:12:51,562 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:12:51,774 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 6cae5b11-e784-4929-a3af-e8c0fc6d3d7a
2025-02-08 23:12:51,774 - app.models.doctor - INFO - Doctor created successfully with id: 6cae5b11-e784-4929-a3af-e8c0fc6d3d7a
2025-02-08 23:12:51,774 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:12:51,774 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:12:51,774 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:12:51,774 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_536e8821@example.com', 'password': 'securepassword123'}
2025-02-08 23:12:51,774 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_536e8821@example.com
2025-02-08 23:12:51,774 - root - INFO - Getting database: Users
2025-02-08 23:12:51,774 - root - INFO - Getting collection: Doctors
2025-02-08 23:12:51,774 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:12:52,142 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_536e8821@example.com
2025-02-08 23:12:52,142 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:12:52,142 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:12:52,142 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:12:52,142 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:12:52,142 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjZjYWU1YjExLWU3ODQtNDkyOS1hM2FmLWU4YzBmYzZkM2Q3YSIsImVtYWlsIjoidGVzdF81MzZlODgyMUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NjM3Mn0.bIjnqljRjFGgRe970XvngoHlqVicz7rkSgooJ9TVWPE
2025-02-08 23:12:52,142 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:12:52,142 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '6cae5b11-e784-4929-a3af-e8c0fc6d3d7a', 'email': 'test_536e8821@example.com', 'exp': 1739656372}
2025-02-08 23:12:52,142 - root - INFO - Getting database: Users
2025-02-08 23:12:52,142 - root - INFO - Getting collection: Doctors
2025-02-08 23:12:52,142 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:12:52,255 - app.models.doctor - INFO - Doctor with id 6cae5b11-e784-4929-a3af-e8c0fc6d3d7a successfully authenticated.
2025-02-08 23:12:52,255 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:12:52,255 - root - INFO - Getting database: Users
2025-02-08 23:12:52,255 - root - INFO - Getting collection: Patients
2025-02-08 23:12:52,255 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:12:52,465 - app.models.patient - INFO - Patient created successfully with patient_number: 65222806
2025-02-08 23:12:52,465 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:12:52,465 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:12:52,465 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:12:52,482 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:16:33,895 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:16:33,913 - app.routers.users - INFO - Doctor registration input: {'email': 'test_94b570fb@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:16:33,913 - root - ERROR - Failed to retrieve doctor collection: Not connected to MongoDB. Call connect() first.
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\doctor.py", line 35, in get_doctor_collection
    db = db_handler.get_collection(
         ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 101, in get_collection
    db = self.get_database(database)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\db\MongoDB.py", line 85, in get_database
    raise ConnectionFailure("Not connected to MongoDB. Call connect() first.")
pymongo.errors.ConnectionFailure: Not connected to MongoDB. Call connect() first.
2025-02-08 23:16:33,913 - app.routers.users - ERROR - Error creating doctor: Not connected to MongoDB. Call connect() first.
2025-02-08 23:16:33,913 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:17:48,404 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:17:48,420 - app.routers.users - INFO - Doctor registration input: {'email': 'test_b91d977e@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:17:48,420 - root - INFO - Getting database: Users
2025-02-08 23:17:48,420 - root - INFO - Getting collection: Doctors
2025-02-08 23:17:48,420 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:17:48,530 - app.models.doctor - INFO - Creating doctor profile for email: test_b91d977e@example.com
2025-02-08 23:17:48,530 - root - INFO - Getting database: Users
2025-02-08 23:17:48,531 - root - INFO - Getting collection: Doctors
2025-02-08 23:17:48,531 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:17:48,912 - root - INFO - Getting database: Users
2025-02-08 23:17:48,912 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:17:49,123 - app.models.api_key - INFO - API key allocated successfully for doctor ID: ae8b8fd1-8553-45b7-b03d-23720accd57f
2025-02-08 23:17:49,123 - app.models.doctor - INFO - Doctor created successfully with id: ae8b8fd1-8553-45b7-b03d-23720accd57f
2025-02-08 23:17:49,123 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:17:49,123 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:17:49,133 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:17:49,143 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_b91d977e@example.com', 'password': 'securepassword123'}
2025-02-08 23:17:49,143 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_b91d977e@example.com
2025-02-08 23:17:49,143 - root - INFO - Getting database: Users
2025-02-08 23:17:49,143 - root - INFO - Getting collection: Doctors
2025-02-08 23:17:49,143 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:17:49,497 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_b91d977e@example.com
2025-02-08 23:17:49,504 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:17:49,504 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:17:49,504 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:17:49,504 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:17:49,504 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFlOGI4ZmQxLTg1NTMtNDViNy1iMDNkLTIzNzIwYWNjZDU3ZiIsImVtYWlsIjoidGVzdF9iOTFkOTc3ZUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NjY2OX0.njVtWMMymlcTaofNlygw1U6E-qNa8w0hpRLX-yfHBcU
2025-02-08 23:17:49,504 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:17:49,504 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'ae8b8fd1-8553-45b7-b03d-23720accd57f', 'email': 'test_b91d977e@example.com', 'exp': 1739656669}
2025-02-08 23:17:49,504 - root - INFO - Getting database: Users
2025-02-08 23:17:49,504 - root - INFO - Getting collection: Doctors
2025-02-08 23:17:49,504 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:17:49,600 - app.models.doctor - INFO - Doctor with id ae8b8fd1-8553-45b7-b03d-23720accd57f successfully authenticated.
2025-02-08 23:17:49,612 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:17:49,612 - root - INFO - Getting database: Users
2025-02-08 23:17:49,612 - root - INFO - Getting collection: Patients
2025-02-08 23:17:49,612 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:17:49,809 - app.models.patient - INFO - Patient created successfully with patient_number: 44645182
2025-02-08 23:17:49,809 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:17:49,809 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/44645182
2025-02-08 23:17:49,809 - app.middleware.authentication - INFO - Valid token received for /users/patients/44645182
2025-02-08 23:17:49,809 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:17:49,809 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImFlOGI4ZmQxLTg1NTMtNDViNy1iMDNkLTIzNzIwYWNjZDU3ZiIsImVtYWlsIjoidGVzdF9iOTFkOTc3ZUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NjY2OX0.njVtWMMymlcTaofNlygw1U6E-qNa8w0hpRLX-yfHBcU
2025-02-08 23:17:49,822 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:17:49,822 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'ae8b8fd1-8553-45b7-b03d-23720accd57f', 'email': 'test_b91d977e@example.com', 'exp': 1739656669}
2025-02-08 23:17:49,822 - root - INFO - Getting database: Users
2025-02-08 23:17:49,822 - root - INFO - Getting collection: Doctors
2025-02-08 23:17:49,822 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:17:49,922 - app.models.doctor - INFO - Doctor with id ae8b8fd1-8553-45b7-b03d-23720accd57f successfully authenticated.
2025-02-08 23:17:49,922 - app.models.patient - INFO - Fetching patient with patient_number: 44645182
2025-02-08 23:17:49,922 - root - INFO - Getting database: Users
2025-02-08 23:17:49,922 - root - INFO - Getting collection: Patients
2025-02-08 23:17:49,922 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:17:50,020 - app.models.patient - INFO - Patient found: Jane Smith (patient_number: 44645182)
2025-02-08 23:17:50,027 - httpx - INFO - HTTP Request: GET http://testserver/users/patients/44645182 "HTTP/1.1 200 OK"
2025-02-08 23:18:51,055 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:18:51,084 - app.routers.users - INFO - Doctor registration input: {'email': 'test_64d5eaaa@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:18:51,086 - root - INFO - Getting database: Users
2025-02-08 23:18:51,086 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:51,086 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:51,187 - app.models.doctor - INFO - Creating doctor profile for email: test_64d5eaaa@example.com
2025-02-08 23:18:51,187 - root - INFO - Getting database: Users
2025-02-08 23:18:51,191 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:51,191 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:51,718 - root - INFO - Getting database: Users
2025-02-08 23:18:51,718 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:18:51,926 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 64fa4050-ed5a-4a54-ae99-346b9a53a2a9
2025-02-08 23:18:51,926 - app.models.doctor - INFO - Doctor created successfully with id: 64fa4050-ed5a-4a54-ae99-346b9a53a2a9
2025-02-08 23:18:51,926 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:18:51,926 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:18:51,941 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:18:51,946 - app.routers.users - INFO - Doctor registration input: {'email': 'test_64d5eaaa@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:18:51,946 - root - INFO - Getting database: Users
2025-02-08 23:18:51,946 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:51,946 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:52,046 - app.routers.users - ERROR - Email is already registered: test_64d5eaaa@example.com
2025-02-08 23:18:52,046 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 23:18:52,046 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 23:18:52,053 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:18:52,057 - app.routers.users - INFO - Doctor registration input: {'email': 'test_64d5eaaa@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:18:52,057 - root - INFO - Getting database: Users
2025-02-08 23:18:52,057 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:52,057 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:52,152 - app.routers.users - ERROR - Email is already registered: test_64d5eaaa@example.com
2025-02-08 23:18:52,152 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 23:18:52,152 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 23:18:52,164 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:18:52,164 - app.routers.users - INFO - Doctor registration input: {'email': 'test_64d5eaaa@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:18:52,164 - root - INFO - Getting database: Users
2025-02-08 23:18:52,164 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:52,164 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:52,260 - app.routers.users - ERROR - Email is already registered: test_64d5eaaa@example.com
2025-02-08 23:18:52,260 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 23:18:52,260 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 23:18:52,260 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:18:52,260 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_64d5eaaa@example.com', 'password': 'securepassword123'}
2025-02-08 23:18:52,260 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_64d5eaaa@example.com
2025-02-08 23:18:52,260 - root - INFO - Getting database: Users
2025-02-08 23:18:52,260 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:52,276 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:52,646 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_64d5eaaa@example.com
2025-02-08 23:18:52,646 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:18:52,659 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:18:52,659 - app.routers.users - INFO - Doctor registration input: {'email': 'test_64d5eaaa@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:18:52,659 - root - INFO - Getting database: Users
2025-02-08 23:18:52,659 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:52,659 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:52,755 - app.routers.users - ERROR - Email is already registered: test_64d5eaaa@example.com
2025-02-08 23:18:52,755 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-08 23:18:52,755 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-08 23:18:52,755 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:18:52,755 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_64d5eaaa@example.com', 'password': 'wrongpassword'}
2025-02-08 23:18:52,755 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_64d5eaaa@example.com
2025-02-08 23:18:52,755 - root - INFO - Getting database: Users
2025-02-08 23:18:52,755 - root - INFO - Getting collection: Doctors
2025-02-08 23:18:52,755 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:18:53,171 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: test_64d5eaaa@example.com
2025-02-08 23:18:53,171 - app.utils.authentication - ERROR - HTTPException during authentication for email test_64d5eaaa@example.com: Invalid password.
2025-02-08 23:18:53,173 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-08 23:28:23,381 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:28:23,389 - app.routers.users - INFO - Doctor registration input: {'email': 'test_3bab4548@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:28:23,389 - root - INFO - Getting database: Users
2025-02-08 23:28:23,389 - root - INFO - Getting collection: Doctors
2025-02-08 23:28:23,389 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:28:23,486 - app.models.doctor - INFO - Creating doctor profile for email: test_3bab4548@example.com
2025-02-08 23:28:23,486 - root - INFO - Getting database: Users
2025-02-08 23:28:23,486 - root - INFO - Getting collection: Doctors
2025-02-08 23:28:23,486 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:28:23,854 - root - INFO - Getting database: Users
2025-02-08 23:28:23,854 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:28:24,068 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 856250fe-027a-484d-9788-e65957014ac2
2025-02-08 23:28:24,068 - app.models.doctor - INFO - Doctor created successfully with id: 856250fe-027a-484d-9788-e65957014ac2
2025-02-08 23:28:24,068 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:28:24,072 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:28:24,084 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:28:24,084 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_3bab4548@example.com', 'password': 'securepassword123'}
2025-02-08 23:28:24,084 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_3bab4548@example.com
2025-02-08 23:28:24,084 - root - INFO - Getting database: Users
2025-02-08 23:28:24,084 - root - INFO - Getting collection: Doctors
2025-02-08 23:28:24,084 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:28:24,449 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_3bab4548@example.com
2025-02-08 23:28:24,449 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:28:24,449 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:28:24,449 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:28:24,449 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:28:24,449 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijg1NjI1MGZlLTAyN2EtNDg0ZC05Nzg4LWU2NTk1NzAxNGFjMiIsImVtYWlsIjoidGVzdF8zYmFiNDU0OEBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NzMwNH0.g8hbYiUdivwBRe4MshVVigSrJxJMgaIvkVYn-rAC0c0
2025-02-08 23:28:24,449 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:28:24,449 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '856250fe-027a-484d-9788-e65957014ac2', 'email': 'test_3bab4548@example.com', 'exp': 1739657304}
2025-02-08 23:28:24,449 - root - INFO - Getting database: Users
2025-02-08 23:28:24,449 - root - INFO - Getting collection: Doctors
2025-02-08 23:28:24,449 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:28:24,545 - app.models.doctor - INFO - Doctor with id 856250fe-027a-484d-9788-e65957014ac2 successfully authenticated.
2025-02-08 23:28:24,560 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:28:24,560 - root - INFO - Getting database: Users
2025-02-08 23:28:24,560 - root - INFO - Getting collection: Patients
2025-02-08 23:28:24,560 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:28:24,769 - app.models.patient - INFO - Patient created successfully with patient_number: 66580195
2025-02-08 23:28:24,769 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:30:38,115 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:30:38,131 - app.routers.users - INFO - Doctor registration input: {'email': 'test_7ddf8690@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:30:38,131 - root - INFO - Getting database: Users
2025-02-08 23:30:38,131 - root - INFO - Getting collection: Doctors
2025-02-08 23:30:38,131 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:30:38,243 - app.models.doctor - INFO - Creating doctor profile for email: test_7ddf8690@example.com
2025-02-08 23:30:38,243 - root - INFO - Getting database: Users
2025-02-08 23:30:38,243 - root - INFO - Getting collection: Doctors
2025-02-08 23:30:38,243 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:30:38,596 - root - INFO - Getting database: Users
2025-02-08 23:30:38,596 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:30:38,823 - app.models.api_key - INFO - API key allocated successfully for doctor ID: df2b1309-73af-4d7a-b2d6-559cf4edfcc7
2025-02-08 23:30:38,823 - app.models.doctor - INFO - Doctor created successfully with id: df2b1309-73af-4d7a-b2d6-559cf4edfcc7
2025-02-08 23:30:38,823 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:30:38,823 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:30:38,832 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:30:38,844 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_7ddf8690@example.com', 'password': 'securepassword123'}
2025-02-08 23:30:38,844 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_7ddf8690@example.com
2025-02-08 23:30:38,844 - root - INFO - Getting database: Users
2025-02-08 23:30:38,844 - root - INFO - Getting collection: Doctors
2025-02-08 23:30:38,844 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:30:39,275 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_7ddf8690@example.com
2025-02-08 23:30:39,278 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:30:39,284 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:30:39,286 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:30:39,291 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:30:39,293 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImRmMmIxMzA5LTczYWYtNGQ3YS1iMmQ2LTU1OWNmNGVkZmNjNyIsImVtYWlsIjoidGVzdF83ZGRmODY5MEBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1NzQzOX0.B1aGmPh9yEYKNjtRRN48LhZNwo1Kv-y_Ace_Grjgmu8
2025-02-08 23:30:39,293 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:30:39,293 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'df2b1309-73af-4d7a-b2d6-559cf4edfcc7', 'email': 'test_7ddf8690@example.com', 'exp': 1739657439}
2025-02-08 23:30:39,293 - root - INFO - Getting database: Users
2025-02-08 23:30:39,293 - root - INFO - Getting collection: Doctors
2025-02-08 23:30:39,293 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:30:39,398 - app.models.doctor - INFO - Doctor with id df2b1309-73af-4d7a-b2d6-559cf4edfcc7 successfully authenticated.
2025-02-08 23:30:39,406 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:30:39,406 - root - INFO - Getting database: Users
2025-02-08 23:30:39,406 - root - INFO - Getting collection: Patients
2025-02-08 23:30:39,406 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:30:39,612 - app.models.patient - INFO - Patient created successfully with patient_number: 71052035
2025-02-08 23:30:39,616 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:30:39,618 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:30:39,620 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:30:39,626 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:38:01,492 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:38:01,519 - app.routers.users - INFO - Doctor registration input: {'email': 'test_95eafc4d@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:38:01,521 - root - INFO - Getting database: Users
2025-02-08 23:38:01,521 - root - INFO - Getting collection: Doctors
2025-02-08 23:38:01,521 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:38:01,624 - app.models.doctor - INFO - Creating doctor profile for email: test_95eafc4d@example.com
2025-02-08 23:38:01,624 - root - INFO - Getting database: Users
2025-02-08 23:38:01,624 - root - INFO - Getting collection: Doctors
2025-02-08 23:38:01,624 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:38:02,037 - root - INFO - Getting database: Users
2025-02-08 23:38:02,037 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:38:02,255 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 3f17560c-7e96-4d21-b54f-586501384e6a
2025-02-08 23:38:02,255 - app.models.doctor - INFO - Doctor created successfully with id: 3f17560c-7e96-4d21-b54f-586501384e6a
2025-02-08 23:38:02,255 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:38:02,259 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:38:02,269 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:38:02,279 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_95eafc4d@example.com', 'password': 'securepassword123'}
2025-02-08 23:38:02,279 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_95eafc4d@example.com
2025-02-08 23:38:02,279 - root - INFO - Getting database: Users
2025-02-08 23:38:02,279 - root - INFO - Getting collection: Doctors
2025-02-08 23:38:02,279 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:38:02,699 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_95eafc4d@example.com
2025-02-08 23:38:02,701 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:38:02,701 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:38:02,701 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:38:02,701 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:38:02,701 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNmMTc1NjBjLTdlOTYtNGQyMS1iNTRmLTU4NjUwMTM4NGU2YSIsImVtYWlsIjoidGVzdF85NWVhZmM0ZEBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1Nzg4Mn0.BJYInHKZK2D0YSDE6P6QVpw0iO4b8fqhV2x_o2NMWM0
2025-02-08 23:38:02,701 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:38:02,701 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3f17560c-7e96-4d21-b54f-586501384e6a', 'email': 'test_95eafc4d@example.com', 'exp': 1739657882}
2025-02-08 23:38:02,701 - root - INFO - Getting database: Users
2025-02-08 23:38:02,701 - root - INFO - Getting collection: Doctors
2025-02-08 23:38:02,701 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:38:02,797 - app.models.doctor - INFO - Doctor with id 3f17560c-7e96-4d21-b54f-586501384e6a successfully authenticated.
2025-02-08 23:38:02,813 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:38:02,813 - root - INFO - Getting database: Users
2025-02-08 23:38:02,813 - root - INFO - Getting collection: Patients
2025-02-08 23:38:02,813 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:38:03,027 - app.models.patient - INFO - Patient created successfully with patient_number: 71764820
2025-02-08 23:38:03,037 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:38:03,037 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:38:03,037 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:38:03,037 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:46:50,061 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:46:50,077 - app.routers.users - INFO - Doctor registration input: {'email': 'test_1584ca66@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:46:50,077 - root - INFO - Getting database: Users
2025-02-08 23:46:50,077 - root - INFO - Getting collection: Doctors
2025-02-08 23:46:50,077 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:46:50,173 - app.models.doctor - INFO - Creating doctor profile for email: test_1584ca66@example.com
2025-02-08 23:46:50,185 - root - INFO - Getting database: Users
2025-02-08 23:46:50,185 - root - INFO - Getting collection: Doctors
2025-02-08 23:46:50,185 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:46:50,555 - root - INFO - Getting database: Users
2025-02-08 23:46:50,555 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:46:50,750 - app.models.api_key - INFO - API key allocated successfully for doctor ID: d552d9c5-a7d7-41ad-96f2-66446b354012
2025-02-08 23:46:50,750 - app.models.doctor - INFO - Doctor created successfully with id: d552d9c5-a7d7-41ad-96f2-66446b354012
2025-02-08 23:46:50,750 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:46:50,765 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:46:50,773 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:46:50,783 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_1584ca66@example.com', 'password': 'securepassword123'}
2025-02-08 23:46:50,783 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_1584ca66@example.com
2025-02-08 23:46:50,783 - root - INFO - Getting database: Users
2025-02-08 23:46:50,783 - root - INFO - Getting collection: Doctors
2025-02-08 23:46:50,783 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:46:51,132 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_1584ca66@example.com
2025-02-08 23:46:51,132 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:46:51,132 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:46:51,132 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:46:51,132 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:46:51,132 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ1NTJkOWM1LWE3ZDctNDFhZC05NmYyLTY2NDQ2YjM1NDAxMiIsImVtYWlsIjoidGVzdF8xNTg0Y2E2NkBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1ODQxMX0.mq8EHtNWNzJoY3V3FVSaqc_fIYhxG9tb1Sg8EOGuyyw
2025-02-08 23:46:51,132 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:46:51,132 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'd552d9c5-a7d7-41ad-96f2-66446b354012', 'email': 'test_1584ca66@example.com', 'exp': 1739658411}
2025-02-08 23:46:51,132 - root - INFO - Getting database: Users
2025-02-08 23:46:51,132 - root - INFO - Getting collection: Doctors
2025-02-08 23:46:51,132 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:46:51,229 - app.models.doctor - INFO - Doctor with id d552d9c5-a7d7-41ad-96f2-66446b354012 successfully authenticated.
2025-02-08 23:46:51,246 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:46:51,246 - root - INFO - Getting database: Users
2025-02-08 23:46:51,246 - root - INFO - Getting collection: Patients
2025-02-08 23:46:51,246 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:46:51,442 - app.models.patient - INFO - Patient created successfully with patient_number: 21170032
2025-02-08 23:46:51,455 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:46:51,459 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:46:51,459 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:46:51,459 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:51:08,370 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:51:08,384 - app.routers.users - INFO - Doctor registration input: {'email': 'test_f6231c2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:51:08,384 - root - INFO - Getting database: Users
2025-02-08 23:51:08,384 - root - INFO - Getting collection: Doctors
2025-02-08 23:51:08,384 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:51:08,492 - app.models.doctor - INFO - Creating doctor profile for email: test_f6231c2b@example.com
2025-02-08 23:51:08,492 - root - INFO - Getting database: Users
2025-02-08 23:51:08,492 - root - INFO - Getting collection: Doctors
2025-02-08 23:51:08,492 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:51:08,848 - root - INFO - Getting database: Users
2025-02-08 23:51:08,848 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:51:09,057 - app.models.api_key - INFO - API key allocated successfully for doctor ID: d893067f-04e5-4f0b-9b1c-40e1bf101d48
2025-02-08 23:51:09,057 - app.models.doctor - INFO - Doctor created successfully with id: d893067f-04e5-4f0b-9b1c-40e1bf101d48
2025-02-08 23:51:09,063 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:51:09,063 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:51:09,073 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:51:09,083 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_f6231c2b@example.com', 'password': 'securepassword123'}
2025-02-08 23:51:09,083 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_f6231c2b@example.com
2025-02-08 23:51:09,083 - root - INFO - Getting database: Users
2025-02-08 23:51:09,083 - root - INFO - Getting collection: Doctors
2025-02-08 23:51:09,083 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:51:09,440 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_f6231c2b@example.com
2025-02-08 23:51:09,440 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:51:09,440 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:51:09,440 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:51:09,440 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:51:09,440 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ4OTMwNjdmLTA0ZTUtNGYwYi05YjFjLTQwZTFiZjEwMWQ0OCIsImVtYWlsIjoidGVzdF9mNjIzMWMyYkBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1ODY2OX0.tikXPfZDIMpjpFkIcGLqhV7h7bac6eHVQqSwlpSa82E
2025-02-08 23:51:09,440 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:51:09,440 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'd893067f-04e5-4f0b-9b1c-40e1bf101d48', 'email': 'test_f6231c2b@example.com', 'exp': 1739658669}
2025-02-08 23:51:09,440 - root - INFO - Getting database: Users
2025-02-08 23:51:09,440 - root - INFO - Getting collection: Doctors
2025-02-08 23:51:09,440 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:51:09,552 - app.models.doctor - INFO - Doctor with id d893067f-04e5-4f0b-9b1c-40e1bf101d48 successfully authenticated.
2025-02-08 23:51:09,552 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:51:09,552 - root - INFO - Getting database: Users
2025-02-08 23:51:09,552 - root - INFO - Getting collection: Patients
2025-02-08 23:51:09,552 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:51:09,763 - app.models.patient - INFO - Patient created successfully with patient_number: 22476575
2025-02-08 23:51:09,763 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:51:09,763 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:51:09,763 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:51:09,777 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-08 23:53:26,346 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:53:26,359 - app.routers.users - INFO - Doctor registration input: {'email': 'test_87cc6f70@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:53:26,359 - root - INFO - Getting database: Users
2025-02-08 23:53:26,359 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:26,359 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:26,461 - app.models.doctor - INFO - Creating doctor profile for email: test_87cc6f70@example.com
2025-02-08 23:53:26,462 - root - INFO - Getting database: Users
2025-02-08 23:53:26,462 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:26,462 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:26,824 - root - INFO - Getting database: Users
2025-02-08 23:53:26,824 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:53:27,028 - app.models.api_key - INFO - API key allocated successfully for doctor ID: b90162f4-ff87-482b-af9d-922cf2ad02a4
2025-02-08 23:53:27,028 - app.models.doctor - INFO - Doctor created successfully with id: b90162f4-ff87-482b-af9d-922cf2ad02a4
2025-02-08 23:53:27,028 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:53:27,031 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:53:27,034 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:53:27,038 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_87cc6f70@example.com', 'password': 'securepassword123'}
2025-02-08 23:53:27,039 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_87cc6f70@example.com
2025-02-08 23:53:27,039 - root - INFO - Getting database: Users
2025-02-08 23:53:27,039 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:27,039 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:27,397 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_87cc6f70@example.com
2025-02-08 23:53:27,398 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:53:27,401 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:53:27,401 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:53:27,403 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:53:27,403 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImI5MDE2MmY0LWZmODctNDgyYi1hZjlkLTkyMmNmMmFkMDJhNCIsImVtYWlsIjoidGVzdF84N2NjNmY3MEBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1ODgwN30.O0IwyZdwUFtZWqxvIhKxApCVMmTK8YbASxroTab_e6k
2025-02-08 23:53:27,403 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:53:27,403 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'b90162f4-ff87-482b-af9d-922cf2ad02a4', 'email': 'test_87cc6f70@example.com', 'exp': 1739658807}
2025-02-08 23:53:27,403 - root - INFO - Getting database: Users
2025-02-08 23:53:27,403 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:27,403 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:27,504 - app.models.doctor - INFO - Doctor with id b90162f4-ff87-482b-af9d-922cf2ad02a4 successfully authenticated.
2025-02-08 23:53:27,508 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:53:27,508 - root - INFO - Getting database: Users
2025-02-08 23:53:27,510 - root - INFO - Getting collection: Patients
2025-02-08 23:53:27,510 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:53:27,511 - app.models.patient - ERROR - An unexpected error occurred while creating patient: MongoDB can only handle up to 8-byte ints
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 89, in create_patient
    if patients.find_one({"patient_number": patient_number}):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\collection.py", line 1755, in find_one
    for result in cursor.limit(-1):
                  ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1752, in _run_operation
    return self._retryable_read(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1861, in _retryable_read
    return self._retry_internal(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1828, in _retry_internal
    ).run()
      ^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2565, in run
    return self._read() if self._is_read else self._write()
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2708, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1743, in _cmd
    return server.run_operation(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\helpers.py", line 47, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\server.py", line 170, in run_operation
    message = operation.get_message(read_preference, conn, use_cmd)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 1697, in get_message
    request_id, msg, size, _ = _op_msg(
                               ^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 419, in _op_msg
    return _op_msg_uncompressed(flags, command, identifier, docs, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OverflowError: MongoDB can only handle up to 8-byte ints
2025-02-08 23:53:27,521 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:53:38,206 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:53:38,220 - app.routers.users - INFO - Doctor registration input: {'email': 'test_12755073@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:53:38,220 - root - INFO - Getting database: Users
2025-02-08 23:53:38,221 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:38,221 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:38,321 - app.models.doctor - INFO - Creating doctor profile for email: test_12755073@example.com
2025-02-08 23:53:38,322 - root - INFO - Getting database: Users
2025-02-08 23:53:38,322 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:38,322 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:38,686 - root - INFO - Getting database: Users
2025-02-08 23:53:38,686 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:53:38,890 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 7447e55e-e80b-428d-aa15-fbfaa867dfb7
2025-02-08 23:53:38,890 - app.models.doctor - INFO - Doctor created successfully with id: 7447e55e-e80b-428d-aa15-fbfaa867dfb7
2025-02-08 23:53:38,891 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:53:38,893 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:53:38,895 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:53:38,899 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_12755073@example.com', 'password': 'securepassword123'}
2025-02-08 23:53:38,899 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_12755073@example.com
2025-02-08 23:53:38,899 - root - INFO - Getting database: Users
2025-02-08 23:53:38,899 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:38,899 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:39,276 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_12755073@example.com
2025-02-08 23:53:39,278 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:53:39,280 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:53:39,280 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:53:39,282 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:53:39,282 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Ijc0NDdlNTVlLWU4MGItNDI4ZC1hYTE1LWZiZmFhODY3ZGZiNyIsImVtYWlsIjoidGVzdF8xMjc1NTA3M0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1ODgxOX0.Z1Sc1husfeA5rKNZNlN7Lkq1FiMVDWAf_2pGJ5NUDjM
2025-02-08 23:53:39,282 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:53:39,282 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '7447e55e-e80b-428d-aa15-fbfaa867dfb7', 'email': 'test_12755073@example.com', 'exp': 1739658819}
2025-02-08 23:53:39,282 - root - INFO - Getting database: Users
2025-02-08 23:53:39,282 - root - INFO - Getting collection: Doctors
2025-02-08 23:53:39,282 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:53:39,386 - app.models.doctor - INFO - Doctor with id 7447e55e-e80b-428d-aa15-fbfaa867dfb7 successfully authenticated.
2025-02-08 23:53:39,391 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:53:39,391 - root - INFO - Getting database: Users
2025-02-08 23:53:39,392 - root - INFO - Getting collection: Patients
2025-02-08 23:53:39,392 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:53:39,395 - app.models.patient - ERROR - An unexpected error occurred while creating patient: MongoDB can only handle up to 8-byte ints
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 89, in create_patient
    if patients.find_one({"patient_number": patient_number}):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\collection.py", line 1755, in find_one
    for result in cursor.limit(-1):
                  ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1752, in _run_operation
    return self._retryable_read(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1861, in _retryable_read
    return self._retry_internal(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\_csot.py", line 119, in csot_wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1828, in _retry_internal
    ).run()
      ^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2565, in run
    return self._read() if self._is_read else self._write()
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2708, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1743, in _cmd
    return server.run_operation(
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\helpers.py", line 47, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\server.py", line 170, in run_operation
    message = operation.get_message(read_preference, conn, use_cmd)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 1697, in get_message
    request_id, msg, size, _ = _op_msg(
                               ^^^^^^^^
  File "C:\Python312\Lib\site-packages\pymongo\message.py", line 419, in _op_msg
    return _op_msg_uncompressed(flags, command, identifier, docs, opts)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
OverflowError: MongoDB can only handle up to 8-byte ints
2025-02-08 23:53:39,404 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 500 Internal Server Error"
2025-02-08 23:54:24,196 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 23:54:24,207 - app.routers.users - INFO - Doctor registration input: {'email': 'test_e74afb7a@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-08 23:54:24,207 - root - INFO - Getting database: Users
2025-02-08 23:54:24,207 - root - INFO - Getting collection: Doctors
2025-02-08 23:54:24,207 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:54:24,310 - app.models.doctor - INFO - Creating doctor profile for email: test_e74afb7a@example.com
2025-02-08 23:54:24,311 - root - INFO - Getting database: Users
2025-02-08 23:54:24,311 - root - INFO - Getting collection: Doctors
2025-02-08 23:54:24,311 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:54:24,659 - root - INFO - Getting database: Users
2025-02-08 23:54:24,659 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 23:54:24,862 - app.models.api_key - INFO - API key allocated successfully for doctor ID: d26def56-43dc-425f-aff1-719c27fa92fb
2025-02-08 23:54:24,862 - app.models.doctor - INFO - Doctor created successfully with id: d26def56-43dc-425f-aff1-719c27fa92fb
2025-02-08 23:54:24,862 - app.routers.users - INFO - Doctor successfully created.
2025-02-08 23:54:24,867 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-08 23:54:24,872 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 23:54:24,879 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_e74afb7a@example.com', 'password': 'securepassword123'}
2025-02-08 23:54:24,879 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_e74afb7a@example.com
2025-02-08 23:54:24,880 - root - INFO - Getting database: Users
2025-02-08 23:54:24,880 - root - INFO - Getting collection: Doctors
2025-02-08 23:54:24,880 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:54:25,220 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_e74afb7a@example.com
2025-02-08 23:54:25,221 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-08 23:54:25,224 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 23:54:25,224 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 23:54:25,226 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 23:54:25,226 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQyNmRlZjU2LTQzZGMtNDI1Zi1hZmYxLTcxOWMyN2ZhOTJmYiIsImVtYWlsIjoidGVzdF9lNzRhZmI3YUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY1ODg2NX0.O9-AqttQZ19bZsF5e0w6D6RawdWRwQwxr39QMM4L4UA
2025-02-08 23:54:25,226 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 23:54:25,226 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'd26def56-43dc-425f-aff1-719c27fa92fb', 'email': 'test_e74afb7a@example.com', 'exp': 1739658865}
2025-02-08 23:54:25,226 - root - INFO - Getting database: Users
2025-02-08 23:54:25,226 - root - INFO - Getting collection: Doctors
2025-02-08 23:54:25,226 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 23:54:25,326 - app.models.doctor - INFO - Doctor with id d26def56-43dc-425f-aff1-719c27fa92fb successfully authenticated.
2025-02-08 23:54:25,328 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-08 23:54:25,328 - root - INFO - Getting database: Users
2025-02-08 23:54:25,329 - root - INFO - Getting collection: Patients
2025-02-08 23:54:25,329 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 23:54:25,534 - app.models.patient - INFO - Patient created successfully with patient_number: 21219912
2025-02-08 23:54:25,538 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-08 23:54:25,543 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_cases
2025-02-08 23:54:25,544 - app.middleware.authentication - INFO - Valid token received for /cases/new_cases
2025-02-08 23:54:25,555 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_cases "HTTP/1.1 422 Unprocessable Entity"
2025-02-09 00:06:24,931 - app.middleware.authentication - INFO - Checking Authorization header for /
2025-02-09 00:06:24,932 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /
2025-02-09 00:06:24,933 - app.middleware.authentication - ERROR - HTTPException on /: Missing or invalid Authorization header
2025-02-09 00:07:03,442 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-09 00:07:04,192 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-09 00:08:23,780 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:08:23,795 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/new_case_trial
2025-02-09 00:08:23,795 - app.middleware.authentication - ERROR - HTTPException on /cases/new_case_trial: Missing or invalid Authorization header
2025-02-09 00:09:04,023 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:09:04,320 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-09 00:09:04,322 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-09 00:09:04,338 - root - INFO - Getting database: Users
2025-02-09 00:09:04,345 - root - INFO - Getting collection: Doctors
2025-02-09 00:09:04,349 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:09:04,983 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-09 00:09:33,892 - app.middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-09 00:09:33,900 - app.middleware.authentication - INFO - Valid token received for /users/doctors
2025-02-09 00:09:33,919 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:09:33,920 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:09:33,924 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:09:33,925 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:09:33,927 - root - INFO - Getting database: Users
2025-02-09 00:09:33,930 - root - INFO - Getting collection: Doctors
2025-02-09 00:09:33,934 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:09:34,038 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:09:34,039 - root - INFO - Getting database: Users
2025-02-09 00:09:34,039 - root - INFO - Getting collection: Doctors
2025-02-09 00:09:34,040 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:09:40,873 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:09:40,874 - app.middleware.authentication - INFO - Valid token received for /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:09:40,882 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:09:40,883 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:09:40,884 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:09:40,885 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:09:40,886 - root - INFO - Getting database: Users
2025-02-09 00:09:40,886 - root - INFO - Getting collection: Doctors
2025-02-09 00:09:40,887 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:09:40,989 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:09:40,999 - root - INFO - Getting database: Cases
2025-02-09 00:09:41,000 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:09:41,001 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:09:41,132 - app.models.case - INFO - Retrieved 2 case(s) for patient_id: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:09:52,316 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:09:52,316 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:09:52,341 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:09:52,341 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:09:52,342 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:09:52,343 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:09:52,344 - root - INFO - Getting database: Users
2025-02-09 00:09:52,344 - root - INFO - Getting collection: Doctors
2025-02-09 00:09:52,345 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:09:52,461 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:10:28,936 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:10:28,937 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:10:28,946 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:10:28,946 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:10:28,946 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:10:28,947 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:10:28,948 - root - INFO - Getting database: Users
2025-02-09 00:10:28,950 - root - INFO - Getting collection: Doctors
2025-02-09 00:10:28,950 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:10:29,053 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:10:29,069 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:10:29,072 - app.models.case - ERROR - Invalid file type for file: car.webp. Only image files are allowed.
2025-02-09 00:10:29,073 - app.models.case - ERROR - HTTPException during case creation: Invalid file type. Only image files are allowed.
2025-02-09 00:10:45,774 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:10:45,775 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:10:45,781 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:10:45,781 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:10:45,781 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:10:45,782 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:10:45,782 - root - INFO - Getting database: Users
2025-02-09 00:10:45,782 - root - INFO - Getting collection: Doctors
2025-02-09 00:10:45,783 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:10:45,884 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:10:45,885 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:10:45,885 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:10:45,890 - app.models.case - INFO - Generated unique filename: image_20250209001045_38c8b620.Screenshot 2024-12-02 122849.png
2025-02-09 00:10:45,891 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:10:45,892 - root - INFO - Getting database: Users
2025-02-09 00:10:45,892 - root - INFO - Getting collection: Patients
2025-02-09 00:10:45,892 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:10:45,894 - app.models.patient - ERROR - An unexpected error occurred while retrieving patient_id: 'Depends' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 254, in get_patient_id
    {"patient_number": patient_number, "doctor_id": current_doctor["doctor_id"]},
                                                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: 'Depends' object is not subscriptable
2025-02-09 00:10:45,921 - app.models.case - ERROR - HTTPException during case creation: An error occurred while retrieving the patient_id: 'Depends' object is not subscriptable
2025-02-09 00:13:57,754 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:13:57,786 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:13:57,837 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:13:57,837 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:13:57,837 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:13:57,837 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:13:57,837 - root - INFO - Getting database: Users
2025-02-09 00:13:57,844 - root - INFO - Getting collection: Doctors
2025-02-09 00:13:57,844 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:13:57,971 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:13:57,985 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:13:57,985 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:13:57,989 - app.models.case - INFO - Generated unique filename: image_20250209001357_ce78a1c9.Screenshot 2024-12-02 122849.png
2025-02-09 00:13:57,992 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:13:57,993 - root - INFO - Getting database: Users
2025-02-09 00:13:57,993 - root - INFO - Getting collection: Patients
2025-02-09 00:13:57,994 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:13:57,995 - app.models.patient - ERROR - An unexpected error occurred while retrieving patient_id: 'Depends' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 254, in get_patient_id
    {"patient_number": patient_number, "doctor_id": current_doctor["doctor_id"]},
                                                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: 'Depends' object is not subscriptable
2025-02-09 00:13:58,007 - app.models.case - ERROR - HTTPException during case creation: An error occurred while retrieving the patient_id: 'Depends' object is not subscriptable
2025-02-09 00:18:26,214 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:18:26,310 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:18:26,445 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:18:26,446 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:18:26,447 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:18:26,448 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:18:26,453 - root - INFO - Getting database: Users
2025-02-09 00:18:26,469 - root - INFO - Getting collection: Doctors
2025-02-09 00:18:26,477 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:18:26,646 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:18:26,662 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:18:26,664 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:18:26,669 - app.models.case - INFO - Generated unique filename: image_20250209001826_b35df09b.Screenshot 2024-12-02 122849.png
2025-02-09 00:18:26,679 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:18:26,680 - root - INFO - Getting database: Users
2025-02-09 00:18:26,680 - root - INFO - Getting collection: Patients
2025-02-09 00:18:26,681 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:18:26,684 - app.models.patient - ERROR - An unexpected error occurred while retrieving patient_id: 'Depends' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\patient.py", line 254, in get_patient_id
    {"patient_number": patient_number, "doctor_id": current_doctor["doctor_id"]},
                                                    ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: 'Depends' object is not subscriptable
2025-02-09 00:18:26,739 - app.models.case - ERROR - HTTPException during case creation: An error occurred while retrieving the patient_id: 'Depends' object is not subscriptable
2025-02-09 00:18:27,006 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:18:41,292 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:18:41,292 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:18:41,299 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:18:41,299 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:18:41,299 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:18:41,299 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:18:41,303 - root - INFO - Getting database: Users
2025-02-09 00:18:41,303 - root - INFO - Getting collection: Doctors
2025-02-09 00:18:41,303 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:18:41,418 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:18:41,418 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:18:41,418 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:18:41,418 - app.models.case - INFO - Generated unique filename: image_20250209001841_5134d7fd.Screenshot 2024-12-02 122849.png
2025-02-09 00:18:41,418 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:18:41,418 - root - INFO - Getting database: Users
2025-02-09 00:18:41,418 - root - INFO - Getting collection: Patients
2025-02-09 00:18:41,418 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:18:41,533 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:18:41,533 - app.models.case - INFO - Starting image upload process
2025-02-09 00:18:41,533 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:18:41,533 - root - INFO - Getting database: Images
2025-02-09 00:18:41,533 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:18:41,998 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f461b8a39f2095e79e67
2025-02-09 00:18:41,998 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f461b8a39f2095e79e67
2025-02-09 00:18:41,998 - app.models.case - INFO - Starting diagnosis process for image: image_20250209001841_5134d7fd.Screenshot 2024-12-02 122849.png
2025-02-09 00:18:41,998 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 265, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:18:42,006 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:18:42,006 - root - INFO - Getting database: Cases
2025-02-09 00:18:42,008 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:18:42,008 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:18:42,125 - app.models.case - INFO - Case created successfully with id: acec3bba-e4a0-4651-902b-949a53babda6
2025-02-09 00:18:42,126 - app.models.case - ERROR - Unexpected error during case creation: [TypeError("'ObjectId' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 324, in jsonable_encoder
    data = dict(obj)
           ^^^^^^^^^
TypeError: 'ObjectId' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 329, in jsonable_encoder
    data = vars(obj)
           ^^^^^^^^^
TypeError: vars() argument must have __dict__ attribute

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 421, in create_case
    content={"status": "success", "case": jsonable_encoder(case_data)},
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 289, in jsonable_encoder
    encoded_value = jsonable_encoder(
                    ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 332, in jsonable_encoder
    raise ValueError(errors) from e
ValueError: [TypeError("'ObjectId' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
2025-02-09 00:20:14,829 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:20:23,834 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:20:23,836 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:20:23,842 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:20:23,842 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:20:23,842 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:20:23,843 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:20:23,843 - root - INFO - Getting database: Users
2025-02-09 00:20:23,844 - root - INFO - Getting collection: Doctors
2025-02-09 00:20:23,844 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:20:23,946 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:20:23,948 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:20:23,948 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:20:23,948 - app.models.case - INFO - Generated unique filename: image_20250209002023_af9e8834.Screenshot 2024-12-02 122849.png
2025-02-09 00:20:23,949 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:20:23,949 - root - INFO - Getting database: Users
2025-02-09 00:20:23,949 - root - INFO - Getting collection: Patients
2025-02-09 00:20:23,949 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:20:24,050 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:20:24,051 - app.models.case - INFO - Starting image upload process
2025-02-09 00:20:24,052 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:20:24,052 - root - INFO - Getting database: Images
2025-02-09 00:20:24,052 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:20:24,473 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f4c84288eb8c184ce182
2025-02-09 00:20:24,474 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f4c84288eb8c184ce182
2025-02-09 00:20:24,475 - app.models.case - INFO - Starting diagnosis process for image: image_20250209002023_af9e8834.Screenshot 2024-12-02 122849.png
2025-02-09 00:20:24,476 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 265, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:20:24,482 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:20:24,483 - root - INFO - Getting database: Cases
2025-02-09 00:20:24,485 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:20:24,486 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:20:24,596 - app.models.case - ERROR - Unexpected error during case creation: 'case_id'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 417, in create_case
    logger.info("Case created successfully with id: %s", case_data["case_id"])
                                                         ~~~~~~~~~^^^^^^^^^^^
KeyError: 'case_id'
2025-02-09 00:21:14,688 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:21:22,364 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:21:22,364 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:21:22,364 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:21:22,364 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:21:22,364 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:21:22,364 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:21:22,364 - root - INFO - Getting database: Users
2025-02-09 00:21:22,364 - root - INFO - Getting collection: Doctors
2025-02-09 00:21:22,364 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:21:22,461 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:21:22,461 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:21:22,461 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:21:22,461 - app.models.case - INFO - Generated unique filename: image_20250209002122_a49344a9.Screenshot 2024-12-02 122849.png
2025-02-09 00:21:22,473 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:21:22,474 - root - INFO - Getting database: Users
2025-02-09 00:21:22,475 - root - INFO - Getting collection: Patients
2025-02-09 00:21:22,476 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:21:22,578 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:21:22,580 - app.models.case - INFO - Starting image upload process
2025-02-09 00:21:22,580 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:21:22,581 - root - INFO - Getting database: Images
2025-02-09 00:21:22,581 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:21:22,990 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f502f4fb5260ea9c6b8e
2025-02-09 00:21:22,990 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f502f4fb5260ea9c6b8e
2025-02-09 00:21:22,990 - app.models.case - INFO - Starting diagnosis process for image: image_20250209002122_a49344a9.Screenshot 2024-12-02 122849.png
2025-02-09 00:21:22,990 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 265, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:21:22,990 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:21:22,990 - root - INFO - Getting database: Cases
2025-02-09 00:21:22,990 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:21:23,006 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:21:23,118 - app.models.case - INFO - Case created successfully with id: 9da2c1ba-32f9-493a-90ae-2cb5342bab92
2025-02-09 00:21:57,967 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:22:05,259 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:22:05,259 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:22:05,265 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:22:05,265 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:22:05,265 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:22:05,265 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:22:05,265 - root - INFO - Getting database: Users
2025-02-09 00:22:05,265 - root - INFO - Getting collection: Doctors
2025-02-09 00:22:05,265 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:22:05,366 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:22:05,366 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:22:05,366 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:22:05,366 - app.models.case - INFO - Generated unique filename: image_20250209002205_60b75c98.Screenshot 2024-12-02 122849.png
2025-02-09 00:22:05,366 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:22:05,366 - root - INFO - Getting database: Users
2025-02-09 00:22:05,366 - root - INFO - Getting collection: Patients
2025-02-09 00:22:05,366 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:22:05,475 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:22:05,475 - app.models.case - INFO - Starting image upload process
2025-02-09 00:22:05,476 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:22:05,476 - root - INFO - Getting database: Images
2025-02-09 00:22:05,476 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:22:05,880 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f52d7fc8063e2b371db0
2025-02-09 00:22:05,880 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f52d7fc8063e2b371db0
2025-02-09 00:22:05,880 - app.models.case - INFO - Starting diagnosis process for image: image_20250209002205_60b75c98.Screenshot 2024-12-02 122849.png
2025-02-09 00:22:05,880 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 265, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:22:05,894 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:22:05,894 - root - INFO - Getting database: Cases
2025-02-09 00:22:05,894 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:22:05,894 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:22:06,002 - app.models.case - INFO - Case created successfully with id: fb0980c3-510c-4da7-b35a-7d0b485091ca
2025-02-09 00:23:34,461 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case_trial
2025-02-09 00:23:34,477 - app.middleware.authentication - INFO - Valid token received for /cases/new_case_trial
2025-02-09 00:23:34,483 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:23:34,483 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:23:34,483 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:23:34,483 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:23:34,483 - root - INFO - Getting database: Users
2025-02-09 00:23:34,483 - root - INFO - Getting collection: Doctors
2025-02-09 00:23:34,483 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:23:34,588 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:23:34,595 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:23:34,595 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:23:34,595 - app.models.case - INFO - Generated unique filename: image_20250209002334_095d16c4.Screenshot 2024-12-02 122849.png
2025-02-09 00:23:34,595 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:23:34,595 - root - INFO - Getting database: Users
2025-02-09 00:23:34,595 - root - INFO - Getting collection: Patients
2025-02-09 00:23:34,595 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:23:34,699 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:23:34,699 - app.models.case - INFO - Starting image upload process
2025-02-09 00:23:34,699 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:23:34,699 - root - INFO - Getting database: Images
2025-02-09 00:23:34,704 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:23:35,125 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f5867fc8063e2b371db3
2025-02-09 00:23:35,125 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f5867fc8063e2b371db3
2025-02-09 00:23:35,125 - app.models.case - INFO - Starting diagnosis process for image: image_20250209002334_095d16c4.Screenshot 2024-12-02 122849.png
2025-02-09 00:23:35,125 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 265, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:23:35,138 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:23:35,138 - root - INFO - Getting database: Cases
2025-02-09 00:23:35,138 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:23:35,138 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:23:35,239 - app.models.case - INFO - Case created successfully with id: 749aaa2e-e579-45b9-9f91-8af2bd2eb062
2025-02-09 00:26:42,777 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:31:44,664 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:33:21,959 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:36:04,029 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:36:21,275 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:36:37,871 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-09 00:36:37,871 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-09 00:36:37,871 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:36:37,871 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-09 00:36:37,871 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:36:37,871 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-09 00:36:37,871 - root - INFO - Getting database: Users
2025-02-09 00:36:37,871 - root - INFO - Getting collection: Doctors
2025-02-09 00:36:37,871 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:36:37,978 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-09 00:36:37,980 - app.models.case - INFO - Received request to create new case for patient_number: 12345
2025-02-09 00:36:37,980 - app.models.case - INFO - File read successfully: Screenshot 2024-12-02 122849.png, size: 13999 bytes
2025-02-09 00:36:37,980 - app.models.case - INFO - Generated unique filename: image_20250209003637_73238cc8.Screenshot 2024-12-02 122849.png
2025-02-09 00:36:37,980 - app.models.patient - INFO - Fetching patient_id for patient_number: 12345
2025-02-09 00:36:37,980 - root - INFO - Getting database: Users
2025-02-09 00:36:37,980 - root - INFO - Getting collection: Patients
2025-02-09 00:36:37,982 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:36:38,075 - app.models.patient - INFO - Patient ID found for patient_number 12345: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-09 00:36:38,075 - app.models.case - INFO - Starting image upload process
2025-02-09 00:36:38,075 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:36:38,075 - root - INFO - Getting database: Images
2025-02-09 00:36:38,086 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:36:38,533 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f896a7f831ca85c3a2b2
2025-02-09 00:36:38,533 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f896a7f831ca85c3a2b2
2025-02-09 00:36:38,535 - app.models.case - INFO - Starting diagnosis process for image: Screenshot 2024-12-02 122849.png
2025-02-09 00:36:38,537 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 270, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:36:38,543 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:36:38,544 - root - INFO - Getting database: Cases
2025-02-09 00:36:38,544 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:36:38,545 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:36:38,655 - app.models.case - INFO - Case created successfully with id: 9522065e-311a-4ef5-8e5d-8f4cc65dde5a
2025-02-09 00:39:00,259 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-09 00:39:19,139 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:39:19,155 - app.routers.users - INFO - Doctor registration input: {'email': 'test_556579b9@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:39:19,155 - root - INFO - Getting database: Users
2025-02-09 00:39:19,155 - root - INFO - Getting collection: Doctors
2025-02-09 00:39:19,155 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:39:19,253 - app.models.doctor - INFO - Creating doctor profile for email: test_556579b9@example.com
2025-02-09 00:39:19,253 - root - INFO - Getting database: Users
2025-02-09 00:39:19,253 - root - INFO - Getting collection: Doctors
2025-02-09 00:39:19,253 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:39:19,636 - root - INFO - Getting database: Users
2025-02-09 00:39:19,636 - root - INFO - Getting collection: Users-API-Keys
2025-02-09 00:39:19,846 - app.models.api_key - INFO - API key allocated successfully for doctor ID: eebd3db0-da43-4770-b0d1-64235b8aaa38
2025-02-09 00:39:19,846 - app.models.doctor - INFO - Doctor created successfully with id: eebd3db0-da43-4770-b0d1-64235b8aaa38
2025-02-09 00:39:19,854 - app.routers.users - INFO - Doctor successfully created.
2025-02-09 00:39:19,854 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-09 00:39:19,867 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:39:19,867 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_556579b9@example.com', 'password': 'securepassword123'}
2025-02-09 00:39:19,867 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_556579b9@example.com
2025-02-09 00:39:19,867 - root - INFO - Getting database: Users
2025-02-09 00:39:19,877 - root - INFO - Getting collection: Doctors
2025-02-09 00:39:19,877 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:39:20,230 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_556579b9@example.com
2025-02-09 00:39:20,230 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-09 00:39:20,230 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-09 00:39:20,230 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-09 00:39:20,230 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:39:20,230 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImVlYmQzZGIwLWRhNDMtNDc3MC1iMGQxLTY0MjM1YjhhYWEzOCIsImVtYWlsIjoidGVzdF81NTY1NzliOUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTU2MH0.uqxG4z4FKoAeY-No6614LEG0QPKqkZ2UcPzJr47KNww
2025-02-09 00:39:20,230 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:39:20,230 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'eebd3db0-da43-4770-b0d1-64235b8aaa38', 'email': 'test_556579b9@example.com', 'exp': 1739661560}
2025-02-09 00:39:20,230 - root - INFO - Getting database: Users
2025-02-09 00:39:20,230 - root - INFO - Getting collection: Doctors
2025-02-09 00:39:20,230 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:39:20,343 - app.models.doctor - INFO - Doctor with id eebd3db0-da43-4770-b0d1-64235b8aaa38 successfully authenticated.
2025-02-09 00:39:20,348 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-09 00:39:20,348 - root - INFO - Getting database: Users
2025-02-09 00:39:20,348 - root - INFO - Getting collection: Patients
2025-02-09 00:39:20,348 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:39:20,554 - app.models.patient - INFO - Patient created successfully with patient_number: 7295688862718577730
2025-02-09 00:39:20,565 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-09 00:39:20,570 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-09 00:39:20,570 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-09 00:39:20,570 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:39:20,570 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImVlYmQzZGIwLWRhNDMtNDc3MC1iMGQxLTY0MjM1YjhhYWEzOCIsImVtYWlsIjoidGVzdF81NTY1NzliOUBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTU2MH0.uqxG4z4FKoAeY-No6614LEG0QPKqkZ2UcPzJr47KNww
2025-02-09 00:39:20,570 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:39:20,570 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': 'eebd3db0-da43-4770-b0d1-64235b8aaa38', 'email': 'test_556579b9@example.com', 'exp': 1739661560}
2025-02-09 00:39:20,570 - root - INFO - Getting database: Users
2025-02-09 00:39:20,570 - root - INFO - Getting collection: Doctors
2025-02-09 00:39:20,570 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:39:20,666 - app.models.doctor - INFO - Doctor with id eebd3db0-da43-4770-b0d1-64235b8aaa38 successfully authenticated.
2025-02-09 00:39:20,682 - app.models.case - INFO - Received request to create new case for patient_number: 7295688862718577730
2025-02-09 00:39:20,682 - app.models.case - INFO - File read successfully: test_image.jpg, size: 18 bytes
2025-02-09 00:39:20,682 - app.models.case - INFO - Generated unique filename: image_20250209003920_981c7d2f.test_image.jpg
2025-02-09 00:39:20,682 - app.models.patient - INFO - Fetching patient_id for patient_number: 7295688862718577730
2025-02-09 00:39:20,682 - root - INFO - Getting database: Users
2025-02-09 00:39:20,682 - root - INFO - Getting collection: Patients
2025-02-09 00:39:20,682 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:39:20,779 - app.models.patient - INFO - Patient ID found for patient_number 7295688862718577730: bc6699af-1721-4e74-9291-b16fdcbe56fb
2025-02-09 00:39:20,779 - app.models.case - INFO - Starting image upload process
2025-02-09 00:39:20,779 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:39:20,779 - root - INFO - Getting database: Images
2025-02-09 00:39:20,779 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:39:21,201 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f938bdbdf1089f721b3c
2025-02-09 00:39:21,201 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f938bdbdf1089f721b3c
2025-02-09 00:39:21,201 - app.models.case - INFO - Starting diagnosis process for image: test_image.jpg
2025-02-09 00:39:21,201 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 270, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:39:21,201 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:39:21,201 - root - INFO - Getting database: Cases
2025-02-09 00:39:21,214 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:39:21,214 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:39:21,312 - app.models.case - INFO - Case created successfully with id: 86ce5607-a395-4cdc-b862-ba07d9bea812
2025-02-09 00:39:21,323 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_case "HTTP/1.1 201 Created"
2025-02-09 00:40:06,715 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:06,743 - app.routers.users - INFO - Doctor registration input: {'email': 'test_cce4b2e7@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:06,743 - root - INFO - Getting database: Users
2025-02-09 00:40:06,743 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:06,743 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:06,840 - app.models.doctor - INFO - Creating doctor profile for email: test_cce4b2e7@example.com
2025-02-09 00:40:06,840 - root - INFO - Getting database: Users
2025-02-09 00:40:06,840 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:06,840 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:07,222 - root - INFO - Getting database: Users
2025-02-09 00:40:07,222 - root - INFO - Getting collection: Users-API-Keys
2025-02-09 00:40:07,428 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 393fb682-7811-49c3-9c61-93fa9035ba39
2025-02-09 00:40:07,428 - app.models.doctor - INFO - Doctor created successfully with id: 393fb682-7811-49c3-9c61-93fa9035ba39
2025-02-09 00:40:07,428 - app.routers.users - INFO - Doctor successfully created.
2025-02-09 00:40:07,428 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-09 00:40:07,428 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:40:07,441 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_cce4b2e7@example.com', 'password': 'securepassword123'}
2025-02-09 00:40:07,441 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_cce4b2e7@example.com
2025-02-09 00:40:07,441 - root - INFO - Getting database: Users
2025-02-09 00:40:07,441 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:07,441 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:07,789 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_cce4b2e7@example.com
2025-02-09 00:40:07,789 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-09 00:40:07,789 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-09 00:40:07,789 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-09 00:40:07,789 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:40:07,789 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjM5M2ZiNjgyLTc4MTEtNDljMy05YzYxLTkzZmE5MDM1YmEzOSIsImVtYWlsIjoidGVzdF9jY2U0YjJlN0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTYwN30.66kO_s39zfxG66k6waUR2q6prHf4sUEswOg7G9I3Css
2025-02-09 00:40:07,789 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:40:07,789 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '393fb682-7811-49c3-9c61-93fa9035ba39', 'email': 'test_cce4b2e7@example.com', 'exp': 1739661607}
2025-02-09 00:40:07,789 - root - INFO - Getting database: Users
2025-02-09 00:40:07,789 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:07,789 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:07,893 - app.models.doctor - INFO - Doctor with id 393fb682-7811-49c3-9c61-93fa9035ba39 successfully authenticated.
2025-02-09 00:40:07,893 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-09 00:40:07,893 - root - INFO - Getting database: Users
2025-02-09 00:40:07,893 - root - INFO - Getting collection: Patients
2025-02-09 00:40:07,893 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:40:08,104 - app.models.patient - INFO - Patient created successfully with patient_number: 5179105647495562836
2025-02-09 00:40:08,104 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-09 00:40:08,104 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-09 00:40:08,118 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-09 00:40:08,118 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:40:08,118 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjM5M2ZiNjgyLTc4MTEtNDljMy05YzYxLTkzZmE5MDM1YmEzOSIsImVtYWlsIjoidGVzdF9jY2U0YjJlN0BleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTYwN30.66kO_s39zfxG66k6waUR2q6prHf4sUEswOg7G9I3Css
2025-02-09 00:40:08,118 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:40:08,118 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '393fb682-7811-49c3-9c61-93fa9035ba39', 'email': 'test_cce4b2e7@example.com', 'exp': 1739661607}
2025-02-09 00:40:08,118 - root - INFO - Getting database: Users
2025-02-09 00:40:08,118 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:08,125 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:08,232 - app.models.doctor - INFO - Doctor with id 393fb682-7811-49c3-9c61-93fa9035ba39 successfully authenticated.
2025-02-09 00:40:08,232 - app.models.case - INFO - Received request to create new case for patient_number: 5179105647495562836
2025-02-09 00:40:08,232 - app.models.case - INFO - File read successfully: test_image.jpg, size: 18 bytes
2025-02-09 00:40:08,232 - app.models.case - INFO - Generated unique filename: image_20250209004008_687ee024.test_image.jpg
2025-02-09 00:40:08,232 - app.models.patient - INFO - Fetching patient_id for patient_number: 5179105647495562836
2025-02-09 00:40:08,232 - root - INFO - Getting database: Users
2025-02-09 00:40:08,232 - root - INFO - Getting collection: Patients
2025-02-09 00:40:08,232 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:40:08,343 - app.models.patient - INFO - Patient ID found for patient_number 5179105647495562836: 1c23e605-431f-4680-a467-e3d0fa3c3410
2025-02-09 00:40:08,343 - app.models.case - INFO - Starting image upload process
2025-02-09 00:40:08,343 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-09 00:40:08,343 - root - INFO - Getting database: Images
2025-02-09 00:40:08,343 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-09 00:40:08,763 - app.models.case - INFO - Image uploaded successfully with ID: 67a7f9685aa96b3a47e8461c
2025-02-09 00:40:08,763 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67a7f9685aa96b3a47e8461c
2025-02-09 00:40:08,763 - app.models.case - INFO - Starting diagnosis process for image: test_image.jpg
2025-02-09 00:40:08,763 - app.models.case - ERROR - Unexpected error during diagnosis: module 'fastapi.requests' has no attribute 'post'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 270, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5)
               ^^^^^^^^^^^^^
AttributeError: module 'fastapi.requests' has no attribute 'post'
2025-02-09 00:40:08,763 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-09 00:40:08,763 - root - INFO - Getting database: Cases
2025-02-09 00:40:08,763 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-09 00:40:08,763 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-09 00:40:08,877 - app.models.case - INFO - Case created successfully with id: 52671055-6d55-4208-af75-e11c790c251c
2025-02-09 00:40:08,877 - httpx - INFO - HTTP Request: POST http://testserver/cases/new_case "HTTP/1.1 201 Created"
2025-02-09 00:40:08,892 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:08,892 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8fc72a2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:08,892 - root - INFO - Getting database: Users
2025-02-09 00:40:08,892 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:08,892 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:08,988 - app.models.doctor - INFO - Creating doctor profile for email: test_8fc72a2b@example.com
2025-02-09 00:40:08,988 - root - INFO - Getting database: Users
2025-02-09 00:40:08,988 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:08,988 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:09,358 - root - INFO - Getting database: Users
2025-02-09 00:40:09,358 - root - INFO - Getting collection: Users-API-Keys
2025-02-09 00:40:09,564 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 5b0d975d-0dde-4361-befc-6816598c7a9f
2025-02-09 00:40:09,564 - app.models.doctor - INFO - Doctor created successfully with id: 5b0d975d-0dde-4361-befc-6816598c7a9f
2025-02-09 00:40:09,564 - app.routers.users - INFO - Doctor successfully created.
2025-02-09 00:40:09,564 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-09 00:40:09,586 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:09,593 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8fc72a2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:09,593 - root - INFO - Getting database: Users
2025-02-09 00:40:09,593 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:09,593 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:09,694 - app.routers.users - ERROR - Email is already registered: test_8fc72a2b@example.com
2025-02-09 00:40:09,694 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-09 00:40:09,694 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-09 00:40:09,694 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:09,694 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8fc72a2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:09,694 - root - INFO - Getting database: Users
2025-02-09 00:40:09,694 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:09,694 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:09,791 - app.routers.users - ERROR - Email is already registered: test_8fc72a2b@example.com
2025-02-09 00:40:09,791 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-09 00:40:09,791 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-09 00:40:09,807 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:09,807 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8fc72a2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:09,807 - root - INFO - Getting database: Users
2025-02-09 00:40:09,807 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:09,807 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:09,921 - app.routers.users - ERROR - Email is already registered: test_8fc72a2b@example.com
2025-02-09 00:40:09,921 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-09 00:40:09,921 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-09 00:40:09,921 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:40:09,921 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_8fc72a2b@example.com', 'password': 'securepassword123'}
2025-02-09 00:40:09,921 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_8fc72a2b@example.com
2025-02-09 00:40:09,921 - root - INFO - Getting database: Users
2025-02-09 00:40:09,921 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:09,921 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:10,270 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_8fc72a2b@example.com
2025-02-09 00:40:10,286 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-09 00:40:10,286 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:10,286 - app.routers.users - INFO - Doctor registration input: {'email': 'test_8fc72a2b@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:10,286 - root - INFO - Getting database: Users
2025-02-09 00:40:10,286 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:10,286 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:10,383 - app.routers.users - ERROR - Email is already registered: test_8fc72a2b@example.com
2025-02-09 00:40:10,383 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-09 00:40:10,383 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 400 Bad Request"
2025-02-09 00:40:10,399 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:40:10,401 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_8fc72a2b@example.com', 'password': 'wrongpassword'}
2025-02-09 00:40:10,401 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_8fc72a2b@example.com
2025-02-09 00:40:10,401 - root - INFO - Getting database: Users
2025-02-09 00:40:10,401 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:10,401 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:10,763 - app.utils.authentication - WARNING - Authentication failed: Invalid password for email: test_8fc72a2b@example.com
2025-02-09 00:40:10,763 - app.utils.authentication - ERROR - HTTPException during authentication for email test_8fc72a2b@example.com: Invalid password.
2025-02-09 00:40:10,763 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 401 Unauthorized"
2025-02-09 00:40:10,779 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-09 00:40:10,779 - app.routers.users - INFO - Doctor registration input: {'email': 'test_1e133bf6@example.com', 'name': 'Dr. John Doe', 'password': 'securepassword123'}
2025-02-09 00:40:10,779 - root - INFO - Getting database: Users
2025-02-09 00:40:10,779 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:10,779 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:10,879 - app.models.doctor - INFO - Creating doctor profile for email: test_1e133bf6@example.com
2025-02-09 00:40:10,879 - root - INFO - Getting database: Users
2025-02-09 00:40:10,879 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:10,879 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:11,258 - root - INFO - Getting database: Users
2025-02-09 00:40:11,258 - root - INFO - Getting collection: Users-API-Keys
2025-02-09 00:40:11,465 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 620619cd-b512-498a-8b7a-620c7a5de9a6
2025-02-09 00:40:11,465 - app.models.doctor - INFO - Doctor created successfully with id: 620619cd-b512-498a-8b7a-620c7a5de9a6
2025-02-09 00:40:11,465 - app.routers.users - INFO - Doctor successfully created.
2025-02-09 00:40:11,465 - httpx - INFO - HTTP Request: POST http://testserver/users/register-doctor "HTTP/1.1 201 Created"
2025-02-09 00:40:11,481 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-09 00:40:11,481 - app.routers.users - INFO - Doctor Sign in input: {'email': 'test_1e133bf6@example.com', 'password': 'securepassword123'}
2025-02-09 00:40:11,481 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: test_1e133bf6@example.com
2025-02-09 00:40:11,481 - root - INFO - Getting database: Users
2025-02-09 00:40:11,481 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:11,481 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:11,893 - app.utils.authentication - INFO - JWT access token generated successfully for email: test_1e133bf6@example.com
2025-02-09 00:40:11,893 - httpx - INFO - HTTP Request: POST http://testserver/users/login "HTTP/1.1 200 OK"
2025-02-09 00:40:11,893 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-09 00:40:11,893 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-09 00:40:11,908 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:40:11,908 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMDYxOWNkLWI1MTItNDk4YS04YjdhLTYyMGM3YTVkZTlhNiIsImVtYWlsIjoidGVzdF8xZTEzM2JmNkBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTYxMX0.D1evl9XkipEWWeqt0ivZfBDHMhts0-YhCxkIs2TvswA
2025-02-09 00:40:11,908 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:40:11,908 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '620619cd-b512-498a-8b7a-620c7a5de9a6', 'email': 'test_1e133bf6@example.com', 'exp': 1739661611}
2025-02-09 00:40:11,908 - root - INFO - Getting database: Users
2025-02-09 00:40:11,908 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:11,908 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:12,003 - app.models.doctor - INFO - Doctor with id 620619cd-b512-498a-8b7a-620c7a5de9a6 successfully authenticated.
2025-02-09 00:40:12,003 - app.models.patient - INFO - Creating patient profile for name: Jane Smith
2025-02-09 00:40:12,003 - root - INFO - Getting database: Users
2025-02-09 00:40:12,003 - root - INFO - Getting collection: Patients
2025-02-09 00:40:12,003 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:40:12,216 - app.models.patient - INFO - Patient created successfully with patient_number: 77748010
2025-02-09 00:40:12,216 - httpx - INFO - HTTP Request: POST http://testserver/users/register-patient "HTTP/1.1 201 Created"
2025-02-09 00:40:12,216 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/77748010
2025-02-09 00:40:12,216 - app.middleware.authentication - INFO - Valid token received for /users/patients/77748010
2025-02-09 00:40:12,216 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-09 00:40:12,216 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYyMDYxOWNkLWI1MTItNDk4YS04YjdhLTYyMGM3YTVkZTlhNiIsImVtYWlsIjoidGVzdF8xZTEzM2JmNkBleGFtcGxlLmNvbSIsImV4cCI6MTczOTY2MTYxMX0.D1evl9XkipEWWeqt0ivZfBDHMhts0-YhCxkIs2TvswA
2025-02-09 00:40:12,216 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-09 00:40:12,216 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '620619cd-b512-498a-8b7a-620c7a5de9a6', 'email': 'test_1e133bf6@example.com', 'exp': 1739661611}
2025-02-09 00:40:12,216 - root - INFO - Getting database: Users
2025-02-09 00:40:12,216 - root - INFO - Getting collection: Doctors
2025-02-09 00:40:12,216 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-09 00:40:12,322 - app.models.doctor - INFO - Doctor with id 620619cd-b512-498a-8b7a-620c7a5de9a6 successfully authenticated.
2025-02-09 00:40:12,322 - app.models.patient - INFO - Fetching patient with patient_number: 77748010
2025-02-09 00:40:12,322 - root - INFO - Getting database: Users
2025-02-09 00:40:12,322 - root - INFO - Getting collection: Patients
2025-02-09 00:40:12,322 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-09 00:40:12,425 - app.models.patient - INFO - Patient found: Jane Smith (patient_number: 77748010)
2025-02-09 00:40:12,425 - httpx - INFO - HTTP Request: GET http://testserver/users/patients/77748010 "HTTP/1.1 200 OK"
2025-02-10 13:36:30,750 - app.middleware.authentication - INFO - Checking Authorization header for /
2025-02-10 13:36:30,760 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /
2025-02-10 13:36:30,762 - app.middleware.authentication - ERROR - HTTPException on /: Missing or invalid Authorization header
2025-02-10 13:36:31,454 - app.middleware.authentication - INFO - Checking Authorization header for /favicon.ico
2025-02-10 13:36:31,459 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /favicon.ico
2025-02-10 13:36:31,461 - app.middleware.authentication - ERROR - HTTPException on /favicon.ico: Missing or invalid Authorization header
2025-02-10 13:36:34,047 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-10 13:36:34,777 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-10 13:37:05,007 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-10 13:37:05,041 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-10 13:37:05,044 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-10 13:37:05,046 - root - INFO - Getting database: Users
2025-02-10 13:37:05,046 - root - INFO - Getting collection: Doctors
2025-02-10 13:37:05,050 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:37:06,119 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-10 13:38:30,917 - app.middleware.authentication - INFO - Checking Authorization header for /users/my-patients
2025-02-10 13:38:30,920 - app.middleware.authentication - ERROR - HTTPException on /users/my-patients: Invalid token
2025-02-10 13:38:33,133 - app.middleware.authentication - INFO - Checking Authorization header for /users/my-patients
2025-02-10 13:38:33,136 - app.middleware.authentication - ERROR - HTTPException on /users/my-patients: Invalid token
2025-02-10 13:38:53,834 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 13:38:53,834 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-10 13:38:53,838 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:38:53,839 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-10 13:38:53,839 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:38:53,839 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-10 13:38:53,841 - root - INFO - Getting database: Users
2025-02-10 13:38:53,841 - root - INFO - Getting collection: Doctors
2025-02-10 13:38:53,843 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:38:53,943 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:38:53,955 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-10 13:38:53,955 - root - INFO - Getting database: Users
2025-02-10 13:38:53,957 - root - INFO - Getting collection: Patients
2025-02-10 13:38:53,957 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-10 13:38:54,071 - app.models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-10 13:39:08,403 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 13:39:08,403 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-10 13:39:08,407 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:39:08,409 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-10 13:39:08,412 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:39:08,414 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-10 13:39:08,416 - root - INFO - Getting database: Users
2025-02-10 13:39:08,418 - root - INFO - Getting collection: Doctors
2025-02-10 13:39:08,418 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:39:08,527 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:39:08,530 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-10 13:39:08,530 - root - INFO - Getting database: Users
2025-02-10 13:39:08,535 - root - INFO - Getting collection: Patients
2025-02-10 13:39:08,538 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-10 13:39:08,655 - app.models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-10 13:39:11,410 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 13:39:11,410 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-10 13:39:11,410 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:39:11,410 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5NjU5NzQ0fQ.hq_CWgxwEhXWK7V7AcsIHKdx8H2aTgstgMSoFmgVWpA
2025-02-10 13:39:11,410 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:39:11,417 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739659744}
2025-02-10 13:39:11,417 - root - INFO - Getting database: Users
2025-02-10 13:39:11,419 - root - INFO - Getting collection: Doctors
2025-02-10 13:39:11,419 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:39:11,525 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:39:11,530 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-10 13:39:11,531 - root - INFO - Getting database: Users
2025-02-10 13:39:11,531 - root - INFO - Getting collection: Patients
2025-02-10 13:39:11,533 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-10 13:39:11,646 - app.models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-10 13:39:48,936 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 13:39:48,936 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Invalid token
2025-02-10 13:41:03,941 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:41:18,110 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-10 13:41:18,679 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-10 13:41:30,312 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-doctor
2025-02-10 13:41:30,312 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /users/register-doctor
2025-02-10 13:41:30,312 - app.middleware.authentication - ERROR - HTTPException on /users/register-doctor: Missing or invalid Authorization header
2025-02-10 13:41:40,598 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:42:00,991 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-10 13:42:01,044 - app.routers.users - INFO - Doctor registration input: {'email': 'test07@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-10 13:42:01,046 - root - INFO - Getting database: Users
2025-02-10 13:42:01,046 - root - INFO - Getting collection: Doctors
2025-02-10 13:42:01,046 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:42:01,157 - app.models.doctor - INFO - Creating doctor profile for email: test07@test.com
2025-02-10 13:42:01,159 - root - INFO - Getting database: Users
2025-02-10 13:42:01,162 - root - INFO - Getting collection: Doctors
2025-02-10 13:42:01,162 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:42:02,215 - root - INFO - Getting database: Users
2025-02-10 13:42:02,217 - root - INFO - Getting collection: Users-API-Keys
2025-02-10 13:42:02,432 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 656acb7f-5a3e-4249-8285-d339dfdd7254
2025-02-10 13:42:02,432 - app.models.doctor - INFO - Doctor created successfully with id: 656acb7f-5a3e-4249-8285-d339dfdd7254
2025-02-10 13:42:02,432 - app.routers.users - INFO - Doctor successfully created.
2025-02-10 13:42:17,084 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-10 13:42:17,092 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test07@test.com', 'password': '@Test123'}
2025-02-10 13:42:17,094 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test07@test.com
2025-02-10 13:42:17,094 - root - INFO - Getting database: Users
2025-02-10 13:42:17,096 - root - INFO - Getting collection: Doctors
2025-02-10 13:42:17,096 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:42:18,112 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test07@test.com
2025-02-10 13:42:40,495 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 13:42:40,495 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-10 13:42:40,498 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:42:40,500 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NmFjYjdmLTVhM2UtNDI0OS04Mjg1LWQzMzlkZmRkNzI1NCIsImVtYWlsIjoidGVzdDA3QHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk0OTM4fQ.J_bFTpqAYiboOUCpWetaLdZyuqMcMiTRVzDVfhC--YA
2025-02-10 13:42:40,500 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:42:40,500 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '656acb7f-5a3e-4249-8285-d339dfdd7254', 'email': 'test07@test.com', 'exp': 1739794938}
2025-02-10 13:42:40,500 - root - INFO - Getting database: Users
2025-02-10 13:42:40,500 - root - INFO - Getting collection: Doctors
2025-02-10 13:42:40,500 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:42:40,610 - app.models.doctor - INFO - Doctor with id 656acb7f-5a3e-4249-8285-d339dfdd7254 successfully authenticated.
2025-02-10 13:42:40,617 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-10 13:42:40,617 - root - INFO - Getting database: Users
2025-02-10 13:42:40,617 - root - INFO - Getting collection: Patients
2025-02-10 13:42:40,621 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-10 13:42:40,730 - app.models.patient - WARNING - Patient with patient_number 12345 not found for doctor 656acb7f-5a3e-4249-8285-d339dfdd7254
2025-02-10 13:42:40,730 - app.models.patient - ERROR - Error retrieving patient: Patient with patient_number 12345 not found.
2025-02-10 13:43:59,745 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/cases
2025-02-10 13:43:59,745 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/cases
2025-02-10 13:43:59,752 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:43:59,752 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NmFjYjdmLTVhM2UtNDI0OS04Mjg1LWQzMzlkZmRkNzI1NCIsImVtYWlsIjoidGVzdDA3QHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk0OTM4fQ.J_bFTpqAYiboOUCpWetaLdZyuqMcMiTRVzDVfhC--YA
2025-02-10 13:43:59,752 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:43:59,752 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '656acb7f-5a3e-4249-8285-d339dfdd7254', 'email': 'test07@test.com', 'exp': 1739794938}
2025-02-10 13:43:59,752 - root - INFO - Getting database: Users
2025-02-10 13:43:59,752 - root - INFO - Getting collection: Doctors
2025-02-10 13:43:59,752 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:43:59,868 - app.models.doctor - INFO - Doctor with id 656acb7f-5a3e-4249-8285-d339dfdd7254 successfully authenticated.
2025-02-10 13:43:59,869 - root - INFO - Getting database: Cases
2025-02-10 13:43:59,869 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-10 13:43:59,869 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-10 13:43:59,983 - app.models.case - WARNING - No cases found for doctor ID cases.
2025-02-10 13:44:00,190 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:44:29,862 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/cases
2025-02-10 13:44:29,862 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/cases
2025-02-10 13:44:29,862 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:44:29,862 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk0NjI2fQ.RpQrMZROIlnKRKcBGva1RH5ZQ6tn_Vw9BMv0FAu10F0
2025-02-10 13:44:29,870 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:44:29,871 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739794626}
2025-02-10 13:44:29,873 - root - INFO - Getting database: Users
2025-02-10 13:44:29,876 - root - INFO - Getting collection: Doctors
2025-02-10 13:44:29,878 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:44:29,991 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:44:46,557 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/cases
2025-02-10 13:44:46,557 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/cases
2025-02-10 13:44:46,557 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:44:46,557 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk0NjI2fQ.RpQrMZROIlnKRKcBGva1RH5ZQ6tn_Vw9BMv0FAu10F0
2025-02-10 13:44:46,557 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:44:46,565 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739794626}
2025-02-10 13:44:46,565 - root - INFO - Getting database: Users
2025-02-10 13:44:46,565 - root - INFO - Getting collection: Doctors
2025-02-10 13:44:46,565 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:44:46,682 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:44:56,995 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-10 13:44:57,023 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-10 13:44:57,025 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-10 13:44:57,025 - root - INFO - Getting database: Users
2025-02-10 13:44:57,025 - root - INFO - Getting collection: Doctors
2025-02-10 13:44:57,027 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:44:58,154 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-10 13:45:21,643 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/cases
2025-02-10 13:45:21,643 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/cases
2025-02-10 13:45:21,646 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:45:21,646 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 13:45:21,646 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:45:21,646 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 13:45:21,646 - root - INFO - Getting database: Users
2025-02-10 13:45:21,653 - root - INFO - Getting collection: Doctors
2025-02-10 13:45:21,655 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:45:21,769 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:45:35,383 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:45:35,392 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:46:05,166 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:46:31,567 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/cases
2025-02-10 13:46:31,569 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/cases
2025-02-10 13:46:31,571 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:46:31,572 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 13:46:31,572 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:46:31,572 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 13:46:31,572 - root - INFO - Getting database: Users
2025-02-10 13:46:31,572 - root - INFO - Getting collection: Doctors
2025-02-10 13:46:31,572 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:46:31,686 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:47:19,501 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:47:19,504 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:47:19,790 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:57:22,452 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:57:36,705 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:57:36,705 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:57:36,715 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:57:36,717 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 13:57:36,718 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:57:36,721 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 13:57:36,721 - root - INFO - Getting database: Users
2025-02-10 13:57:36,724 - root - INFO - Getting collection: Doctors
2025-02-10 13:57:36,727 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:57:36,836 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:57:36,836 - root - INFO - Getting database: Cases
2025-02-10 13:57:36,836 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-10 13:57:36,836 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-10 13:57:36,970 - app.models.case - ERROR - An unexpected error occurred while retrieving cases: 2 validation errors for Case
notes
  Input should be a valid string [type=string_type, input_value=[], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/string_type
case_id
  Field required [type=missing, input_value={'id': 'acec3bba-e4a0-465... 2, 9, 0, 18, 42, 6000)}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\app\models\case.py", line 161, in get_cases_by_doctor
    case_data = jsonable_encoder(Case(**case))
                                 ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 2 validation errors for Case
notes
  Input should be a valid string [type=string_type, input_value=[], input_type=list]
    For further information visit https://errors.pydantic.dev/2.9/v/string_type
case_id
  Field required [type=missing, input_value={'id': 'acec3bba-e4a0-465... 2, 9, 0, 18, 42, 6000)}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-10 13:59:09,062 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:59:09,063 - app.middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:59:09,068 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 13:59:09,068 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 13:59:09,070 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 13:59:09,070 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 13:59:09,079 - root - INFO - Getting database: Users
2025-02-10 13:59:09,079 - root - INFO - Getting collection: Doctors
2025-02-10 13:59:09,080 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 13:59:09,191 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 13:59:09,195 - root - INFO - Getting database: Cases
2025-02-10 13:59:09,195 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-10 13:59:09,195 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-10 13:59:09,317 - app.models.case - INFO - Retrieved 6 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 13:59:47,189 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 13:59:58,970 - app.middleware.authentication - INFO - Checking Authorization header for /cases/get_cases
2025-02-10 13:59:58,973 - app.middleware.authentication - INFO - Valid token received for /cases/get_cases
2025-02-10 14:00:01,958 - app.middleware.authentication - INFO - Checking Authorization header for /cases/get_cases
2025-02-10 14:00:01,958 - app.middleware.authentication - INFO - Valid token received for /cases/get_cases
2025-02-10 14:00:44,877 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 14:00:57,294 - app.middleware.authentication - INFO - Checking Authorization header for /cases/get_cases
2025-02-10 14:00:57,294 - app.middleware.authentication - INFO - Valid token received for /cases/get_cases
2025-02-10 14:00:57,303 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 14:00:57,303 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 14:00:57,305 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 14:00:57,307 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 14:00:57,307 - root - INFO - Getting database: Users
2025-02-10 14:00:57,308 - root - INFO - Getting collection: Doctors
2025-02-10 14:00:57,308 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 14:00:57,432 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 14:01:08,388 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 14:01:18,377 - app.middleware.authentication - INFO - Checking Authorization header for /cases/get_cases
2025-02-10 14:01:18,377 - app.middleware.authentication - INFO - Valid token received for /cases/get_cases
2025-02-10 14:01:18,384 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 14:01:18,384 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 14:01:18,384 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 14:01:18,390 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 14:01:18,390 - root - INFO - Getting database: Users
2025-02-10 14:01:18,392 - root - INFO - Getting collection: Doctors
2025-02-10 14:01:18,393 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 14:01:18,500 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 14:01:18,507 - root - INFO - Getting database: Cases
2025-02-10 14:01:18,507 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-10 14:01:18,507 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-10 14:01:18,626 - app.models.case - INFO - Retrieved 6 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-10 14:01:37,599 - app.middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-10 14:01:37,599 - app.middleware.authentication - INFO - Valid token received for /users/doctors
2025-02-10 14:01:37,605 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 14:01:37,607 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 14:01:37,607 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 14:01:37,607 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 14:01:37,607 - root - INFO - Getting database: Users
2025-02-10 14:01:37,610 - root - INFO - Getting collection: Doctors
2025-02-10 14:01:37,610 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 14:01:37,721 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 14:01:37,724 - root - INFO - Getting database: Users
2025-02-10 14:01:37,724 - root - INFO - Getting collection: Doctors
2025-02-10 14:01:37,726 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 14:06:09,602 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 14:06:26,234 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-10 14:06:52,208 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-10 14:06:52,208 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-10 14:06:52,213 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-10 14:06:52,213 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5Nzk1MDk4fQ._77uD2_-WYYMZpP496uNpjb49wXBdOcC9qlTcqORqZA
2025-02-10 14:06:52,213 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-10 14:06:52,216 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739795098}
2025-02-10 14:06:52,218 - root - INFO - Getting database: Users
2025-02-10 14:06:52,218 - root - INFO - Getting collection: Doctors
2025-02-10 14:06:52,220 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-10 14:06:52,331 - app.models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-10 14:06:52,338 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-10 14:06:52,339 - root - INFO - Getting database: Users
2025-02-10 14:06:52,339 - root - INFO - Getting collection: Patients
2025-02-10 14:06:52,339 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-10 14:06:52,457 - app.models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-10 14:07:48,158 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-10 14:07:48,621 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-10 14:10:34,078 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 11:55:57,139 - app.middleware.authentication - INFO - Checking Authorization header for /
2025-02-12 11:55:57,141 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /
2025-02-12 11:55:57,142 - app.middleware.authentication - ERROR - HTTPException on /: Missing or invalid Authorization header
2025-02-12 11:55:57,621 - app.middleware.authentication - INFO - Checking Authorization header for /favicon.ico
2025-02-12 11:55:57,621 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /favicon.ico
2025-02-12 11:55:57,621 - app.middleware.authentication - ERROR - HTTPException on /favicon.ico: Missing or invalid Authorization header
2025-02-12 11:56:01,021 - app.middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-12 11:56:01,945 - app.middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-12 11:57:07,206 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 11:57:07,240 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-12 11:57:07,240 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-12 11:57:07,242 - root - INFO - Getting database: Users
2025-02-12 11:57:07,242 - root - INFO - Getting collection: Doctors
2025-02-12 11:57:07,242 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 11:57:07,978 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-12 11:57:58,321 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 11:57:58,321 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/new_case
2025-02-12 11:57:58,322 - app.middleware.authentication - ERROR - HTTPException on /cases/new_case: Missing or invalid Authorization header
2025-02-12 11:58:29,392 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 11:58:29,392 - app.middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/new_case
2025-02-12 11:58:29,395 - app.middleware.authentication - ERROR - HTTPException on /cases/new_case: Missing or invalid Authorization header
2025-02-12 12:55:22,167 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:13:48,450 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 13:13:48,490 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-12 13:13:48,490 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-12 13:13:48,492 - root - INFO - Getting database: Users
2025-02-12 13:13:48,492 - root - INFO - Getting collection: Doctors
2025-02-12 13:13:48,492 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:13:50,140 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-12 13:26:31,450 - app.middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-12 13:26:31,453 - app.middleware.authentication - ERROR - HTTPException on /cases/cases/patient/12345: Token has expired
2025-02-12 13:26:42,129 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 13:26:42,139 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-12 13:26:42,142 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-12 13:26:42,142 - root - INFO - Getting database: Users
2025-02-12 13:26:42,143 - root - INFO - Getting collection: Doctors
2025-02-12 13:26:42,143 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:26:42,753 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-12 13:27:36,080 - app.middleware.authentication - INFO - Checking Authorization header for /users/patient/12345
2025-02-12 13:27:36,081 - app.middleware.authentication - ERROR - HTTPException on /users/patient/12345: Token has expired
2025-02-12 13:28:11,463 - app.middleware.authentication - INFO - Checking Authorization header for /users/patient/12345
2025-02-12 13:28:11,464 - app.middleware.authentication - ERROR - HTTPException on /users/patient/12345: Token has expired
2025-02-12 13:29:01,507 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:29:01,508 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-12 13:29:43,452 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 13:29:43,455 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-12 13:29:43,457 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-12 13:29:43,457 - root - INFO - Getting database: Users
2025-02-12 13:29:43,457 - root - INFO - Getting collection: Doctors
2025-02-12 13:29:43,457 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:29:43,924 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-12 13:30:05,986 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:30:05,990 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-12 13:30:29,634 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-12 13:30:29,642 - app.middleware.authentication - ERROR - HTTPException on /users/register-patient: Token has expired
2025-02-12 13:31:09,515 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 13:31:09,519 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-12 13:31:09,519 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-12 13:31:09,520 - root - INFO - Getting database: Users
2025-02-12 13:31:09,520 - root - INFO - Getting collection: Doctors
2025-02-12 13:31:09,520 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:31:10,215 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-12 13:31:10,389 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:31:27,842 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:31:27,843 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-12 13:32:31,913 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:32:31,934 - app.routers.users - INFO - Doctor registration input: {'email': 'test1@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:32:31,934 - root - INFO - Getting database: Users
2025-02-12 13:32:31,934 - root - INFO - Getting collection: Doctors
2025-02-12 13:32:31,935 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:32:32,048 - app.models.doctor - INFO - Creating doctor profile for email: test1@test.com
2025-02-12 13:32:32,049 - root - INFO - Getting database: Users
2025-02-12 13:32:32,050 - root - INFO - Getting collection: Doctors
2025-02-12 13:32:32,050 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:32:32,695 - root - INFO - Getting database: Users
2025-02-12 13:32:32,697 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:32:32,919 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 25a2b5b8-fbb2-484e-8d87-cc0b63b0f7f6
2025-02-12 13:32:32,919 - app.models.doctor - INFO - Doctor created successfully with id: 25a2b5b8-fbb2-484e-8d87-cc0b63b0f7f6
2025-02-12 13:32:32,920 - app.routers.users - INFO - Doctor successfully created.
2025-02-12 13:35:26,759 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:35:46,016 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:35:46,040 - app.routers.users - INFO - Doctor registration input: {'email': 'testm@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:35:46,042 - root - INFO - Getting database: Users
2025-02-12 13:35:46,042 - root - INFO - Getting collection: Doctors
2025-02-12 13:35:46,042 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:35:46,155 - app.models.doctor - INFO - Creating doctor profile for email: testm@test.com
2025-02-12 13:35:46,157 - root - INFO - Getting database: Users
2025-02-12 13:35:46,158 - root - INFO - Getting collection: Doctors
2025-02-12 13:35:46,158 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:35:46,850 - root - INFO - Getting database: Users
2025-02-12 13:35:46,851 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:35:46,962 - app.models.api_key - ERROR - Error allocating API key: 'getset_descriptor' object is not callable
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\api_key.py", line 112, in allocate_api_key
    "expired_date": datetime.now()+ datetime.day(30)
                                    ^^^^^^^^^^^^^^^^
TypeError: 'getset_descriptor' object is not callable
2025-02-12 13:35:46,970 - app.models.doctor - ERROR - An unexpected error occurred while creating doctor: 500: An error occurred while allocating the API key: 'getset_descriptor' object is not callable
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\api_key.py", line 112, in allocate_api_key
    "expired_date": datetime.now()+ datetime.day(30)
                                    ^^^^^^^^^^^^^^^^
TypeError: 'getset_descriptor' object is not callable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\doctor.py", line 95, in create_doctor
    api_key = allocate_api_key(doctor_data["doctor_id"])
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\api_key.py", line 130, in allocate_api_key
    raise HTTPException(
fastapi.exceptions.HTTPException: 500: An error occurred while allocating the API key: 'getset_descriptor' object is not callable
2025-02-12 13:35:46,973 - app.routers.users - INFO - Doctor successfully created.
2025-02-12 13:38:09,715 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:39:29,791 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:39:29,808 - app.routers.users - INFO - Doctor registration input: {'email': 'testm@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:39:29,810 - root - INFO - Getting database: Users
2025-02-12 13:39:29,810 - root - INFO - Getting collection: Doctors
2025-02-12 13:39:29,810 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:39:29,918 - app.routers.users - ERROR - Email is already registered: testm@test.com
2025-02-12 13:39:29,918 - app.routers.users - ERROR - Error creating doctor: Email is already registered.
2025-02-12 13:39:30,075 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:39:37,148 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:39:37,165 - app.routers.users - INFO - Doctor registration input: {'email': 'test10@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:39:37,166 - root - INFO - Getting database: Users
2025-02-12 13:39:37,166 - root - INFO - Getting collection: Doctors
2025-02-12 13:39:37,167 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:39:37,279 - app.models.doctor - INFO - Creating doctor profile for email: test10@test.com
2025-02-12 13:39:37,280 - root - INFO - Getting database: Users
2025-02-12 13:39:37,281 - root - INFO - Getting collection: Doctors
2025-02-12 13:39:37,281 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:39:37,881 - root - INFO - Getting database: Users
2025-02-12 13:39:37,882 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:39:38,123 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 898b6f02-125a-46ad-ab79-9eae6aa1d7b1
2025-02-12 13:39:38,124 - app.models.doctor - INFO - Doctor created successfully with id: 898b6f02-125a-46ad-ab79-9eae6aa1d7b1
2025-02-12 13:39:38,125 - app.routers.users - INFO - Doctor successfully created.
2025-02-12 13:50:05,215 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:50:05,239 - app.routers.users - INFO - Doctor registration input: {'email': 'test007@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:50:05,240 - root - INFO - Getting database: Users
2025-02-12 13:50:05,240 - root - INFO - Getting collection: Doctors
2025-02-12 13:50:05,241 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:50:05,363 - app.models.doctor - INFO - Creating doctor profile for email: test007@test.com
2025-02-12 13:50:05,365 - root - INFO - Getting database: Users
2025-02-12 13:50:05,365 - root - INFO - Getting collection: Doctors
2025-02-12 13:50:05,365 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:50:06,033 - root - INFO - Getting database: Users
2025-02-12 13:50:06,034 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:50:06,272 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 9765e239-7cdb-4769-ac63-82021246ee21
2025-02-12 13:50:06,273 - app.models.doctor - INFO - Doctor created successfully with id: 9765e239-7cdb-4769-ac63-82021246ee21
2025-02-12 13:50:06,275 - app.routers.users - INFO - Doctor successfully created.
2025-02-12 13:51:32,380 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:51:42,254 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-12 13:51:42,271 - app.routers.users - INFO - Doctor registration input: {'email': 'test001@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-12 13:51:42,273 - root - INFO - Getting database: Users
2025-02-12 13:51:42,278 - root - INFO - Getting collection: Doctors
2025-02-12 13:51:42,279 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:51:42,385 - app.models.doctor - INFO - Creating doctor profile for email: test001@test.com
2025-02-12 13:51:42,391 - root - INFO - Getting database: Users
2025-02-12 13:51:42,391 - root - INFO - Getting collection: Doctors
2025-02-12 13:51:42,391 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:51:43,065 - root - INFO - Getting database: Users
2025-02-12 13:51:43,066 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:51:43,294 - app.models.api_key - INFO - API key allocated successfully for doctor ID: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:51:43,295 - app.models.doctor - INFO - Doctor created successfully with id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:51:43,295 - app.routers.users - INFO - Doctor successfully created.
2025-02-12 13:52:13,643 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:52:13,645 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-12 13:52:21,002 - app.middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-12 13:52:21,006 - app.routers.users - INFO - Doctor Sign in input: {'email': 'Test001@test.com', 'password': '@Test123'}
2025-02-12 13:52:21,008 - app.utils.authentication - INFO - Attempting to authenticate doctor with email: Test001@test.com
2025-02-12 13:52:21,008 - root - INFO - Getting database: Users
2025-02-12 13:52:21,008 - root - INFO - Getting collection: Doctors
2025-02-12 13:52:21,008 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:52:21,529 - app.utils.authentication - INFO - JWT access token generated successfully for email: Test001@test.com
2025-02-12 13:52:36,039 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:52:36,040 - app.middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-12 13:52:53,261 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:52:53,263 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-12 13:52:53,272 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:52:53,273 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:52:53,274 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:52:53,277 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:52:53,277 - root - INFO - Getting database: Users
2025-02-12 13:52:53,280 - root - INFO - Getting collection: Doctors
2025-02-12 13:52:53,282 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:52:53,395 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:52:53,399 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-12 13:52:53,399 - root - INFO - Getting database: Users
2025-02-12 13:52:53,399 - root - INFO - Getting collection: Patients
2025-02-12 13:52:53,399 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:52:53,512 - app.models.patient - WARNING - Patient with patient_number 12345 not found for doctor 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:52:53,512 - app.models.patient - ERROR - Error retrieving patient: Patient with patient_number 12345 not found.
2025-02-12 13:53:04,236 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-12 13:53:04,237 - app.middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-12 13:53:04,239 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:53:04,239 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:53:04,239 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:53:04,239 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:53:04,240 - root - INFO - Getting database: Users
2025-02-12 13:53:04,240 - root - INFO - Getting collection: Doctors
2025-02-12 13:53:04,240 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:53:04,350 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:53:04,353 - app.models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-12 13:53:04,353 - root - INFO - Getting database: Users
2025-02-12 13:53:04,355 - root - INFO - Getting collection: Patients
2025-02-12 13:53:04,355 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:53:04,465 - app.models.patient - WARNING - Patient with patient_number 12345 not found for doctor 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:53:04,466 - app.models.patient - ERROR - Error retrieving patient: Patient with patient_number 12345 not found.
2025-02-12 13:54:04,456 - app.middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-12 13:54:04,457 - app.middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-12 13:54:04,459 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:54:04,460 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:54:04,460 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:54:04,460 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:54:04,461 - root - INFO - Getting database: Users
2025-02-12 13:54:04,461 - root - INFO - Getting collection: Doctors
2025-02-12 13:54:04,461 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:54:04,569 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:54:04,613 - app.models.patient - INFO - Creating patient profile for name: Patient01
2025-02-12 13:54:04,615 - root - INFO - Getting database: Users
2025-02-12 13:54:04,615 - root - INFO - Getting collection: Patients
2025-02-12 13:54:04,615 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:54:04,885 - app.models.patient - INFO - Patient created successfully with patient_number: 1
2025-02-12 13:54:17,211 - app.middleware.authentication - INFO - Checking Authorization header for /users/patients/1
2025-02-12 13:54:17,212 - app.middleware.authentication - INFO - Valid token received for /users/patients/1
2025-02-12 13:54:17,213 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:54:17,213 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:54:17,214 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:54:17,214 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:54:17,215 - root - INFO - Getting database: Users
2025-02-12 13:54:17,215 - root - INFO - Getting collection: Doctors
2025-02-12 13:54:17,215 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:54:17,323 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:54:17,325 - app.models.patient - INFO - Fetching patient with patient_number: 1
2025-02-12 13:54:17,325 - root - INFO - Getting database: Users
2025-02-12 13:54:17,325 - root - INFO - Getting collection: Patients
2025-02-12 13:54:17,325 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:54:17,435 - app.models.patient - INFO - Patient found: Patient01 (patient_number: 1)
2025-02-12 13:55:02,819 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 13:55:02,820 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 13:55:02,823 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:55:02,823 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:55:02,823 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:55:02,825 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:55:02,825 - root - INFO - Getting database: Users
2025-02-12 13:55:02,825 - root - INFO - Getting collection: Doctors
2025-02-12 13:55:02,825 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:55:02,934 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:55:02,936 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 13:55:02,937 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 13:55:02,937 - app.models.case - INFO - Generated unique filename: image_20250212135502_7e1c3183.melanoma_10105.jpg
2025-02-12 13:55:02,937 - root - INFO - Getting database: Users
2025-02-12 13:55:02,938 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:55:03,047 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:55:03,048 - app.models.api_key - INFO - Api info:{'api_key_id': '7b510185-9c80-491e-9cff-d9c8ac83a800', 'doctor_id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'api_key': 'ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d', 'created_at': '2025-02-12 13:51:43', 'expired_date': '2025-03-14 13:51:43', 'usage': 1000}
2025-02-12 13:55:03,048 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 13:55:03,048 - root - INFO - Getting database: Users
2025-02-12 13:55:03,048 - root - INFO - Getting collection: Patients
2025-02-12 13:55:03,048 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:55:03,160 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 13:55:03,160 - app.models.case - INFO - Starting image upload process
2025-02-12 13:55:03,162 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 13:55:03,162 - root - INFO - Getting database: Images
2025-02-12 13:55:03,162 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 13:55:03,662 - app.models.case - INFO - Image uploaded successfully with ID: 67aca83750b39dcd246e10cd
2025-02-12 13:55:03,662 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67aca83750b39dcd246e10cd
2025-02-12 13:55:03,663 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 13:55:03,814 - app.models.case - INFO - Received response from ML API with status code: 400
2025-02-12 13:55:03,815 - app.models.case - WARNING - ML API returned non-200 status code: 400
2025-02-12 13:55:03,817 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 13:55:03,817 - root - INFO - Getting database: Cases
2025-02-12 13:55:03,818 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 13:55:03,818 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 13:55:03,945 - app.models.case - INFO - Case created successfully with id: 51e01556-78b8-4c8f-b3f9-fe211a5c1d46
2025-02-12 13:55:39,932 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 13:55:46,980 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 13:55:46,983 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 13:55:46,983 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 13:55:46,983 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 13:55:46,983 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 13:55:46,983 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 13:55:46,983 - root - INFO - Getting database: Users
2025-02-12 13:55:46,990 - root - INFO - Getting collection: Doctors
2025-02-12 13:55:46,990 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 13:55:47,098 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 13:55:47,103 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 13:55:47,104 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 13:55:47,106 - app.models.case - INFO - Generated unique filename: image_20250212135547_0422df93.melanoma_10105.jpg
2025-02-12 13:55:47,107 - root - INFO - Getting database: Users
2025-02-12 13:55:47,107 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 13:55:47,211 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 13:55:47,222 - app.models.api_key - INFO - Api info:{'api_key_id': '7b510185-9c80-491e-9cff-d9c8ac83a800', 'doctor_id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'api_key': 'ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d', 'created_at': '2025-02-12 13:51:43', 'expired_date': '2025-03-14 13:51:43', 'usage': 1000}
2025-02-12 13:55:47,225 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 13:55:47,225 - root - INFO - Getting database: Users
2025-02-12 13:55:47,225 - root - INFO - Getting collection: Patients
2025-02-12 13:55:47,227 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 13:55:47,344 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 13:55:47,346 - app.models.case - INFO - Starting image upload process
2025-02-12 13:55:47,346 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 13:55:47,346 - root - INFO - Getting database: Images
2025-02-12 13:55:47,348 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 13:55:47,801 - app.models.case - INFO - Image uploaded successfully with ID: 67aca8636097aad5abcedd0a
2025-02-12 13:55:47,801 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67aca8636097aad5abcedd0a
2025-02-12 13:55:47,801 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 13:55:47,960 - app.models.case - INFO - Received response from ML API with status code: 400
2025-02-12 13:55:47,960 - app.models.case - WARNING - ML API returned non-200 status code: 400
2025-02-12 13:55:47,961 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 13:55:47,961 - root - INFO - Getting database: Cases
2025-02-12 13:55:47,961 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 13:55:47,961 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 13:55:48,074 - app.models.case - INFO - Case created successfully with id: 048faedf-ca16-45fc-bef0-27e950e72260
2025-02-12 13:59:39,015 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:00:41,352 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:02:11,482 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:02:17,827 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:02:17,827 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:02:17,832 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:02:17,832 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:02:17,832 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:02:17,833 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:02:17,833 - root - INFO - Getting database: Users
2025-02-12 14:02:17,833 - root - INFO - Getting collection: Doctors
2025-02-12 14:02:17,833 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:02:17,955 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:02:17,957 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:02:17,958 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:02:17,958 - app.models.case - INFO - Generated unique filename: image_20250212140217_9fbf5bd3.melanoma_10105.jpg
2025-02-12 14:02:17,958 - root - INFO - Getting database: Users
2025-02-12 14:02:17,958 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:02:18,076 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:02:18,077 - app.models.api_key - INFO - Api info:{'api_key_id': '7b510185-9c80-491e-9cff-d9c8ac83a800', 'doctor_id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'api_key': 'ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d', 'created_at': '2025-02-12 13:51:43', 'expired_date': '2025-03-14 13:51:43', 'usage': 1000}
2025-02-12 14:02:18,077 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:02:18,077 - root - INFO - Getting database: Users
2025-02-12 14:02:18,077 - root - INFO - Getting collection: Patients
2025-02-12 14:02:18,078 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:02:18,195 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:02:18,196 - app.models.case - INFO - Starting image upload process
2025-02-12 14:02:18,197 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:02:18,197 - root - INFO - Getting database: Images
2025-02-12 14:02:18,198 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:02:18,706 - app.models.case - INFO - Image uploaded successfully with ID: 67aca9eaf0651580f277ef9a
2025-02-12 14:02:18,706 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67aca9eaf0651580f277ef9a
2025-02-12 14:02:18,707 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:02:18,711 - app.models.case - ERROR - Unexpected error during diagnosis: a bytes-like object is required, not 'coroutine'
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 276, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5,headers=headers)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 575, in request
    prep = self.prepare_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 484, in prepare_request
    p.prepare(
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 370, in prepare
    self.prepare_body(data, files, json)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 555, in prepare_body
    (body, content_type) = self._encode_files(files, data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 201, in _encode_files
    body, content_type = encode_multipart_formdata(new_fields)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\filepost.py", line 81, in encode_multipart_formdata
    body.write(data)
TypeError: a bytes-like object is required, not 'coroutine'
2025-02-12 14:02:18,753 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:02:18,753 - root - INFO - Getting database: Cases
2025-02-12 14:02:18,753 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:02:18,753 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:02:18,881 - app.models.case - INFO - Case created successfully with id: f846a647-c9e6-4080-a133-517ab67b9d66
2025-02-12 14:04:17,798 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:04:23,019 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:04:23,019 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:04:23,023 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:04:23,027 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:04:23,028 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:04:23,029 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:04:23,029 - root - INFO - Getting database: Users
2025-02-12 14:04:23,029 - root - INFO - Getting collection: Doctors
2025-02-12 14:04:23,029 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:04:23,145 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:04:23,147 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:04:23,148 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:04:23,148 - app.models.case - INFO - Generated unique filename: image_20250212140423_3b0adb82.melanoma_10105.jpg
2025-02-12 14:04:23,148 - root - INFO - Getting database: Users
2025-02-12 14:04:23,148 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:04:23,266 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:04:23,266 - app.models.api_key - INFO - Api info:{'api_key_id': '7b510185-9c80-491e-9cff-d9c8ac83a800', 'doctor_id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'api_key': 'ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d', 'created_at': '2025-02-12 13:51:43', 'expired_date': '2025-03-14 13:51:43', 'usage': 1000}
2025-02-12 14:04:23,266 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:04:23,266 - root - INFO - Getting database: Users
2025-02-12 14:04:23,268 - root - INFO - Getting collection: Patients
2025-02-12 14:04:23,268 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:04:23,448 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:04:23,449 - app.models.case - INFO - Starting image upload process
2025-02-12 14:04:23,449 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:04:23,450 - root - INFO - Getting database: Images
2025-02-12 14:04:23,450 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:04:23,922 - app.models.case - INFO - Image uploaded successfully with ID: 67acaa67e4304eb5a571b7c9
2025-02-12 14:04:23,923 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acaa67e4304eb5a571b7c9
2025-02-12 14:04:23,923 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:04:23,929 - app.models.case - ERROR - Unexpected error during diagnosis: a bytes-like object is required, not 'coroutine'
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 276, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5,headers=headers)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 575, in request
    prep = self.prepare_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 484, in prepare_request
    p.prepare(
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 370, in prepare
    self.prepare_body(data, files, json)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 555, in prepare_body
    (body, content_type) = self._encode_files(files, data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 201, in _encode_files
    body, content_type = encode_multipart_formdata(new_fields)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\filepost.py", line 81, in encode_multipart_formdata
    body.write(data)
TypeError: a bytes-like object is required, not 'coroutine'
2025-02-12 14:04:23,937 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:04:23,940 - root - INFO - Getting database: Cases
2025-02-12 14:04:23,940 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:04:23,941 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:04:24,102 - app.models.case - INFO - Case created successfully with id: 472f5adb-3e16-432a-9c90-7b9f164a5274
2025-02-12 14:05:41,472 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:05:45,297 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:05:45,299 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:05:45,303 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:05:45,303 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:05:45,304 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:05:45,305 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:05:45,305 - root - INFO - Getting database: Users
2025-02-12 14:05:45,305 - root - INFO - Getting collection: Doctors
2025-02-12 14:05:45,305 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:05:45,427 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:05:45,429 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:05:45,430 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:05:45,430 - app.models.case - INFO - Generated unique filename: image_20250212140545_852f901c.melanoma_10105.jpg
2025-02-12 14:05:45,430 - root - INFO - Getting database: Users
2025-02-12 14:05:45,431 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:05:45,550 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:05:45,550 - app.models.api_key - INFO - Api info:{'api_key_id': '7b510185-9c80-491e-9cff-d9c8ac83a800', 'doctor_id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'api_key': 'ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d', 'created_at': '2025-02-12 13:51:43', 'expired_date': '2025-03-14 13:51:43', 'usage': 1000}
2025-02-12 14:05:45,555 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:05:45,555 - root - INFO - Getting database: Users
2025-02-12 14:05:45,555 - root - INFO - Getting collection: Patients
2025-02-12 14:05:45,555 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:05:45,675 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:05:45,675 - app.models.case - INFO - Starting image upload process
2025-02-12 14:05:45,677 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:05:45,677 - root - INFO - Getting database: Images
2025-02-12 14:05:45,677 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:05:46,175 - app.models.case - INFO - Image uploaded successfully with ID: 67acaab9f852f43f29ac52cc
2025-02-12 14:05:46,175 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acaab9f852f43f29ac52cc
2025-02-12 14:05:46,181 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:05:46,186 - app.models.case - ERROR - Unexpected error during diagnosis: a bytes-like object is required, not 'coroutine'
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 276, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5,headers=headers)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 575, in request
    prep = self.prepare_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 484, in prepare_request
    p.prepare(
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 370, in prepare
    self.prepare_body(data, files, json)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 555, in prepare_body
    (body, content_type) = self._encode_files(files, data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 201, in _encode_files
    body, content_type = encode_multipart_formdata(new_fields)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\filepost.py", line 81, in encode_multipart_formdata
    body.write(data)
TypeError: a bytes-like object is required, not 'coroutine'
2025-02-12 14:05:46,202 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:05:46,203 - root - INFO - Getting database: Cases
2025-02-12 14:05:46,203 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:05:46,204 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:05:46,336 - app.models.case - INFO - Case created successfully with id: 4fca574e-dd0e-4f14-8d6b-02f4ee2a5450
2025-02-12 14:08:42,389 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:08:51,812 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:08:51,816 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:08:51,816 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:08:51,826 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:08:51,828 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:08:51,828 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:08:51,829 - root - INFO - Getting database: Users
2025-02-12 14:08:51,829 - root - INFO - Getting collection: Doctors
2025-02-12 14:08:51,830 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:08:51,953 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:08:51,957 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:08:51,957 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:08:51,957 - app.models.case - INFO - Generated unique filename: image_20250212140851_848cfecf.melanoma_10105.jpg
2025-02-12 14:08:51,957 - root - INFO - Getting database: Users
2025-02-12 14:08:51,958 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:08:52,074 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:08:52,074 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:08:52,074 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:08:52,080 - root - INFO - Getting database: Users
2025-02-12 14:08:52,080 - root - INFO - Getting collection: Patients
2025-02-12 14:08:52,080 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:08:52,228 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:08:52,228 - app.models.case - INFO - Starting image upload process
2025-02-12 14:08:52,228 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:08:52,228 - root - INFO - Getting database: Images
2025-02-12 14:08:52,228 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:08:52,732 - app.models.case - INFO - Image uploaded successfully with ID: 67acab742d36d47836c69ae7
2025-02-12 14:08:52,734 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acab742d36d47836c69ae7
2025-02-12 14:08:52,734 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:08:52,736 - app.models.case - ERROR - Unexpected error during diagnosis: a bytes-like object is required, not 'coroutine'
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 276, in get_diagnosis
    response = requests.post(ML_API_URL, files=files, timeout=5,headers=headers)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 575, in request
    prep = self.prepare_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\sessions.py", line 484, in prepare_request
    p.prepare(
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 370, in prepare
    self.prepare_body(data, files, json)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 555, in prepare_body
    (body, content_type) = self._encode_files(files, data)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\requests\models.py", line 201, in _encode_files
    body, content_type = encode_multipart_formdata(new_fields)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\filepost.py", line 81, in encode_multipart_formdata
    body.write(data)
TypeError: a bytes-like object is required, not 'coroutine'
2025-02-12 14:08:52,743 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:08:52,743 - root - INFO - Getting database: Cases
2025-02-12 14:08:52,744 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:08:52,744 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:08:52,877 - app.models.case - INFO - Case created successfully with id: 72073bb8-22b0-4a4f-9ad3-c69b497a2ade
2025-02-12 14:10:45,633 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:10:52,536 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:10:52,537 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:10:52,542 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:10:52,542 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:10:52,542 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:10:52,542 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:10:52,542 - root - INFO - Getting database: Users
2025-02-12 14:10:52,543 - root - INFO - Getting collection: Doctors
2025-02-12 14:10:52,543 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:10:52,665 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:10:52,667 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:10:52,667 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:10:52,668 - app.models.case - INFO - Generated unique filename: image_20250212141052_5c5963d9.melanoma_10105.jpg
2025-02-12 14:10:52,668 - root - INFO - Getting database: Users
2025-02-12 14:10:52,668 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:10:52,791 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:10:52,792 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:10:52,793 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:10:52,794 - root - INFO - Getting database: Users
2025-02-12 14:10:52,795 - root - INFO - Getting collection: Patients
2025-02-12 14:10:52,797 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:10:52,922 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:10:52,923 - app.models.case - INFO - Starting image upload process
2025-02-12 14:10:52,923 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:10:52,925 - root - INFO - Getting database: Images
2025-02-12 14:10:52,926 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:10:53,433 - app.models.case - INFO - Image uploaded successfully with ID: 67acabecbb17e7c3f183e1f2
2025-02-12 14:10:53,433 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acabecbb17e7c3f183e1f2
2025-02-12 14:10:53,433 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:10:53,612 - app.models.case - INFO - Received response from ML API with status code: 500
2025-02-12 14:10:53,612 - app.models.case - WARNING - ML API returned non-200 status code: 500
2025-02-12 14:10:53,614 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:10:53,615 - root - INFO - Getting database: Cases
2025-02-12 14:10:53,616 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:10:53,617 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:10:53,754 - app.models.case - INFO - Case created successfully with id: 4e35879d-9af8-44d7-b048-b08969445adb
2025-02-12 14:12:00,403 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:12:00,404 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:12:00,406 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:12:00,406 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:12:00,406 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:12:00,408 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:12:00,408 - root - INFO - Getting database: Users
2025-02-12 14:12:00,408 - root - INFO - Getting collection: Doctors
2025-02-12 14:12:00,408 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:12:00,529 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:12:00,530 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:12:00,530 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:12:00,531 - app.models.case - INFO - Generated unique filename: image_20250212141200_dbd3bf7f.melanoma_10105.jpg
2025-02-12 14:12:00,531 - root - INFO - Getting database: Users
2025-02-12 14:12:00,531 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:12:00,651 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:12:00,652 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:12:00,653 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:12:00,654 - root - INFO - Getting database: Users
2025-02-12 14:12:00,654 - root - INFO - Getting collection: Patients
2025-02-12 14:12:00,657 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:12:00,786 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:12:00,787 - app.models.case - INFO - Starting image upload process
2025-02-12 14:12:00,787 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:12:00,788 - root - INFO - Getting database: Images
2025-02-12 14:12:00,791 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:12:01,298 - app.models.case - INFO - Image uploaded successfully with ID: 67acac30bb17e7c3f183e1f5
2025-02-12 14:12:01,299 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acac30bb17e7c3f183e1f5
2025-02-12 14:12:01,300 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:12:01,464 - app.models.case - INFO - Received response from ML API with status code: 500
2025-02-12 14:12:01,465 - app.models.case - WARNING - ML API returned non-200 status code: 500
2025-02-12 14:12:01,465 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:12:01,466 - root - INFO - Getting database: Cases
2025-02-12 14:12:01,467 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:12:01,467 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:12:01,594 - app.models.case - INFO - Case created successfully with id: c79f63cb-bdde-4061-83d8-8773e8d9755b
2025-02-12 14:12:01,833 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:13:41,486 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:14:21,491 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:14:21,491 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:14:21,495 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:14:21,496 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:14:21,496 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:14:21,496 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:14:21,498 - root - INFO - Getting database: Users
2025-02-12 14:14:21,499 - root - INFO - Getting collection: Doctors
2025-02-12 14:14:21,499 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:14:21,619 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:14:21,619 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:14:21,621 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:14:21,621 - app.models.case - INFO - Generated unique filename: image_20250212141421_532048ae.melanoma_10105.jpg
2025-02-12 14:14:21,621 - root - INFO - Getting database: Users
2025-02-12 14:14:21,622 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:14:21,740 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:14:21,740 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:14:21,740 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:14:21,740 - root - INFO - Getting database: Users
2025-02-12 14:14:21,740 - root - INFO - Getting collection: Patients
2025-02-12 14:14:21,740 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:14:21,861 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:14:21,863 - app.models.case - INFO - Starting image upload process
2025-02-12 14:14:21,863 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:14:21,863 - root - INFO - Getting database: Images
2025-02-12 14:14:21,863 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:14:22,360 - app.models.case - INFO - Image uploaded successfully with ID: 67acacbdf8572d8adc7a6887
2025-02-12 14:14:22,364 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acacbdf8572d8adc7a6887
2025-02-12 14:14:22,364 - app.models.case - INFO - Starting diagnosis process for image: melanoma_10105.jpg
2025-02-12 14:14:22,524 - app.models.case - INFO - Received response from ML API with status code: 500
2025-02-12 14:14:22,525 - app.models.case - WARNING - ML API returned non-200 status code: 500
2025-02-12 14:14:22,526 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:14:22,526 - root - INFO - Getting database: Cases
2025-02-12 14:14:22,526 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:14:22,528 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:14:22,668 - app.models.case - INFO - Case created successfully with id: 6518f674-df63-48bf-894a-f2f76f8bc938
2025-02-12 14:15:16,156 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:15:21,531 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:15:21,532 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:15:21,534 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:15:21,535 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:15:21,535 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:15:21,536 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:15:21,536 - root - INFO - Getting database: Users
2025-02-12 14:15:21,536 - root - INFO - Getting collection: Doctors
2025-02-12 14:15:21,536 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:15:21,657 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:15:21,658 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:15:21,659 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:15:21,659 - app.models.case - INFO - Generated unique filename: image_20250212141521_cacb27f8.melanoma_10105.jpg
2025-02-12 14:15:21,659 - root - INFO - Getting database: Users
2025-02-12 14:15:21,659 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:15:21,779 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:15:21,780 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:15:21,780 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:15:21,780 - root - INFO - Getting database: Users
2025-02-12 14:15:21,780 - root - INFO - Getting collection: Patients
2025-02-12 14:15:21,781 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:15:21,900 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:15:21,901 - app.models.case - INFO - Starting image upload process
2025-02-12 14:15:21,902 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:15:21,902 - root - INFO - Getting database: Images
2025-02-12 14:15:21,907 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:15:22,401 - app.models.case - INFO - Image uploaded successfully with ID: 67acacf9b197607940231631
2025-02-12 14:15:22,401 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acacf9b197607940231631
2025-02-12 14:15:22,404 - app.models.case - ERROR - Unexpected error during case creation: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 324, in jsonable_encoder
    data = dict(obj)
           ^^^^^^^^^
TypeError: 'coroutine' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 329, in jsonable_encoder
    data = vars(obj)
           ^^^^^^^^^
TypeError: vars() argument must have __dict__ attribute

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 417, in create_case
    diagnosis = jsonable_encoder(diagnosis_result)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 332, in jsonable_encoder
    raise ValueError(errors) from e
ValueError: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
2025-02-12 14:17:24,311 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:17:30,234 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:17:30,234 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:17:30,238 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:17:30,238 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:17:30,238 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:17:30,238 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:17:30,238 - root - INFO - Getting database: Users
2025-02-12 14:17:30,242 - root - INFO - Getting collection: Doctors
2025-02-12 14:17:30,243 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:17:30,364 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:17:30,367 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:17:30,367 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:17:30,368 - app.models.case - INFO - Generated unique filename: image_20250212141730_0fc156fe.melanoma_10105.jpg
2025-02-12 14:17:30,368 - root - INFO - Getting database: Users
2025-02-12 14:17:30,368 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:17:30,481 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:17:30,481 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:17:30,481 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:17:30,488 - root - INFO - Getting database: Users
2025-02-12 14:17:30,488 - root - INFO - Getting collection: Patients
2025-02-12 14:17:30,488 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:17:30,612 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:17:30,612 - app.models.case - INFO - Starting image upload process
2025-02-12 14:17:30,612 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:17:30,612 - root - INFO - Getting database: Images
2025-02-12 14:17:30,612 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:17:31,117 - app.models.case - INFO - Image uploaded successfully with ID: 67acad7a0801bdf387fc339e
2025-02-12 14:17:31,117 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acad7a0801bdf387fc339e
2025-02-12 14:17:31,117 - app.models.case - ERROR - Unexpected error during case creation: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 324, in jsonable_encoder
    data = dict(obj)
           ^^^^^^^^^
TypeError: 'coroutine' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 329, in jsonable_encoder
    data = vars(obj)
           ^^^^^^^^^
TypeError: vars() argument must have __dict__ attribute

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 416, in create_case
    diagnosis = jsonable_encoder(diagnosis_result)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 332, in jsonable_encoder
    raise ValueError(errors) from e
ValueError: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
2025-02-12 14:18:50,040 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:18:57,526 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:18:57,526 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:18:57,530 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:18:57,530 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:18:57,530 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:18:57,530 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:18:57,531 - root - INFO - Getting database: Users
2025-02-12 14:18:57,531 - root - INFO - Getting collection: Doctors
2025-02-12 14:18:57,531 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:18:57,652 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:18:57,668 - app.middleware.authentication - ERROR - Unexpected error during authentication for /cases/new_case: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000001CD9D0B1FC0>}
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 157, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 163, in call_next
    raise app_exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 149, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000001CD9D0B1FC0>}

2025-02-12 14:23:28,464 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:23:34,735 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:23:34,736 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:23:34,739 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:23:34,739 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:23:34,739 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:23:34,740 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:23:34,740 - root - INFO - Getting database: Users
2025-02-12 14:23:34,740 - root - INFO - Getting collection: Doctors
2025-02-12 14:23:34,740 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:23:34,859 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:23:34,863 - app.middleware.authentication - ERROR - Unexpected error during authentication for /cases/new_case: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000001F04084DE40>}
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 157, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 163, in call_next
    raise app_exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 149, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000001F04084DE40>}

2025-02-12 14:24:44,473 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:24:44,473 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:24:44,477 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:24:44,477 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:24:44,477 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:24:44,477 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:24:44,478 - root - INFO - Getting database: Users
2025-02-12 14:24:44,478 - root - INFO - Getting collection: Doctors
2025-02-12 14:24:44,479 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:24:44,599 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:24:44,601 - app.middleware.authentication - ERROR - Unexpected error during authentication for /cases/new_case: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000002203D4A1FC0>}
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 157, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 163, in call_next
    raise app_exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\base.py", line 149, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 327, in app
    content = await serialize_response(
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\routing.py", line 176, in serialize_response
    raise ResponseValidationError(
fastapi.exceptions.ResponseValidationError: 1 validation errors:
  {'type': 'model_attributes_type', 'loc': ('response',), 'msg': 'Input should be a valid dictionary or object to extract fields from', 'input': <coroutine object create_case at 0x000002203D4A1FC0>}

2025-02-12 14:26:23,289 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:26:30,100 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:26:30,101 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:26:30,106 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:26:30,107 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:26:30,107 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:26:30,107 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:26:30,108 - root - INFO - Getting database: Users
2025-02-12 14:26:30,109 - root - INFO - Getting collection: Doctors
2025-02-12 14:26:30,109 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:26:30,232 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:26:30,236 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:26:30,238 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:26:30,239 - app.models.case - INFO - Generated unique filename: image_20250212142630_999e8a64.melanoma_10105.jpg
2025-02-12 14:26:30,241 - root - INFO - Getting database: Users
2025-02-12 14:26:30,245 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:26:30,363 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:26:30,364 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:26:30,365 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:26:30,365 - root - INFO - Getting database: Users
2025-02-12 14:26:30,366 - root - INFO - Getting collection: Patients
2025-02-12 14:26:30,366 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:26:30,485 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:26:30,487 - app.models.case - INFO - Starting image upload process
2025-02-12 14:26:30,489 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:26:30,491 - root - INFO - Getting database: Images
2025-02-12 14:26:30,491 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:26:31,011 - app.models.case - INFO - Image uploaded successfully with ID: 67acaf965dfef52a577f107b
2025-02-12 14:26:31,012 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acaf965dfef52a577f107b
2025-02-12 14:26:31,012 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:26:31,217 - app.models.case - INFO - Received response from ML API with status code: 500
2025-02-12 14:26:31,218 - app.models.case - WARNING - ML API returned non-200 status code: 500
2025-02-12 14:26:31,219 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:26:31,220 - root - INFO - Getting database: Cases
2025-02-12 14:26:31,220 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:26:31,221 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:26:31,364 - app.models.case - INFO - Case created successfully with id: 3145335d-020f-4d46-a3dc-42b723e0bc3e
2025-02-12 14:27:33,145 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:27:41,320 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:27:41,322 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:27:41,327 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:27:41,327 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:27:41,327 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:27:41,330 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:27:41,330 - root - INFO - Getting database: Users
2025-02-12 14:27:41,332 - root - INFO - Getting collection: Doctors
2025-02-12 14:27:41,332 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:27:41,453 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:27:41,455 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:27:41,455 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:27:41,455 - app.models.case - INFO - Generated unique filename: image_20250212142741_4bd4c68f.melanoma_10105.jpg
2025-02-12 14:27:41,457 - root - INFO - Getting database: Users
2025-02-12 14:27:41,457 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:27:41,573 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:27:41,581 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:27:41,582 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:27:41,582 - root - INFO - Getting database: Users
2025-02-12 14:27:41,584 - root - INFO - Getting collection: Patients
2025-02-12 14:27:41,585 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:27:41,707 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:27:41,707 - app.models.case - INFO - Starting image upload process
2025-02-12 14:27:41,709 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:27:41,709 - root - INFO - Getting database: Images
2025-02-12 14:27:41,709 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:27:42,224 - app.models.case - INFO - Image uploaded successfully with ID: 67acafdd5262d2515018f256
2025-02-12 14:27:42,226 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acafdd5262d2515018f256
2025-02-12 14:27:42,233 - app.models.case - ERROR - Unexpected error during diagnosis: object bytes can't be used in 'await' expression
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 264, in get_diagnosis
    file_bytes = await file.file.read()
                 ^^^^^^^^^^^^^^^^^^^^^^
TypeError: object bytes can't be used in 'await' expression
2025-02-12 14:27:42,237 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:27:42,238 - root - INFO - Getting database: Cases
2025-02-12 14:27:42,238 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:27:42,239 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:27:42,374 - app.models.case - INFO - Case created successfully with id: 68b7a4f0-4a85-42c5-81d2-0d8e62865d1a
2025-02-12 14:28:03,784 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:28:09,614 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:28:09,615 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:28:09,618 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:28:09,619 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:28:09,619 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:28:09,619 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:28:09,619 - root - INFO - Getting database: Users
2025-02-12 14:28:09,620 - root - INFO - Getting collection: Doctors
2025-02-12 14:28:09,620 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:28:09,741 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:28:09,743 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:28:09,744 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:28:09,744 - app.models.case - INFO - Generated unique filename: image_20250212142809_e0640b12.melanoma_10105.jpg
2025-02-12 14:28:09,745 - root - INFO - Getting database: Users
2025-02-12 14:28:09,745 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:28:09,864 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:28:09,866 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:28:09,867 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:28:09,867 - root - INFO - Getting database: Users
2025-02-12 14:28:09,867 - root - INFO - Getting collection: Patients
2025-02-12 14:28:09,868 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:28:09,986 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:28:09,987 - app.models.case - INFO - Starting image upload process
2025-02-12 14:28:09,987 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:28:09,987 - root - INFO - Getting database: Images
2025-02-12 14:28:09,987 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:28:10,484 - app.models.case - INFO - Image uploaded successfully with ID: 67acaff953546581f2dc9c57
2025-02-12 14:28:10,485 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acaff953546581f2dc9c57
2025-02-12 14:28:10,491 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:28:10,653 - app.models.case - INFO - Received response from ML API with status code: 500
2025-02-12 14:28:10,654 - app.models.case - WARNING - ML API returned non-200 status code: 500
2025-02-12 14:28:10,657 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:28:10,657 - root - INFO - Getting database: Cases
2025-02-12 14:28:10,660 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:28:10,660 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:28:10,816 - app.models.case - INFO - Case created successfully with id: 987f20b3-decb-4fbd-a576-23d1b36d8648
2025-02-12 14:29:32,380 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:29:37,081 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:29:37,082 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:29:37,086 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:29:37,086 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:29:37,086 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:29:37,087 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:29:37,087 - root - INFO - Getting database: Users
2025-02-12 14:29:37,088 - root - INFO - Getting collection: Doctors
2025-02-12 14:29:37,088 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:29:37,208 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:29:37,210 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:29:37,211 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:29:37,212 - app.models.case - INFO - Generated unique filename: image_20250212142937_e21dc22a.melanoma_10105.jpg
2025-02-12 14:29:37,212 - root - INFO - Getting database: Users
2025-02-12 14:29:37,213 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:29:37,331 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:29:37,332 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:29:37,332 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:29:37,333 - root - INFO - Getting database: Users
2025-02-12 14:29:37,333 - root - INFO - Getting collection: Patients
2025-02-12 14:29:37,333 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:29:37,460 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:29:37,461 - app.models.case - INFO - Starting image upload process
2025-02-12 14:29:37,461 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:29:37,462 - root - INFO - Getting database: Images
2025-02-12 14:29:37,463 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:29:37,969 - app.models.case - INFO - Image uploaded successfully with ID: 67acb051004a7cb02eb20a5f
2025-02-12 14:29:37,970 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb051004a7cb02eb20a5f
2025-02-12 14:29:37,971 - app.models.case - ERROR - Unexpected error during case creation: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 324, in jsonable_encoder
    data = dict(obj)
           ^^^^^^^^^
TypeError: 'coroutine' object is not iterable

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 329, in jsonable_encoder
    data = vars(obj)
           ^^^^^^^^^
TypeError: vars() argument must have __dict__ attribute

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 420, in create_case
    diagnosis = jsonable_encoder(diagnosis_result)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\mentz\AppData\Local\Programs\Python\Python312\Lib\site-packages\fastapi\encoders.py", line 332, in jsonable_encoder
    raise ValueError(errors) from e
ValueError: [TypeError("'coroutine' object is not iterable"), TypeError('vars() argument must have __dict__ attribute')]
2025-02-12 14:30:21,253 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:30:26,690 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:30:26,690 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:30:26,693 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:30:26,693 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:30:26,693 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:30:26,693 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:30:26,693 - root - INFO - Getting database: Users
2025-02-12 14:30:26,693 - root - INFO - Getting collection: Doctors
2025-02-12 14:30:26,693 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:30:26,812 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:30:26,814 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:30:26,815 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:30:26,815 - app.models.case - INFO - Generated unique filename: image_20250212143026_221d23b4.melanoma_10105.jpg
2025-02-12 14:30:26,816 - root - INFO - Getting database: Users
2025-02-12 14:30:26,816 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:30:26,937 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:30:26,941 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:30:26,942 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:30:26,943 - root - INFO - Getting database: Users
2025-02-12 14:30:26,943 - root - INFO - Getting collection: Patients
2025-02-12 14:30:26,944 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:30:27,062 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:30:27,063 - app.models.case - INFO - Starting image upload process
2025-02-12 14:30:27,063 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:30:27,064 - root - INFO - Getting database: Images
2025-02-12 14:30:27,065 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:30:27,592 - app.models.case - INFO - Image uploaded successfully with ID: 67acb0831ab526b27ae3cc40
2025-02-12 14:30:27,594 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb0831ab526b27ae3cc40
2025-02-12 14:30:27,608 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:30:28,531 - app.models.case - INFO - Received response from ML API with status code: 200
2025-02-12 14:30:28,531 - app.models.case - INFO - Response JSON from ML API: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.7459971904754639, 'date': '2025-02-12 14:30:28'}
2025-02-12 14:30:28,532 - app.models.case - ERROR - Unexpected error during diagnosis: 'bytes' object has no attribute 'filename'
Traceback (most recent call last):
  File "C:\Work\Skin diagnosis\Skin-Diagnosis-System-API\app\models\case.py", line 321, in get_diagnosis
    logger.info("Diagnosis process completed successfully for image: %s", file.filename)
                                                                          ^^^^^^^^^^^^^
AttributeError: 'bytes' object has no attribute 'filename'
2025-02-12 14:30:28,539 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:30:28,539 - root - INFO - Getting database: Cases
2025-02-12 14:30:28,540 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:30:28,540 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:30:28,668 - app.models.case - INFO - Case created successfully with id: be4123b1-ed36-475f-8cc8-2cd800b91f29
2025-02-12 14:31:21,183 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:31:25,024 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:31:25,026 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:31:25,040 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:31:25,041 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:31:25,042 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:31:25,043 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:31:25,054 - root - INFO - Getting database: Users
2025-02-12 14:31:25,054 - root - INFO - Getting collection: Doctors
2025-02-12 14:31:25,057 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:31:25,174 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:31:25,175 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:31:25,175 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:31:25,177 - app.models.case - INFO - Generated unique filename: image_20250212143125_a632d7c2.melanoma_10105.jpg
2025-02-12 14:31:25,177 - root - INFO - Getting database: Users
2025-02-12 14:31:25,177 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:31:25,300 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:31:25,302 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:31:25,302 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:31:25,304 - root - INFO - Getting database: Users
2025-02-12 14:31:25,304 - root - INFO - Getting collection: Patients
2025-02-12 14:31:25,304 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:31:25,439 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:31:25,441 - app.models.case - INFO - Starting image upload process
2025-02-12 14:31:25,442 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:31:25,442 - root - INFO - Getting database: Images
2025-02-12 14:31:25,443 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:31:25,939 - app.models.case - INFO - Image uploaded successfully with ID: 67acb0bd5a3bca4274a9f678
2025-02-12 14:31:25,939 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb0bd5a3bca4274a9f678
2025-02-12 14:31:25,951 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:31:26,423 - app.models.case - INFO - Received response from ML API with status code: 200
2025-02-12 14:31:26,424 - app.models.case - INFO - Response JSON from ML API: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.310870885848999, 'date': '2025-02-12 14:31:26'}
2025-02-12 14:31:26,424 - app.models.case - INFO - Diagnosis obtained: {'malignant': None, 'benign': None}
2025-02-12 14:31:26,425 - root - INFO - Getting database: Cases
2025-02-12 14:31:26,425 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:31:26,425 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:31:26,551 - app.models.case - INFO - Case created successfully with id: 196a05c8-a25f-4d69-a90b-9d2b0f164240
2025-02-12 14:32:18,815 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:32:22,960 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:32:22,960 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:32:22,966 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:32:22,967 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:32:22,967 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:32:22,967 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:32:22,971 - root - INFO - Getting database: Users
2025-02-12 14:32:22,972 - root - INFO - Getting collection: Doctors
2025-02-12 14:32:22,977 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:32:23,166 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:32:23,167 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:32:23,167 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:32:23,167 - app.models.case - INFO - Generated unique filename: image_20250212143223_9e338255.melanoma_10105.jpg
2025-02-12 14:32:23,169 - root - INFO - Getting database: Users
2025-02-12 14:32:23,170 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:32:23,375 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:32:23,375 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:32:23,375 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:32:23,375 - root - INFO - Getting database: Users
2025-02-12 14:32:23,375 - root - INFO - Getting collection: Patients
2025-02-12 14:32:23,377 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:32:23,606 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:32:23,606 - app.models.case - INFO - Starting image upload process
2025-02-12 14:32:23,606 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:32:23,607 - root - INFO - Getting database: Images
2025-02-12 14:32:23,607 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:32:24,538 - app.models.case - INFO - Image uploaded successfully with ID: 67acb0f79c348151f4ad84e8
2025-02-12 14:32:24,538 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb0f79c348151f4ad84e8
2025-02-12 14:32:24,540 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:32:25,002 - app.models.case - INFO - Received response from ML API with status code: 200
2025-02-12 14:32:25,002 - app.models.case - INFO - Response JSON from ML API: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.22344112396240234, 'date': '2025-02-12 14:32:25'}
2025-02-12 14:32:25,004 - app.models.case - INFO - Diagnosis obtained: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.22344112396240234, 'date': '2025-02-12 14:32:25'}
2025-02-12 14:32:25,004 - root - INFO - Getting database: Cases
2025-02-12 14:32:25,005 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:32:25,005 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:32:25,127 - app.models.case - INFO - Case created successfully with id: b88764c8-8dc5-44d8-9bd0-734af85cd155
2025-02-12 14:34:35,040 - app.main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-12 14:34:48,563 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:34:48,564 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:34:48,569 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:34:48,570 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:34:48,570 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:34:48,571 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:34:48,571 - root - INFO - Getting database: Users
2025-02-12 14:34:48,571 - root - INFO - Getting collection: Doctors
2025-02-12 14:34:48,573 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:34:48,691 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:34:48,693 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:34:48,694 - app.models.case - INFO - File read successfully: melanoma_10105.jpg, size: 10076 bytes
2025-02-12 14:34:48,694 - app.models.case - INFO - Generated unique filename: image_20250212143448_caa03c6c.melanoma_10105.jpg
2025-02-12 14:34:48,694 - root - INFO - Getting database: Users
2025-02-12 14:34:48,695 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:34:48,814 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:34:48,815 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:34:48,816 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:34:48,817 - root - INFO - Getting database: Users
2025-02-12 14:34:48,818 - root - INFO - Getting collection: Patients
2025-02-12 14:34:48,821 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:34:48,944 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:34:48,946 - app.models.case - INFO - Starting image upload process
2025-02-12 14:34:48,949 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:34:48,949 - root - INFO - Getting database: Images
2025-02-12 14:34:48,950 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:34:49,461 - app.models.case - INFO - Image uploaded successfully with ID: 67acb188048087a9cef284bb
2025-02-12 14:34:49,462 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb188048087a9cef284bb
2025-02-12 14:34:49,470 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:34:49,837 - app.models.case - INFO - Received response from ML API with status code: 200
2025-02-12 14:34:49,837 - app.models.case - INFO - Response JSON from ML API: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.21734046936035156, 'date': '2025-02-12 14:34:49'}
2025-02-12 14:34:49,838 - app.models.case - INFO - Diagnosis obtained: {'diagnosis': [{'Malignant': 0.007869601249694824, 'Benign': 0.9921303987503052}], 'time_taken': 0.21734046936035156, 'date': '2025-02-12 14:34:49'}
2025-02-12 14:34:49,838 - root - INFO - Getting database: Cases
2025-02-12 14:34:49,838 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:34:49,839 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:34:49,964 - app.models.case - INFO - Case created successfully with id: 3c16e660-01dc-4c86-b847-a024dde1795c
2025-02-12 14:35:06,269 - app.middleware.authentication - INFO - Checking Authorization header for /cases/new_case
2025-02-12 14:35:06,275 - app.middleware.authentication - INFO - Valid token received for /cases/new_case
2025-02-12 14:35:06,282 - app.models.doctor - INFO - Checking for Authorization header in request.
2025-02-12 14:35:06,282 - app.models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjNhZDRmZmU2LTNiZmEtNGU1Yy05NWNkLTM4MzFmYTE2NjVmMCIsImVtYWlsIjoidGVzdDAwMUB0ZXN0LmNvbSIsImV4cCI6MTczOTM3MTk0MX0.tEbUJtWsx2Eo-DS5KNTvVZLoXDp5DoM4JpatF_nLTzU
2025-02-12 14:35:06,283 - app.models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-12 14:35:06,284 - app.models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0', 'email': 'test001@test.com', 'exp': 1739371941}
2025-02-12 14:35:06,284 - root - INFO - Getting database: Users
2025-02-12 14:35:06,284 - root - INFO - Getting collection: Doctors
2025-02-12 14:35:06,285 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-12 14:35:06,407 - app.models.doctor - INFO - Doctor with id 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0 successfully authenticated.
2025-02-12 14:35:06,409 - app.models.case - INFO - Received request to create new case for patient_number: 1
2025-02-12 14:35:06,409 - app.models.case - INFO - File read successfully: ISIC_0000000.jpg, size: 49982 bytes
2025-02-12 14:35:06,410 - app.models.case - INFO - Generated unique filename: image_20250212143506_84eb1e34.ISIC_0000000.jpg
2025-02-12 14:35:06,411 - root - INFO - Getting database: Users
2025-02-12 14:35:06,416 - root - INFO - Getting collection: Users-API-Keys
2025-02-12 14:35:06,552 - app.models.api_key - INFO - Successfully retrieved API key for doctor_id: 3ad4ffe6-3bfa-4e5c-95cd-3831fa1665f0
2025-02-12 14:35:06,558 - app.models.api_key - INFO - Api info:ecbcf19b3880657246bccf74536e6b462db28c5ac75a74cf2c10f1328f5f865d
2025-02-12 14:35:06,560 - app.models.patient - INFO - Fetching patient_id for patient_number: 1
2025-02-12 14:35:06,560 - root - INFO - Getting database: Users
2025-02-12 14:35:06,560 - root - INFO - Getting collection: Patients
2025-02-12 14:35:06,560 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-12 14:35:06,680 - app.models.patient - INFO - Patient ID found for patient_number 1: 2a9a69aa-b6b7-4c42-a22e-3e0991df691d
2025-02-12 14:35:06,681 - app.models.case - INFO - Starting image upload process
2025-02-12 14:35:06,681 - app.models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-12 14:35:06,681 - root - INFO - Getting database: Images
2025-02-12 14:35:06,682 - app.models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-12 14:35:07,301 - app.models.case - INFO - Image uploaded successfully with ID: 67acb19a048087a9cef284be
2025-02-12 14:35:07,301 - app.models.case - INFO - Image uploaded successfully to GridFS with ID: 67acb19a048087a9cef284be
2025-02-12 14:35:07,345 - app.models.case - INFO - Starting diagnosis process for image: image
2025-02-12 14:35:07,778 - app.models.case - INFO - Received response from ML API with status code: 200
2025-02-12 14:35:07,778 - app.models.case - INFO - Response JSON from ML API: {'diagnosis': [{'Malignant': 0.8864263892173767, 'Benign': 0.11357361078262329}], 'time_taken': 0.19698500633239746, 'date': '2025-02-12 14:35:07'}
2025-02-12 14:35:07,779 - app.models.case - INFO - Diagnosis obtained: {'diagnosis': [{'Malignant': 0.8864263892173767, 'Benign': 0.11357361078262329}], 'time_taken': 0.19698500633239746, 'date': '2025-02-12 14:35:07'}
2025-02-12 14:35:07,780 - root - INFO - Getting database: Cases
2025-02-12 14:35:07,780 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-12 14:35:07,780 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-12 14:35:07,903 - app.models.case - INFO - Case created successfully with id: 1edfabe4-7994-4dc9-bd12-fc75c1d298d3
