2025-02-07 23:44:44,641 - root - INFO - Getting database: Users
2025-02-07 23:44:44,659 - root - INFO - Getting collection: Doctors
2025-02-07 23:44:44,659 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-07 23:44:44,757 - routers.users - ERROR - Error during login: 'password'
2025-02-07 23:45:12,289 - root - INFO - Getting database: Users
2025-02-07 23:45:12,290 - root - INFO - Getting collection: Doctors
2025-02-07 23:45:12,290 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-07 23:45:12,385 - routers.users - ERROR - Error during login: 'password'
2025-02-07 23:45:30,893 - root - INFO - Getting database: Users
2025-02-07 23:45:30,894 - root - INFO - Getting collection: Doctors
2025-02-07 23:45:30,894 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-07 23:45:30,996 - routers.users - ERROR - Error during login: 'password'
2025-02-07 23:54:02,383 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-07 23:54:19,206 - root - INFO - Getting database: Users
2025-02-07 23:54:19,206 - root - INFO - Getting collection: Doctors
2025-02-07 23:54:19,206 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-07 23:54:19,304 - routers.users - ERROR - Doctor record for email test02@test.com is missing the 'password' field.
2025-02-07 23:59:04,156 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:06:00,410 - root - INFO - Getting database: Users
2025-02-08 00:06:00,419 - root - INFO - Getting collection: Doctors
2025-02-08 00:06:00,419 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:06:00,553 - routers.users - ERROR - Doctor record for email test02@test.com is missing the 'password' field.
2025-02-08 00:08:04,881 - root - INFO - Getting database: Users
2025-02-08 00:08:04,881 - root - INFO - Getting collection: Doctors
2025-02-08 00:08:04,881 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:08:04,987 - routers.users - ERROR - Doctor record for email test02@test.com is missing the 'password' field.
2025-02-08 00:18:09,294 - main - INFO - Health check requested
2025-02-08 00:18:49,499 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:18:49,500 - root - INFO - Getting database: Users
2025-02-08 00:18:49,500 - root - INFO - Getting collection: Doctors
2025-02-08 00:18:49,501 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:18:49,598 - utils.shared_utils - ERROR - Error in verify_password: 'NoneType' object has no attribute 'encode'
2025-02-08 00:20:35,520 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:22:58,756 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:23:03,263 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:23:10,700 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:23:10,700 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:23:10,700 - root - INFO - Getting database: Users
2025-02-08 00:23:10,700 - root - INFO - Getting collection: Doctors
2025-02-08 00:23:10,700 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:23:10,801 - utils.shared_utils - ERROR - Error in verify_password: 'NoneType' object has no attribute 'encode'
2025-02-08 00:23:10,801 - utils.authentication - WARNING - Authentication failed: Invalid password for email: test01@test.com
2025-02-08 00:23:10,801 - utils.authentication - ERROR - HTTPException during authentication for email test01@test.com: Invalid password.
2025-02-08 00:25:08,788 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:25:12,891 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:25:12,891 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:25:12,891 - root - INFO - Getting database: Users
2025-02-08 00:25:12,891 - root - INFO - Getting collection: Doctors
2025-02-08 00:25:12,903 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:25:13,005 - utils.shared_utils - ERROR - Error in verify_password: 'NoneType' object has no attribute 'encode'
2025-02-08 00:25:13,006 - utils.authentication - WARNING - Authentication failed: Invalid password for email: test01@test.com
2025-02-08 00:25:13,007 - utils.authentication - ERROR - HTTPException during authentication for email test01@test.com: Invalid password.
2025-02-08 00:26:12,872 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:26:17,104 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:26:25,164 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:26:25,164 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:26:25,164 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:26:25,164 - root - INFO - Getting database: Users
2025-02-08 00:26:25,164 - root - INFO - Getting collection: Doctors
2025-02-08 00:26:25,164 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:26:25,261 - utils.shared_utils - ERROR - Error in verify_password: 'NoneType' object has no attribute 'encode'
2025-02-08 00:26:25,269 - utils.authentication - WARNING - Authentication failed: Invalid password for email: test01@test.com
2025-02-08 00:26:25,270 - utils.authentication - ERROR - HTTPException during authentication for email test01@test.com: Invalid password.
2025-02-08 00:28:53,984 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:28:58,348 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:29:07,153 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:29:07,153 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:29:07,153 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:29:07,153 - root - INFO - Getting database: Users
2025-02-08 00:29:07,153 - root - INFO - Getting collection: Doctors
2025-02-08 00:29:07,153 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:29:07,263 - utils.shared_utils - ERROR - verify_password: Provided hashed_password is None or empty.
2025-02-08 00:29:07,264 - utils.authentication - WARNING - Authentication failed: Invalid password for email: test01@test.com
2025-02-08 00:29:07,265 - utils.authentication - ERROR - HTTPException during authentication for email test01@test.com: Invalid password.
2025-02-08 00:29:50,740 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:29:58,722 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:29:58,722 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:29:58,722 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:29:58,722 - root - INFO - Getting database: Users
2025-02-08 00:29:58,722 - root - INFO - Getting collection: Doctors
2025-02-08 00:29:58,722 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:29:59,097 - utils.authentication - ERROR - Unexpected error during authentication for email test01@test.com: 'id'
2025-02-08 00:31:02,736 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:31:06,751 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:31:10,525 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:31:10,525 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:31:10,525 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:31:10,525 - root - INFO - Getting database: Users
2025-02-08 00:31:10,525 - root - INFO - Getting collection: Doctors
2025-02-08 00:31:10,525 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:31:10,941 - utils.authentication - ERROR - Unexpected error during authentication for email test01@test.com: module 'jwt' has no attribute 'encode'
2025-02-08 00:33:15,552 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:33:32,475 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:33:32,475 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:33:32,475 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:33:32,475 - root - INFO - Getting database: Users
2025-02-08 00:33:32,484 - root - INFO - Getting collection: Doctors
2025-02-08 00:33:32,484 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:33:32,861 - utils.authentication - INFO - JWT access token generated successfully for email: test01@test.com
2025-02-08 00:43:26,825 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:48:28,884 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:48:33,369 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:52:58,773 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:53:03,008 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:58:04,041 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:58:08,673 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:58:13,081 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 00:59:57,979 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:59:57,979 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 00:59:57,979 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 00:59:57,979 - root - INFO - Getting database: Users
2025-02-08 00:59:57,979 - root - INFO - Getting collection: Doctors
2025-02-08 00:59:57,984 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 00:59:58,334 - utils.authentication - INFO - JWT access token generated successfully for email: test01@test.com
2025-02-08 01:14:38,724 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:14:38,724 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 01:14:38,724 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:14:38,724 - root - INFO - Getting database: Users
2025-02-08 01:14:38,724 - root - INFO - Getting collection: Doctors
2025-02-08 01:14:38,724 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 01:14:39,097 - utils.authentication - INFO - JWT access token generated successfully for email: test01@test.com
2025-02-08 01:16:32,518 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 01:16:32,518 - models.users - INFO - Auth Header: None
2025-02-08 01:16:32,518 - models.users - ERROR - Missing or invalid Authorization header. Provided header: None
2025-02-08 01:18:35,035 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 01:18:47,145 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 01:18:47,145 - models.users - INFO - Auth Header: None
2025-02-08 01:18:47,145 - models.users - ERROR - Missing or invalid Authorization header. Provided header: None
2025-02-08 01:19:19,002 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 01:23:33,578 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 01:23:38,424 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 01:24:32,197 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:24:32,197 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 01:24:32,197 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:24:32,197 - root - INFO - Getting database: Users
2025-02-08 01:24:32,197 - root - INFO - Getting collection: Doctors
2025-02-08 01:24:32,203 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 01:24:32,545 - utils.authentication - INFO - JWT access token generated successfully for email: test01@test.com
2025-02-08 01:25:11,787 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 01:25:32,725 - routers.users - INFO - Doctor Sign in input: {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:25:32,725 - utils.authentication - INFO - Attempting to authenticate doctor with email: test01@test.com
2025-02-08 01:25:32,731 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test01@test.com', 'password': '@Test123'}
2025-02-08 01:25:32,732 - root - INFO - Getting database: Users
2025-02-08 01:25:32,732 - root - INFO - Getting collection: Doctors
2025-02-08 01:25:32,732 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 01:25:33,080 - utils.authentication - INFO - JWT access token generated successfully for email: test01@test.com
2025-02-08 04:10:17,600 - routers.users - INFO - Doctor registration input: {'email': 'Test03@example.com', 'name': 'Tester Three', 'password': '@Test123'}
2025-02-08 04:10:17,647 - root - INFO - Getting database: Users
2025-02-08 04:10:17,663 - root - INFO - Getting collection: Doctors
2025-02-08 04:10:17,680 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:10:18,540 - models.users - INFO - Creating doctor profile for email: Test03@example.com
2025-02-08 04:10:18,542 - root - INFO - Getting database: Users
2025-02-08 04:10:18,542 - root - INFO - Getting collection: Doctors
2025-02-08 04:10:18,542 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:10:18,980 - models.users - INFO - Doctor created successfully with id: 2b68468f-0333-4e56-aa10-93bc0c97ec3d
2025-02-08 04:10:18,982 - routers.users - INFO - Doctor successfully created.
2025-02-08 04:12:35,841 - routers.users - INFO - Doctor registration input: {'email': 'Test03@example.com', 'name': 'Tester Three', 'password': '@Test123'}
2025-02-08 04:12:35,849 - root - INFO - Getting database: Users
2025-02-08 04:12:35,855 - root - INFO - Getting collection: Doctors
2025-02-08 04:12:35,856 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:12:35,960 - models.users - INFO - Creating doctor profile for email: Test03@example.com
2025-02-08 04:12:35,961 - root - INFO - Getting database: Users
2025-02-08 04:12:35,961 - root - INFO - Getting collection: Doctors
2025-02-08 04:12:35,962 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:12:36,373 - models.users - INFO - Doctor created successfully with id: a7ca31a1-2427-41c5-9b32-7e092283e149
2025-02-08 04:12:36,377 - routers.users - INFO - Doctor successfully created.
2025-02-08 04:14:38,457 - routers.users - INFO - Doctor Sign in input: {'email': 'test03@test.com', 'password': '@Test123'}
2025-02-08 04:14:38,457 - utils.authentication - INFO - Attempting to authenticate doctor with email: test03@test.com
2025-02-08 04:14:38,466 - utils.authentication - INFO - Login data received (password excluded): {'email': 'test03@test.com', 'password': '@Test123'}
2025-02-08 04:14:38,468 - root - INFO - Getting database: Users
2025-02-08 04:14:38,469 - root - INFO - Getting collection: Doctors
2025-02-08 04:14:38,472 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:14:38,573 - utils.authentication - WARNING - Authentication failed: No doctor found with email: test03@test.com
2025-02-08 04:14:38,575 - utils.authentication - ERROR - HTTPException during authentication for email test03@test.com: Invalid email or password.
2025-02-08 04:15:19,991 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:15:19,991 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 04:15:19,992 - utils.authentication - INFO - Login data received (password excluded): {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:15:19,992 - root - INFO - Getting database: Users
2025-02-08 04:15:19,993 - root - INFO - Getting collection: Doctors
2025-02-08 04:15:19,993 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:15:20,095 - utils.authentication - WARNING - Authentication failed: No doctor found with email: Test03@test.com
2025-02-08 04:15:20,095 - utils.authentication - ERROR - HTTPException during authentication for email Test03@test.com: Invalid email or password.
2025-02-08 04:15:22,319 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:15:22,319 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 04:15:22,319 - utils.authentication - INFO - Login data received (password excluded): {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:15:22,319 - root - INFO - Getting database: Users
2025-02-08 04:15:22,319 - root - INFO - Getting collection: Doctors
2025-02-08 04:15:22,321 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:15:22,423 - utils.authentication - WARNING - Authentication failed: No doctor found with email: Test03@test.com
2025-02-08 04:15:22,424 - utils.authentication - ERROR - HTTPException during authentication for email Test03@test.com: Invalid email or password.
2025-02-08 04:17:04,559 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:17:15,178 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:22:16,792 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:22:23,979 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:22:29,504 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:23:54,764 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:23:59,296 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:24:06,644 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:27:25,298 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:32:51,297 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:33:01,900 - middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 04:33:01,919 - routers.users - INFO - Doctor registration input: {'email': 'test03@test.com', 'name': 'Tester Three', 'password': '@Test123'}
2025-02-08 04:33:01,920 - root - INFO - Getting database: Users
2025-02-08 04:33:01,920 - root - INFO - Getting collection: Doctors
2025-02-08 04:33:01,921 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:33:01,922 - routers.users - ERROR - Error creating doctor: Invalid document {'find': 'Doctors', 'filter': {'email': <built-in method lower of str object at 0x000002B2F6D29230>}, 'projection': {'_id': 0}, 'limit': 1, 'singleBatch': True, 'lsid': {'id': Binary(b'^\xba&\x9f\x96\xf0E\xb9\xbf\xd3\x9cR\xe9z\xf9\xc7', 4)}, '$clusterTime': {'clusterTime': Timestamp(1738989175, 13), 'signature': {'hash': b'\xde\xbdXdw\x9c\xf2\x17^\xfe\x15\x87"\xfc\x02d\xb5\x9c\x97h', 'keyId': 7429076833938702354}}, '$db': 'Users'} | cannot encode object: <built-in method lower of str object at 0x000002B2F6D29230>, of type: <class 'builtin_function_or_method'>
2025-02-08 04:36:39,404 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:36:50,312 - middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 04:36:50,331 - routers.users - INFO - Doctor registration input: {'email': 'test03@test.com', 'name': 'Tester Three', 'password': '@Test123'}
2025-02-08 04:36:50,331 - root - INFO - Getting database: Users
2025-02-08 04:36:50,332 - root - INFO - Getting collection: Doctors
2025-02-08 04:36:50,332 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:36:50,435 - models.users - INFO - Creating doctor profile for email: test03@test.com
2025-02-08 04:36:50,435 - root - INFO - Getting database: Users
2025-02-08 04:36:50,435 - root - INFO - Getting collection: Doctors
2025-02-08 04:36:50,435 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:36:50,869 - models.users - INFO - Doctor created successfully with id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 04:36:50,870 - routers.users - INFO - Doctor successfully created.
2025-02-08 04:37:09,934 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 04:37:09,941 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:37:09,942 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 04:37:09,942 - utils.authentication - INFO - Login data received (password excluded): {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:37:09,943 - root - INFO - Getting database: Users
2025-02-08 04:37:09,943 - root - INFO - Getting collection: Doctors
2025-02-08 04:37:09,944 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:37:09,944 - utils.authentication - ERROR - Unexpected error during authentication for email Test03@test.com: 'builtin_function_or_method' object has no attribute 'lower'
2025-02-08 04:37:33,132 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:37:53,799 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 04:37:53,823 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:37:53,823 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 04:37:53,823 - utils.authentication - INFO - Login data received (password excluded): {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 04:37:53,823 - root - INFO - Getting database: Users
2025-02-08 04:37:53,823 - root - INFO - Getting collection: Doctors
2025-02-08 04:37:53,823 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:37:54,235 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 04:40:42,614 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 04:40:42,620 - middleware.authentication - ERROR - Invalid token on /users/register-patient: 401: Invalid token
2025-02-08 04:41:00,683 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 04:41:00,684 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 04:41:00,690 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 04:41:00,690 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 04:41:00,691 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 04:41:00,691 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 04:41:00,691 - root - INFO - Getting database: Users
2025-02-08 04:41:00,692 - root - INFO - Getting collection: Doctors
2025-02-08 04:41:00,692 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:41:00,796 - models.users - ERROR - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 not found.
2025-02-08 04:41:00,797 - models.users - ERROR - HTTPException during token verification: Doctor not found
2025-02-08 04:43:24,845 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:43:38,274 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 04:43:38,277 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 04:43:38,281 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 04:43:38,281 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 04:43:38,281 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 04:43:38,281 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 04:43:38,281 - root - INFO - Getting database: Users
2025-02-08 04:43:38,285 - root - INFO - Getting collection: Doctors
2025-02-08 04:43:38,285 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 04:43:38,380 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 04:43:38,380 - models.users - INFO - Creating patient profile for name: patient01
2025-02-08 04:43:38,380 - root - INFO - Getting database: Users
2025-02-08 04:43:38,380 - root - INFO - Getting collection: Patients
2025-02-08 04:43:38,380 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 04:43:38,511 - models.users - INFO - Patient created successfully with patient_id: 423c570c-b64c-456a-9a9d-a1c16d2757f1
2025-02-08 04:48:27,091 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:53:29,727 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 04:57:48,570 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:00:29,290 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:00:33,259 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:02:07,904 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:02:07,905 - middleware.authentication - WARNING - Missing or invalid Authorization header on /users/register-patient
2025-02-08 05:02:32,793 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:02:32,798 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 05:02:32,838 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 05:02:32,840 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 05:02:32,841 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 05:02:32,846 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 05:02:32,849 - root - INFO - Getting database: Users
2025-02-08 05:02:32,852 - root - INFO - Getting collection: Doctors
2025-02-08 05:02:32,853 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:02:32,958 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 05:02:32,970 - models.users - INFO - Creating patient profile for name: Patient01
2025-02-08 05:02:32,971 - root - INFO - Getting database: Users
2025-02-08 05:02:32,972 - root - INFO - Getting collection: Patients
2025-02-08 05:02:32,973 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 05:02:33,087 - models.users - INFO - Patient created successfully with patient_id: d7081d2c-9b6c-4df6-a07e-886bd7bf069a
2025-02-08 05:03:22,635 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:03:22,636 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 05:03:22,637 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 05:03:22,637 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 05:03:22,638 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 05:03:22,638 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 05:03:22,638 - root - INFO - Getting database: Users
2025-02-08 05:03:22,639 - root - INFO - Getting collection: Doctors
2025-02-08 05:03:22,639 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:03:22,741 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 05:03:22,743 - models.users - INFO - Creating patient profile for name: Patient01
2025-02-08 05:03:22,743 - root - INFO - Getting database: Users
2025-02-08 05:03:22,744 - root - INFO - Getting collection: Patients
2025-02-08 05:03:22,745 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 05:03:22,853 - models.users - INFO - Patient created successfully with patient_id: 85e02c4f-2deb-474f-82f7-1799e5220915
2025-02-08 05:10:34,263 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:15:17,232 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:15:45,074 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:15:45,076 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 05:15:45,084 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 05:15:45,085 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 05:15:45,085 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 05:15:45,087 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 05:15:45,087 - root - INFO - Getting database: Users
2025-02-08 05:15:45,088 - root - INFO - Getting collection: Doctors
2025-02-08 05:15:45,088 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:15:45,190 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 05:15:45,197 - models.users - INFO - Creating patient profile for name: Patient01
2025-02-08 05:15:45,199 - models.users - ERROR - An unexpected error occurred while creating patient: 'PatientCreate' object has no attribute 'patient_number'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\users.py", line 263, in create_patient
    patient_number = patient_info.patient_number  # Supplied by the client
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 856, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'PatientCreate' object has no attribute 'patient_number'
2025-02-08 05:17:37,809 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:18:21,092 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:18:21,093 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 05:18:21,095 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 05:18:21,095 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 05:18:21,095 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 05:18:21,096 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 05:18:21,096 - root - INFO - Getting database: Users
2025-02-08 05:18:21,096 - root - INFO - Getting collection: Doctors
2025-02-08 05:18:21,097 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:18:21,199 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 05:18:21,207 - models.users - INFO - Creating patient profile for name: Patient01
2025-02-08 05:18:21,207 - root - INFO - Getting database: Users
2025-02-08 05:18:21,208 - root - INFO - Getting collection: Patients
2025-02-08 05:18:21,208 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 05:18:21,426 - models.users - INFO - Patient created successfully with patient_number: 12345
2025-02-08 05:18:34,106 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 05:18:34,107 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 05:18:34,110 - models.users - INFO - Checking for Authorization header in request.
2025-02-08 05:18:34,110 - models.users - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTkzMDc0fQ.cFHk8He4pevGK_XQyEOQgrrKAVbEu9AkXDijechR6Ck
2025-02-08 05:18:34,111 - models.users - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 05:18:34,111 - models.users - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738993074}
2025-02-08 05:18:34,111 - root - INFO - Getting database: Users
2025-02-08 05:18:34,112 - root - INFO - Getting collection: Doctors
2025-02-08 05:18:34,112 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:18:34,214 - models.users - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 05:18:34,215 - models.users - INFO - Creating patient profile for name: Patient01
2025-02-08 05:18:34,216 - root - INFO - Getting database: Users
2025-02-08 05:18:34,216 - root - INFO - Getting collection: Patients
2025-02-08 05:18:34,217 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 05:18:34,321 - models.users - WARNING - Patient number 12345 already exists.
2025-02-08 05:22:39,423 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:22:51,118 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:27:52,638 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:31:12,936 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:31:31,043 - middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 05:31:31,059 - routers.users - INFO - Doctor registration input: {'email': 'test04@test.com', 'name': 'Tester four', 'password': '@Test123'}
2025-02-08 05:31:31,060 - root - INFO - Getting database: Users
2025-02-08 05:31:31,060 - root - INFO - Getting collection: Doctors
2025-02-08 05:31:31,060 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:31:31,161 - models.users - INFO - Creating doctor profile for email: test04@test.com
2025-02-08 05:31:31,161 - root - INFO - Getting database: Users
2025-02-08 05:31:31,162 - root - INFO - Getting collection: Doctors
2025-02-08 05:31:31,162 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:31:31,579 - root - INFO - Getting database: Users
2025-02-08 05:31:31,579 - root - INFO - Getting collection: Doctors
2025-02-08 05:31:31,580 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:31:31,580 - root - INFO - Getting database: Users
2025-02-08 05:31:31,581 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 05:31:31,915 - models.users - INFO - API key allocated successfully for doctor ID: 7c8cd7a4-906e-48a1-9180-99f87bd58c66
2025-02-08 05:31:31,917 - models.users - INFO - Doctor created successfully with id: 7c8cd7a4-906e-48a1-9180-99f87bd58c66
2025-02-08 05:31:31,918 - routers.users - INFO - Doctor successfully created.
2025-02-08 05:32:56,767 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 05:40:41,856 - middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 05:40:42,061 - routers.users - INFO - Doctor registration input: {'email': 'test04@test.com', 'name': 'Tester four', 'password': '@Test123'}
2025-02-08 05:40:42,064 - root - INFO - Getting database: Users
2025-02-08 05:40:42,073 - root - INFO - Getting collection: Doctors
2025-02-08 05:40:42,077 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:40:42,226 - models.users - INFO - Creating doctor profile for email: test04@test.com
2025-02-08 05:40:42,227 - root - INFO - Getting database: Users
2025-02-08 05:40:42,228 - root - INFO - Getting collection: Doctors
2025-02-08 05:40:42,229 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:40:42,705 - root - INFO - Getting database: Users
2025-02-08 05:40:42,706 - root - INFO - Getting collection: Doctors
2025-02-08 05:40:42,706 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 05:40:42,707 - root - INFO - Getting database: Users
2025-02-08 05:40:42,708 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 05:40:43,023 - models.users - INFO - API key allocated successfully for doctor ID: 5328d257-d916-4a98-bf59-9707a95b0106
2025-02-08 05:40:43,024 - models.users - INFO - Doctor created successfully with id: 5328d257-d916-4a98-bf59-9707a95b0106
2025-02-08 05:40:43,030 - routers.users - INFO - Doctor successfully created.
2025-02-08 05:58:43,730 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:12:50,518 - middleware.authentication - INFO - Skipping authentication for public route: /users/register-doctor
2025-02-08 06:12:50,551 - routers.users - INFO - Doctor registration input: {'email': 'test05@test.com', 'name': 'Tester five', 'password': '@Test123'}
2025-02-08 06:12:50,552 - root - INFO - Getting database: Users
2025-02-08 06:12:50,552 - root - INFO - Getting collection: Doctors
2025-02-08 06:12:50,552 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:12:50,654 - models.doctor - INFO - Creating doctor profile for email: test05@test.com
2025-02-08 06:12:50,655 - root - INFO - Getting database: Users
2025-02-08 06:12:50,656 - root - INFO - Getting collection: Doctors
2025-02-08 06:12:50,656 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:12:51,105 - root - INFO - Getting database: Users
2025-02-08 06:12:51,105 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 06:12:51,314 - models.api_key - INFO - API key allocated successfully for doctor ID: 47d9cbe4-9fba-4b36-a1b6-a3820e8a5986
2025-02-08 06:12:51,315 - models.doctor - INFO - Doctor created successfully with id: 47d9cbe4-9fba-4b36-a1b6-a3820e8a5986
2025-02-08 06:12:51,316 - routers.users - INFO - Doctor successfully created.
2025-02-08 06:13:30,384 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 06:13:30,393 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 06:13:30,394 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 06:13:30,395 - utils.authentication - ERROR - Unexpected error during authentication for email Test03@test.com: cannot access local variable 'doctor' where it is not associated with a value
2025-02-08 06:15:46,057 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 06:15:46,100 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 06:15:46,100 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 06:15:46,109 - utils.authentication - ERROR - Unexpected error during authentication for email Test03@test.com: cannot access local variable 'doctor' where it is not associated with a value
2025-02-08 06:16:22,715 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 06:16:22,732 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 06:16:22,733 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 06:16:22,733 - root - INFO - Getting database: Users
2025-02-08 06:16:22,734 - root - INFO - Getting collection: Doctors
2025-02-08 06:16:22,734 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:16:23,128 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 06:17:36,263 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 06:17:36,264 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 06:17:36,265 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 06:17:36,266 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 06:17:36,266 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 06:17:36,267 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 06:17:36,267 - root - INFO - Getting database: Users
2025-02-08 06:17:36,267 - root - INFO - Getting collection: Doctors
2025-02-08 06:17:36,267 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:17:36,372 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 06:17:36,377 - models.patient - INFO - Creating patient profile for name: Patient02
2025-02-08 06:17:36,377 - root - INFO - Getting database: Users
2025-02-08 06:17:36,378 - root - INFO - Getting collection: Patients
2025-02-08 06:17:36,378 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 06:17:36,593 - models.patient - INFO - Patient created successfully with patient_number: 12346
2025-02-08 06:25:34,446 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:25:47,055 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:30:48,178 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:44:10,927 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 06:44:10,927 - middleware.authentication - ERROR - Invalid token on /users/register-patient: name 'verify_token' is not defined
2025-02-08 06:45:09,749 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 06:45:09,749 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 06:45:09,755 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 06:45:09,755 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 06:45:09,755 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 06:45:09,755 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 06:45:09,759 - root - INFO - Getting database: Users
2025-02-08 06:45:09,759 - root - INFO - Getting collection: Doctors
2025-02-08 06:45:09,759 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:45:09,862 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 06:45:09,878 - models.patient - INFO - Creating patient profile for name: Patient01
2025-02-08 06:45:09,880 - root - INFO - Getting database: Users
2025-02-08 06:45:09,881 - root - INFO - Getting collection: Patients
2025-02-08 06:45:09,882 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 06:45:09,979 - utils.authentication - ERROR - Error in hash_password: 'int' object has no attribute 'encode'
2025-02-08 06:45:09,979 - models.patient - ERROR - An unexpected error occurred while creating patient: 'int' object has no attribute 'encode'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\patient.py", line 101, in create_patient
    "patient_number": hash_password(patient_number),
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\utils\authentication.py", line 39, in hash_password
    hashed = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt())
                           ^^^^^^^^^^^^^^^
AttributeError: 'int' object has no attribute 'encode'
2025-02-08 06:46:43,345 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:46:54,433 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 06:46:54,433 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 06:46:54,433 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 06:46:54,433 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 06:46:54,433 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 06:46:54,433 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 06:46:54,433 - root - INFO - Getting database: Users
2025-02-08 06:46:54,433 - root - INFO - Getting collection: Doctors
2025-02-08 06:46:54,433 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:46:54,533 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 06:47:11,367 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 06:47:11,368 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 06:47:11,370 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 06:47:11,370 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 06:47:11,370 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 06:47:11,371 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 06:47:11,371 - root - INFO - Getting database: Users
2025-02-08 06:47:11,372 - root - INFO - Getting collection: Doctors
2025-02-08 06:47:11,372 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:47:11,475 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 06:47:11,478 - models.patient - INFO - Creating patient profile for name: Patient01
2025-02-08 06:47:11,478 - root - INFO - Getting database: Users
2025-02-08 06:47:11,480 - root - INFO - Getting collection: Patients
2025-02-08 06:47:11,480 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 06:47:12,011 - models.patient - INFO - Patient created successfully with patient_number: $2b$12$WMpIC8gbD.q4CGtbPQ9KEufIEUt/sfAKMAIsxmlPBaKHWeL2kdn1W
2025-02-08 06:48:27,022 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:48:27,023 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/cases/patient/12345
2025-02-08 06:50:38,181 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:50:38,202 - middleware.authentication - ERROR - Invalid token on /cases/cases/patient/12345: 401: Token has expired
2025-02-08 06:51:17,923 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:51:17,923 - middleware.authentication - ERROR - Invalid token on /cases/cases/patient/12345: 401: Token has expired
2025-02-08 06:53:04,919 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:53:10,834 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:53:10,834 - middleware.authentication - ERROR - HTTPException on /cases/cases/patient/12345: Token has expired
2025-02-08 06:53:26,004 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 06:53:32,049 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:53:32,065 - middleware.authentication - ERROR - HTTPException on /cases/cases/patient/12345: Token has expired
2025-02-08 06:58:18,633 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 06:58:18,920 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 06:58:18,920 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 06:58:18,920 - root - INFO - Getting database: Users
2025-02-08 06:58:18,932 - root - INFO - Getting collection: Doctors
2025-02-08 06:58:18,938 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:58:20,055 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 06:58:44,755 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/12345
2025-02-08 06:58:44,755 - middleware.authentication - INFO - Valid token received for /cases/cases/patient/12345
2025-02-08 06:58:44,766 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 06:58:44,766 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAxNTAwfQ.jt3t1h89BPlzm8tx4qFKKjNPV2pqt915cugMpZjIK2s
2025-02-08 06:58:44,766 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 06:58:44,770 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739001500}
2025-02-08 06:58:44,770 - root - INFO - Getting database: Users
2025-02-08 06:58:44,770 - root - INFO - Getting collection: Doctors
2025-02-08 06:58:44,770 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 06:58:44,878 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 06:58:44,878 - root - INFO - Getting database: Cases
2025-02-08 06:58:44,878 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 06:59:31,641 - middleware.authentication - INFO - Checking Authorization header for /users/patient/12345
2025-02-08 06:59:31,641 - middleware.authentication - INFO - Valid token received for /users/patient/12345
2025-02-08 06:59:48,257 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 06:59:49,087 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 07:00:13,360 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:00:13,366 - middleware.authentication - WARNING - Missing or invalid Authorization header on /users/patients/12345
2025-02-08 07:00:13,369 - middleware.authentication - ERROR - HTTPException on /users/patients/12345: Missing or invalid Authorization header
2025-02-08 07:00:42,559 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:00:42,568 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:00:42,591 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:00:42,599 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAxNTAwfQ.jt3t1h89BPlzm8tx4qFKKjNPV2pqt915cugMpZjIK2s
2025-02-08 07:00:42,601 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:00:42,603 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739001500}
2025-02-08 07:00:42,608 - root - INFO - Getting database: Users
2025-02-08 07:00:42,611 - root - INFO - Getting collection: Doctors
2025-02-08 07:00:42,614 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:00:42,734 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:00:42,753 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:00:42,755 - root - INFO - Getting database: Users
2025-02-08 07:00:42,756 - root - INFO - Getting collection: Patients
2025-02-08 07:00:42,758 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:00:42,766 - utils.authentication - ERROR - Error in hash_password: 'int' object has no attribute 'encode'
2025-02-08 07:00:42,767 - models.patient - ERROR - An unexpected error occurred while retrieving patient: 'int' object has no attribute 'encode'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\patient.py", line 204, in get_patient_by_patient_number
    {"patient_number": hash_password(patient_number), "doctor_id": current_doctor["id"]},
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\utils\authentication.py", line 39, in hash_password
    hashed = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt())
                           ^^^^^^^^^^^^^^^
AttributeError: 'int' object has no attribute 'encode'
2025-02-08 07:01:49,652 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:02:48,309 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:02:48,327 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 07:02:48,346 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:02:48,346 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 07:02:48,346 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:02:48,353 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 07:02:48,354 - root - INFO - Getting database: Users
2025-02-08 07:02:48,354 - root - INFO - Getting collection: Doctors
2025-02-08 07:02:48,354 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:02:48,466 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:02:48,514 - models.patient - INFO - Creating patient profile for name: Patient01
2025-02-08 07:02:48,519 - root - INFO - Getting database: Users
2025-02-08 07:02:48,521 - root - INFO - Getting collection: Patients
2025-02-08 07:02:48,521 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:02:49,591 - models.patient - INFO - Patient created successfully with patient_number: $2b$12$knYhIREcCA0tCQYVw6PgZOi21KpmfwTjbkCGIUaUCikAPrC69zWyG
2025-02-08 07:03:33,064 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:03:33,064 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 07:03:33,071 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:03:33,071 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM4OTk4OTgzfQ.rPmCVoKAHmJFF5KlCoAJSebeXsvpVhwm0bE3US-uAYc
2025-02-08 07:03:33,071 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:03:33,077 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1738998983}
2025-02-08 07:03:33,077 - root - INFO - Getting database: Users
2025-02-08 07:03:33,079 - root - INFO - Getting collection: Doctors
2025-02-08 07:03:33,079 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:03:33,181 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:03:33,181 - models.patient - INFO - Creating patient profile for name: Patient01
2025-02-08 07:03:33,181 - root - INFO - Getting database: Users
2025-02-08 07:03:33,181 - root - INFO - Getting collection: Patients
2025-02-08 07:03:33,186 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:03:34,161 - models.patient - INFO - Patient created successfully with patient_number: $2b$12$c290vO9YlkB.EFb9sDvyY.klmNtXMi2FKoCS8GlD3thIL4sAvO5DG
2025-02-08 07:04:57,265 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:04:57,265 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:04:57,265 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:04:57,265 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAxNTAwfQ.jt3t1h89BPlzm8tx4qFKKjNPV2pqt915cugMpZjIK2s
2025-02-08 07:04:57,265 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:04:57,265 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739001500}
2025-02-08 07:04:57,265 - root - INFO - Getting database: Users
2025-02-08 07:04:57,274 - root - INFO - Getting collection: Doctors
2025-02-08 07:04:57,275 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:04:57,377 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:04:57,382 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:04:57,382 - root - INFO - Getting database: Users
2025-02-08 07:04:57,382 - root - INFO - Getting collection: Patients
2025-02-08 07:04:57,382 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:04:58,319 - models.patient - ERROR - An unexpected error occurred while retrieving patient: 'id'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\patient.py", line 204, in get_patient_by_patient_number
    {"patient_number": hash_password(str(patient_number)), "doctor_id": current_doctor["id"]},
                                                                        ~~~~~~~~~~~~~~^^^^^^
KeyError: 'id'
2025-02-08 07:06:53,879 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:07:05,433 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:08:48,580 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:08:48,585 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:08:48,592 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:08:48,592 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAxNTAwfQ.jt3t1h89BPlzm8tx4qFKKjNPV2pqt915cugMpZjIK2s
2025-02-08 07:08:48,595 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:08:48,598 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739001500}
2025-02-08 07:08:48,599 - root - INFO - Getting database: Users
2025-02-08 07:08:48,602 - root - INFO - Getting collection: Doctors
2025-02-08 07:08:48,602 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:08:48,711 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:08:48,722 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:08:48,732 - root - INFO - Getting database: Users
2025-02-08 07:08:48,735 - root - INFO - Getting collection: Patients
2025-02-08 07:08:48,739 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:08:49,559 - models.patient - WARNING - Patient with patient_number 12345 not found for doctor 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 07:08:49,559 - models.patient - ERROR - Error retrieving patient: Patient with patient_number 12345 not found.
2025-02-08 07:10:34,962 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:10:45,669 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:10:45,669 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:10:45,678 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:10:45,680 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAxNTAwfQ.jt3t1h89BPlzm8tx4qFKKjNPV2pqt915cugMpZjIK2s
2025-02-08 07:10:45,680 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:10:45,685 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739001500}
2025-02-08 07:10:45,685 - root - INFO - Getting database: Users
2025-02-08 07:10:45,685 - root - INFO - Getting collection: Doctors
2025-02-08 07:10:45,689 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:10:45,793 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:10:45,802 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:10:45,804 - root - INFO - Getting database: Users
2025-02-08 07:10:45,804 - root - INFO - Getting collection: Patients
2025-02-08 07:10:45,806 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:10:46,879 - models.patient - WARNING - Patient with patient_number 12345 not found for doctor 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 07:10:46,880 - models.patient - ERROR - Error retrieving patient: Patient with patient_number 12345 not found.
2025-02-08 07:15:36,685 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:17:03,884 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:17:03,904 - middleware.authentication - ERROR - HTTPException on /users/register-patient: Token has expired
2025-02-08 07:17:04,168 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:17:17,561 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 07:17:17,611 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 07:17:17,612 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 07:17:17,615 - root - INFO - Getting database: Users
2025-02-08 07:17:17,615 - root - INFO - Getting collection: Doctors
2025-02-08 07:17:17,617 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:17:18,546 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 07:17:51,996 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:17:51,996 - middleware.authentication - ERROR - HTTPException on /users/register-patient: Token has expired
2025-02-08 07:18:13,911 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:18:13,911 - middleware.authentication - ERROR - HTTPException on /users/register-patient: Token has expired
2025-02-08 07:18:19,224 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 07:18:19,230 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 07:18:19,230 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 07:18:19,230 - root - INFO - Getting database: Users
2025-02-08 07:18:19,232 - root - INFO - Getting collection: Doctors
2025-02-08 07:18:19,232 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:18:20,419 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 07:18:41,791 - middleware.authentication - INFO - Checking Authorization header for /users/register-patient
2025-02-08 07:18:41,798 - middleware.authentication - INFO - Valid token received for /users/register-patient
2025-02-08 07:18:41,798 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:18:41,798 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAyNjM4fQ.8NZtCK27u7S-oypQPfaerV5DBd33oHan45nJFkizcHs
2025-02-08 07:18:41,798 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:18:41,798 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739002638}
2025-02-08 07:18:41,798 - root - INFO - Getting database: Users
2025-02-08 07:18:41,806 - root - INFO - Getting collection: Doctors
2025-02-08 07:18:41,806 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:18:41,905 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:18:41,925 - models.patient - INFO - Creating patient profile for name: Patient01
2025-02-08 07:18:41,929 - root - INFO - Getting database: Users
2025-02-08 07:18:41,929 - root - INFO - Getting collection: Patients
2025-02-08 07:18:41,929 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:18:42,145 - models.patient - INFO - Patient created successfully with patient_number: 12345
2025-02-08 07:18:52,479 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:18:52,479 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:18:52,483 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:18:52,483 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAyNjM4fQ.8NZtCK27u7S-oypQPfaerV5DBd33oHan45nJFkizcHs
2025-02-08 07:18:52,483 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:18:52,483 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739002638}
2025-02-08 07:18:52,483 - root - INFO - Getting database: Users
2025-02-08 07:18:52,488 - root - INFO - Getting collection: Doctors
2025-02-08 07:18:52,488 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:18:52,590 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:18:52,595 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:18:52,595 - root - INFO - Getting database: Users
2025-02-08 07:18:52,599 - root - INFO - Getting collection: Patients
2025-02-08 07:18:52,601 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:18:52,708 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 07:18:52,709 - models.patient - ERROR - An unexpected error occurred while retrieving patient: Object of type datetime is not JSON serializable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\patient.py", line 216, in get_patient_by_patient_number
    return JSONResponse(
           ^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 181, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 44, in __init__
    self.body = self.render(content)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 184, in render
    return json.dumps(
           ^^^^^^^^^^^
  File "C:\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
2025-02-08 07:19:52,151 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:20:30,277 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:20:53,349 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 07:20:53,353 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 07:20:53,355 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 07:20:53,355 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDAyNjM4fQ.8NZtCK27u7S-oypQPfaerV5DBd33oHan45nJFkizcHs
2025-02-08 07:20:53,361 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 07:20:53,361 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739002638}
2025-02-08 07:20:53,363 - root - INFO - Getting database: Users
2025-02-08 07:20:53,365 - root - INFO - Getting collection: Doctors
2025-02-08 07:20:53,365 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 07:20:53,488 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 07:20:53,495 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 07:20:53,495 - root - INFO - Getting database: Users
2025-02-08 07:20:53,498 - root - INFO - Getting collection: Patients
2025-02-08 07:20:53,498 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 07:20:53,603 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 07:25:31,645 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:25:41,806 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:25:50,604 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:26:00,702 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:36:02,101 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:36:14,273 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:36:44,873 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 07:57:34,559 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:00:29,277 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:05:31,389 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:14:03,966 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:19:07,117 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:24:18,679 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:34:20,852 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 08:59:05,557 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 08:59:05,854 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 09:00:06,064 - middleware.authentication - INFO - Checking Authorization header for /cases/upload-image
2025-02-08 09:00:06,065 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/upload-image
2025-02-08 09:00:06,066 - middleware.authentication - ERROR - HTTPException on /cases/upload-image: Missing or invalid Authorization header
2025-02-08 09:00:11,686 - middleware.authentication - INFO - Checking Authorization header for /cases/upload-image
2025-02-08 09:00:11,686 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/upload-image
2025-02-08 09:00:11,688 - middleware.authentication - ERROR - HTTPException on /cases/upload-image: Missing or invalid Authorization header
2025-02-08 09:01:14,455 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:03:22,163 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:03:28,604 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:03:35,632 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:04:06,175 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:04:54,509 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:05:55,274 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:12:11,433 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:12:11,441 - routers.cases - INFO - Received file upload request: car.webp
2025-02-08 09:12:11,442 - routers.cases - INFO - File read successfully: car.webp, size: 376780 bytes
2025-02-08 09:12:11,443 - routers.cases - INFO - Generated unique filename: image_20250208091211_f35c693f.car.webp
2025-02-08 09:12:11,444 - root - INFO - Getting database: Images
2025-02-08 09:12:11,444 - root - INFO - Getting collection: test
2025-02-08 09:12:11,445 - models.case - ERROR - An error occurred while uploading the image: database must be an instance of Database
2025-02-08 09:12:11,445 - routers.cases - ERROR - An error occurred while uploading the image: 500: An error occurred while uploading the image: database must be an instance of Database
2025-02-08 09:15:13,447 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:15:23,739 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:15:23,749 - routers.cases - INFO - Received file upload request: car.webp
2025-02-08 09:15:23,751 - routers.cases - INFO - File read successfully: car.webp, size: 376780 bytes
2025-02-08 09:15:23,751 - routers.cases - INFO - Generated unique filename: image_20250208091523_38bbbb1f.car.webp
2025-02-08 09:15:23,752 - models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-08 09:15:23,752 - root - INFO - Getting database: Images
2025-02-08 09:15:23,752 - models.case - ERROR - Unexpected error during GridFS initialization: Database objects do not implement truth value testing or bool(). Please compare with None instead: database is not None
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\case.py", line 42, in get_fs
    if not db:
           ^^
  File "C:\Python312\Lib\site-packages\pymongo\synchronous\database.py", line 342, in __bool__
    raise NotImplementedError(
NotImplementedError: Database objects do not implement truth value testing or bool(). Please compare with None instead: database is not None
2025-02-08 09:15:23,758 - models.case - ERROR - An error occurred while uploading the image: 500: An unexpected error occurred while initializing GridFS: Database objects do not implement truth value testing or bool(). Please compare with None instead: database is not None
2025-02-08 09:15:23,758 - routers.cases - ERROR - An error occurred while uploading the image: 500: An error occurred while uploading the image: 500: An unexpected error occurred while initializing GridFS: Database objects do not implement truth value testing or bool(). Please compare with None instead: database is not None
2025-02-08 09:16:39,376 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:16:43,582 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:17:05,404 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:17:18,210 - middleware.authentication - INFO - Skipping authentication for public route: /cases/upload-image
2025-02-08 09:17:18,220 - routers.cases - INFO - Received file upload request: car.webp
2025-02-08 09:17:18,223 - routers.cases - INFO - File read successfully: car.webp, size: 376780 bytes
2025-02-08 09:17:18,223 - routers.cases - INFO - Generated unique filename: image_20250208091718_c8bcfc67.car.webp
2025-02-08 09:17:18,224 - models.case - INFO - Attempting to connect to the 'Images' database.
2025-02-08 09:17:18,224 - root - INFO - Getting database: Images
2025-02-08 09:17:18,225 - models.case - INFO - Successfully connected to 'Images' database. Initializing GridFS.
2025-02-08 09:17:19,766 - models.case - INFO - Image uploaded successfully with ID: 67a7211ec8fef72712e790b1
2025-02-08 09:17:19,768 - routers.cases - INFO - Image uploaded successfully to GridFS with ID: 67a7211ec8fef72712e790b1
2025-02-08 09:21:39,390 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:26:39,515 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:31:41,826 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:35:39,111 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 09:41:14,641 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 09:41:15,096 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 09:41:41,060 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 09:41:41,060 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 09:41:41,061 - middleware.authentication - ERROR - HTTPException on /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: Missing or invalid Authorization header
2025-02-08 09:42:49,618 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 09:42:49,769 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 09:42:49,771 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 09:42:49,775 - root - INFO - Getting database: Users
2025-02-08 09:42:49,784 - root - INFO - Getting collection: Doctors
2025-02-08 09:42:49,787 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 09:42:50,220 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 09:44:46,112 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 09:44:46,114 - middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-08 09:45:01,623 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 09:45:01,623 - middleware.authentication - ERROR - HTTPException on /users/patients/12345: Token has expired
2025-02-08 10:09:08,009 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 10:09:08,172 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 10:09:08,176 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 10:09:08,181 - root - INFO - Getting database: Users
2025-02-08 10:09:08,191 - root - INFO - Getting collection: Doctors
2025-02-08 10:09:08,201 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:09:09,615 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 10:09:46,215 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 10:09:46,221 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 10:09:46,238 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:09:46,238 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:09:46,239 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:09:46,240 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:09:46,241 - root - INFO - Getting database: Users
2025-02-08 10:09:46,241 - root - INFO - Getting collection: Doctors
2025-02-08 10:09:46,242 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:09:46,348 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:09:46,363 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 10:09:46,364 - root - INFO - Getting database: Users
2025-02-08 10:09:46,364 - root - INFO - Getting collection: Patients
2025-02-08 10:09:46,365 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 10:09:46,466 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 10:09:52,583 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:09:52,584 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:09:52,586 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:09:52,587 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:09:52,587 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:09:52,587 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:09:52,588 - root - INFO - Getting database: Users
2025-02-08 10:09:52,588 - root - INFO - Getting collection: Doctors
2025-02-08 10:09:52,589 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:09:52,691 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:10:46,889 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:10:46,889 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:10:46,889 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:10:46,904 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:10:46,904 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:10:46,905 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:10:46,905 - root - INFO - Getting database: Users
2025-02-08 10:10:46,905 - root - INFO - Getting collection: Doctors
2025-02-08 10:10:46,905 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:10:47,005 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:10:50,168 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:10:50,168 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:10:50,170 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:10:50,170 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:10:50,170 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:10:50,171 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:10:50,172 - root - INFO - Getting database: Users
2025-02-08 10:10:50,175 - root - INFO - Getting collection: Doctors
2025-02-08 10:10:50,176 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:10:50,282 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:11:29,728 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:11:29,729 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:11:29,730 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:11:29,730 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:11:29,730 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:11:29,730 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:11:29,731 - root - INFO - Getting database: Users
2025-02-08 10:11:29,731 - root - INFO - Getting collection: Doctors
2025-02-08 10:11:29,731 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:11:29,832 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:11:33,214 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:11:33,215 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:11:33,224 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:11:33,224 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:11:33,225 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:11:33,225 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:11:33,226 - root - INFO - Getting database: Users
2025-02-08 10:11:33,226 - root - INFO - Getting collection: Doctors
2025-02-08 10:11:33,226 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:11:33,333 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:39:25,711 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 10:54:50,493 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:54:50,531 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 10:54:50,552 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 10:54:50,552 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 10:54:50,552 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 10:54:50,552 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 10:54:50,552 - root - INFO - Getting database: Users
2025-02-08 10:54:50,567 - root - INFO - Getting collection: Doctors
2025-02-08 10:54:50,567 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 10:54:51,344 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 10:54:51,361 - root - INFO - Getting database: Cases
2025-02-08 10:54:51,361 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 10:54:51,361 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 10:54:51,470 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'_id': ObjectId('67a4d82...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
    return CaseDB(**case)
           ^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'_id': ObjectId('67a4d82...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:04:52,404 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:04:52,428 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:04:52,448 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:04:52,450 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDEyOTQ5fQ.YjDq-8Gd_EQOR7pgmuD7R0duHCi0CFHu7wMZwKIuAns
2025-02-08 11:04:52,450 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:04:52,452 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739012949}
2025-02-08 11:04:52,453 - root - INFO - Getting database: Users
2025-02-08 11:04:52,455 - root - INFO - Getting collection: Doctors
2025-02-08 11:04:52,457 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:04:52,566 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:04:52,579 - root - INFO - Getting database: Cases
2025-02-08 11:04:52,581 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:04:52,582 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:04:52,694 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'_id': ObjectId('67a4d82...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
    return CaseDB(**case)
           ^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'_id': ObjectId('67a4d82...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:04:52,930 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 11:06:00,082 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 11:06:00,107 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 11:06:00,108 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 11:06:00,114 - root - INFO - Getting database: Users
2025-02-08 11:06:00,115 - root - INFO - Getting collection: Doctors
2025-02-08 11:06:00,116 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:06:00,552 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 11:06:47,404 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 11:06:47,405 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 11:06:47,405 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:06:47,406 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:06:47,406 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:06:47,406 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:06:47,407 - root - INFO - Getting database: Users
2025-02-08 11:06:47,407 - root - INFO - Getting collection: Doctors
2025-02-08 11:06:47,407 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:06:47,508 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:06:47,511 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 11:06:47,512 - root - INFO - Getting database: Users
2025-02-08 11:06:47,513 - root - INFO - Getting collection: Patients
2025-02-08 11:06:47,514 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 11:06:47,616 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 11:06:50,130 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 11:06:50,131 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 11:06:50,132 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:06:50,132 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:06:50,132 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:06:50,133 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:06:50,133 - root - INFO - Getting database: Users
2025-02-08 11:06:50,133 - root - INFO - Getting collection: Doctors
2025-02-08 11:06:50,133 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:06:50,234 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:06:50,235 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 11:06:50,235 - root - INFO - Getting database: Users
2025-02-08 11:06:50,236 - root - INFO - Getting collection: Patients
2025-02-08 11:06:50,236 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 11:06:50,336 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 11:06:54,339 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:06:54,340 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:06:54,341 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:06:54,341 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:06:54,341 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:06:54,342 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:06:54,342 - root - INFO - Getting database: Users
2025-02-08 11:06:54,343 - root - INFO - Getting collection: Doctors
2025-02-08 11:06:54,344 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:06:54,444 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:06:54,445 - root - INFO - Getting database: Cases
2025-02-08 11:06:54,445 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:06:54,446 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:06:54,556 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
    return CaseDB(**case)
           ^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:11:00,081 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:11:00,097 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:11:00,107 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:11:00,107 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:11:00,107 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:11:00,107 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:11:00,111 - root - INFO - Getting database: Users
2025-02-08 11:11:00,112 - root - INFO - Getting collection: Doctors
2025-02-08 11:11:00,114 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:11:00,302 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:11:00,302 - root - INFO - Getting database: Cases
2025-02-08 11:11:00,314 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:11:00,314 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:11:00,420 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
    return CaseDB(**case)
           ^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:11:18,535 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:11:18,535 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:11:18,535 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:11:18,535 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:11:18,535 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:11:18,535 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:11:18,535 - root - INFO - Getting database: Users
2025-02-08 11:11:18,535 - root - INFO - Getting collection: Doctors
2025-02-08 11:11:18,535 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:11:18,629 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:11:18,629 - root - INFO - Getting database: Cases
2025-02-08 11:11:18,629 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:11:18,629 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:11:18,744 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
    return CaseDB(**case)
           ^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:39:02,086 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:39:02,150 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:39:02,214 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:39:02,217 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:39:02,219 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:39:02,220 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:39:02,229 - root - INFO - Getting database: Users
2025-02-08 11:39:02,236 - root - INFO - Getting collection: Doctors
2025-02-08 11:39:02,238 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:39:02,370 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:39:02,381 - root - INFO - Getting database: Cases
2025-02-08 11:39:02,381 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:39:02,382 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:39:02,498 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\cases.py", line 59, in get_case
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for CaseDB
notes
  Field required [type=missing, input_value={'case_id': 'ea308410-95b...: '2025-02-06 15:41:32'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.9/v/missing
2025-02-08 11:39:02,849 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 11:39:19,448 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 11:39:19,450 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 11:39:19,452 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 11:39:19,454 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDE2MzYwfQ.3WhBEZxCLtjSsDx2AyKgZVJ8YOxI1XhLos2QlGF_mrw
2025-02-08 11:39:19,455 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 11:39:19,456 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739016360}
2025-02-08 11:39:19,457 - root - INFO - Getting database: Users
2025-02-08 11:39:19,457 - root - INFO - Getting collection: Doctors
2025-02-08 11:39:19,458 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 11:39:19,559 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 11:39:19,561 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 11:39:19,562 - root - INFO - Getting database: Users
2025-02-08 11:39:19,563 - root - INFO - Getting collection: Patients
2025-02-08 11:39:19,563 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 11:39:19,666 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 11:39:25,267 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:39:25,268 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:39:25,269 - root - INFO - Getting database: Cases
2025-02-08 11:39:25,270 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:39:25,270 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:51:15,265 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 11:58:49,672 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 11:59:00,643 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:59:00,656 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 11:59:00,656 - root - INFO - Getting database: Cases
2025-02-08 11:59:00,656 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 11:59:00,656 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 11:59:00,754 - models.case - INFO - 'notes' field missing for case ea308410-95b2-4d23-acbd-1cec936bba26. Initializing as an empty list.
2025-02-08 11:59:00,754 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:03:27,555 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:03:27,592 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:03:27,675 - root - INFO - Getting database: Cases
2025-02-08 12:03:27,693 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:03:27,693 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:03:27,831 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:08:51,010 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 12:18:46,202 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 12:23:00,703 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:23:00,743 - middleware.authentication - ERROR - HTTPException on /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: Token has expired
2025-02-08 12:23:10,229 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 12:23:10,383 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 12:23:10,385 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 12:23:10,394 - root - INFO - Getting database: Users
2025-02-08 12:23:10,405 - root - INFO - Getting collection: Doctors
2025-02-08 12:23:10,407 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 12:23:10,872 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 12:23:30,994 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:23:30,995 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:23:30,999 - root - INFO - Getting database: Cases
2025-02-08 12:23:30,999 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:23:31,002 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:23:31,113 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:27:11,384 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:27:11,409 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:27:11,434 - root - INFO - Getting database: Cases
2025-02-08 12:27:11,436 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:27:11,437 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:27:11,567 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:45:17,824 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:45:17,827 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:45:17,836 - root - INFO - Getting database: Cases
2025-02-08 12:45:17,837 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:45:17,838 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:45:17,953 - models.case - ERROR - An unexpected error occurred while retrieving the case: 1 validation error for Case
notes
  Input should be a valid list [type=list_type, input_value='First note', input_type=str]
    For further information visit https://errors.pydantic.dev/2.9/v/list_type
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\case.py", line 111, in get_case_by_id
    case_data = jsonable_encoder(Case(**case))
                                 ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for Case
notes
  Input should be a valid list [type=list_type, input_value='First note', input_type=str]
    For further information visit https://errors.pydantic.dev/2.9/v/list_type
2025-02-08 12:48:24,960 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:48:24,960 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:48:24,980 - root - INFO - Getting database: Cases
2025-02-08 12:48:24,980 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:48:24,981 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:48:25,085 - models.case - ERROR - An unexpected error occurred while retrieving the case: 1 validation error for Case
notes
  Input should be a valid list [type=list_type, input_value='First note', input_type=str]
    For further information visit https://errors.pydantic.dev/2.9/v/list_type
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\case.py", line 111, in get_case_by_id
    case_data = jsonable_encoder(Case(**case))
                                 ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\pydantic\main.py", line 212, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
pydantic_core._pydantic_core.ValidationError: 1 validation error for Case
notes
  Input should be a valid list [type=list_type, input_value='First note', input_type=str]
    For further information visit https://errors.pydantic.dev/2.9/v/list_type
2025-02-08 12:48:25,267 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 12:48:32,444 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:48:32,445 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:48:32,448 - root - INFO - Getting database: Cases
2025-02-08 12:48:32,448 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 12:48:32,449 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 12:48:32,557 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 12:52:40,387 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 13:01:45,459 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 13:06:42,142 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 13:10:36,363 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:10:36,397 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:10:36,483 - root - INFO - Getting database: Cases
2025-02-08 13:10:36,494 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:10:36,497 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:10:36,659 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:10:48,535 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 13:10:48,536 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 13:10:48,543 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:10:48,544 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDIwOTkwfQ.q4phbeRIuAUIL4JM_sPqtjh8BITUTYIJCMsL9T_eo38
2025-02-08 13:10:48,544 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:10:48,545 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739020990}
2025-02-08 13:10:48,546 - root - INFO - Getting database: Users
2025-02-08 13:10:48,546 - root - INFO - Getting collection: Doctors
2025-02-08 13:10:48,548 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:10:48,656 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:10:48,663 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 13:10:48,663 - root - INFO - Getting database: Users
2025-02-08 13:10:48,664 - root - INFO - Getting collection: Patients
2025-02-08 13:10:48,664 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 13:10:48,778 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 13:12:48,631 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:12:48,634 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:12:48,638 - middleware.authentication - ERROR - HTTPException on /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03: Missing or invalid Authorization header
2025-02-08 13:13:48,254 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:13:48,257 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:13:48,262 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:13:48,262 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDIwOTkwfQ.q4phbeRIuAUIL4JM_sPqtjh8BITUTYIJCMsL9T_eo38
2025-02-08 13:13:48,263 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:13:48,263 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739020990}
2025-02-08 13:13:48,264 - root - INFO - Getting database: Users
2025-02-08 13:13:48,264 - root - INFO - Getting collection: Doctors
2025-02-08 13:13:48,264 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:13:48,368 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:13:48,377 - root - INFO - Getting database: Cases
2025-02-08 13:13:48,378 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:13:48,378 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:13:48,488 - models.case - INFO - Retrieved 1 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:14:07,185 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc0
2025-02-08 13:14:07,186 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc0
2025-02-08 13:14:07,188 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:14:07,188 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDIwOTkwfQ.q4phbeRIuAUIL4JM_sPqtjh8BITUTYIJCMsL9T_eo38
2025-02-08 13:14:07,189 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:14:07,190 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739020990}
2025-02-08 13:14:07,190 - root - INFO - Getting database: Users
2025-02-08 13:14:07,192 - root - INFO - Getting collection: Doctors
2025-02-08 13:14:07,193 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:14:07,295 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:14:07,296 - root - INFO - Getting database: Cases
2025-02-08 13:14:07,296 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:14:07,297 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:14:07,398 - models.case - WARNING - No cases found for doctor ID 57219736-b2ee-4454-92aa-e87a2b56dc0.
2025-02-08 13:14:17,166 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:14:17,167 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:14:17,169 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:14:17,170 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDIwOTkwfQ.q4phbeRIuAUIL4JM_sPqtjh8BITUTYIJCMsL9T_eo38
2025-02-08 13:14:17,170 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:14:17,171 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739020990}
2025-02-08 13:14:17,172 - root - INFO - Getting database: Users
2025-02-08 13:14:17,172 - root - INFO - Getting collection: Doctors
2025-02-08 13:14:17,175 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:14:17,278 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:14:17,281 - root - INFO - Getting database: Cases
2025-02-08 13:14:17,282 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:14:17,282 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:14:17,387 - models.case - INFO - Retrieved 1 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:18:17,303 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:18:17,309 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:18:17,316 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:18:17,316 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDIwOTkwfQ.q4phbeRIuAUIL4JM_sPqtjh8BITUTYIJCMsL9T_eo38
2025-02-08 13:18:17,317 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:18:17,317 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739020990}
2025-02-08 13:18:17,318 - root - INFO - Getting database: Users
2025-02-08 13:18:17,318 - root - INFO - Getting collection: Doctors
2025-02-08 13:18:17,318 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:18:17,423 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:18:17,428 - root - INFO - Getting database: Cases
2025-02-08 13:18:17,429 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:18:17,429 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:18:17,536 - models.case - INFO - Retrieved 2 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:30:47,615 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:30:47,649 - middleware.authentication - ERROR - HTTPException on /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26: Token has expired
2025-02-08 13:31:45,001 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 13:31:45,226 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 13:31:45,227 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 13:31:45,228 - root - INFO - Getting database: Users
2025-02-08 13:31:45,229 - root - INFO - Getting collection: Doctors
2025-02-08 13:31:45,230 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:31:45,713 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 13:32:00,696 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:32:00,698 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:32:00,720 - root - INFO - Getting database: Cases
2025-02-08 13:32:00,729 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:32:00,734 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:32:00,873 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:32:06,658 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:06,658 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:06,661 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:32:06,661 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDI1MTA1fQ.UCIzhuml73CDrmhi99vGjTqliQv0Dl4Jjbd--pHnWOs
2025-02-08 13:32:06,662 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:32:06,662 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739025105}
2025-02-08 13:32:06,663 - root - INFO - Getting database: Users
2025-02-08 13:32:06,663 - root - INFO - Getting collection: Doctors
2025-02-08 13:32:06,663 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:32:06,763 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:32:06,764 - root - INFO - Getting database: Cases
2025-02-08 13:32:06,767 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:32:06,767 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:32:06,874 - models.case - INFO - Retrieved 2 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:10,232 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:10,232 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:10,233 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:32:10,234 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDI1MTA1fQ.UCIzhuml73CDrmhi99vGjTqliQv0Dl4Jjbd--pHnWOs
2025-02-08 13:32:10,234 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:32:10,234 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739025105}
2025-02-08 13:32:10,235 - root - INFO - Getting database: Users
2025-02-08 13:32:10,235 - root - INFO - Getting collection: Doctors
2025-02-08 13:32:10,235 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:32:10,334 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:32:10,335 - root - INFO - Getting database: Cases
2025-02-08 13:32:10,336 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:32:10,336 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:32:10,437 - models.case - INFO - Retrieved 2 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:57,536 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:57,537 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:32:57,538 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:32:57,538 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDI1MTA1fQ.UCIzhuml73CDrmhi99vGjTqliQv0Dl4Jjbd--pHnWOs
2025-02-08 13:32:57,538 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:32:57,538 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739025105}
2025-02-08 13:32:57,538 - root - INFO - Getting database: Users
2025-02-08 13:32:57,540 - root - INFO - Getting collection: Doctors
2025-02-08 13:32:57,540 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:32:57,641 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:32:57,642 - root - INFO - Getting database: Cases
2025-02-08 13:32:57,643 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:32:57,643 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:32:57,745 - models.case - INFO - Retrieved 2 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:33:21,588 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:33:21,588 - middleware.authentication - INFO - Valid token received for /cases/cases/ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:33:21,589 - root - INFO - Getting database: Cases
2025-02-08 13:33:21,590 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:33:21,590 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:33:21,694 - models.case - INFO - Case retrieved successfully for case_id: ea308410-95b2-4d23-acbd-1cec936bba26
2025-02-08 13:42:43,229 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 13:43:32,047 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 13:45:13,965 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:45:13,984 - middleware.authentication - INFO - Valid token received for /cases/cases/doctor/57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:45:13,989 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:45:13,990 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDI1MTA1fQ.UCIzhuml73CDrmhi99vGjTqliQv0Dl4Jjbd--pHnWOs
2025-02-08 13:45:13,999 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:45:13,999 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739025105}
2025-02-08 13:45:13,999 - root - INFO - Getting database: Users
2025-02-08 13:45:14,000 - root - INFO - Getting collection: Doctors
2025-02-08 13:45:14,000 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:45:14,102 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:45:14,107 - root - INFO - Getting database: Cases
2025-02-08 13:45:14,107 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:45:14,108 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:45:14,215 - models.case - INFO - Retrieved 3 case(s) for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 13:45:50,755 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-08 13:45:50,756 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-08 13:45:50,757 - middleware.authentication - ERROR - HTTPException on /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f: Missing or invalid Authorization header
2025-02-08 13:46:47,321 - middleware.authentication - INFO - Checking Authorization header for /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-08 13:46:47,323 - middleware.authentication - INFO - Valid token received for /cases/cases/patient/17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-08 13:46:47,324 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 13:46:47,324 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDI1MTA1fQ.UCIzhuml73CDrmhi99vGjTqliQv0Dl4Jjbd--pHnWOs
2025-02-08 13:46:47,325 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 13:46:47,325 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739025105}
2025-02-08 13:46:47,326 - root - INFO - Getting database: Users
2025-02-08 13:46:47,326 - root - INFO - Getting collection: Doctors
2025-02-08 13:46:47,326 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 13:46:47,429 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 13:46:47,432 - root - INFO - Getting database: Cases
2025-02-08 13:46:47,434 - root - INFO - Getting collection: daec48a0-210b-4a76-9121-f6f65a13159d
2025-02-08 13:46:47,435 - root - INFO - Got cases collection: Collection(Database(MongoClient(host=['cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Cases'), 'daec48a0-210b-4a76-9121-f6f65a13159d')
2025-02-08 13:46:47,540 - models.case - INFO - Retrieved 2 case(s) for patient_id: 17f4166c-b682-4102-b4df-cf85fc768c5f
2025-02-08 17:45:46,987 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:26:53,202 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:29:06,324 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:29:10,438 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:34:11,267 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:35:10,875 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 18:35:11,092 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:35:17,171 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 18:35:38,321 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:35:38,322 - middleware.authentication - WARNING - Missing or invalid Authorization header on /users/profile
2025-02-08 18:35:38,322 - middleware.authentication - ERROR - HTTPException on /users/profile: Missing or invalid Authorization header
2025-02-08 18:35:39,688 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:35:39,688 - middleware.authentication - WARNING - Missing or invalid Authorization header on /users/profile
2025-02-08 18:35:39,689 - middleware.authentication - ERROR - HTTPException on /users/profile: Missing or invalid Authorization header
2025-02-08 18:37:56,454 - middleware.authentication - INFO - Skipping authentication for public route: /users/login
2025-02-08 18:37:56,468 - routers.users - INFO - Doctor Sign in input: {'email': 'Test03@test.com', 'password': '@Test123'}
2025-02-08 18:37:56,469 - utils.authentication - INFO - Attempting to authenticate doctor with email: Test03@test.com
2025-02-08 18:37:56,469 - root - INFO - Getting database: Users
2025-02-08 18:37:56,470 - root - INFO - Getting collection: Doctors
2025-02-08 18:37:56,470 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 18:37:56,858 - utils.authentication - INFO - JWT access token generated successfully for email: Test03@test.com
2025-02-08 18:38:17,663 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:38:17,664 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:38:17,664 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 235, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:39:09,958 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:39:14,198 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:39:22,787 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:39:22,791 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:39:22,791 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 235, in get_doctor_profile
    doctor_id = current_doctor["doctor_id"]
                ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: 'Depends' object is not subscriptable
2025-02-08 18:40:48,589 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:40:59,335 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:40:59,335 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:40:59,335 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 235, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:45:24,452 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:46:26,187 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:46:26,194 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:46:26,196 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 235, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")  # Correcting the attribute to 'id'
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:46:26,466 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:46:33,093 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:46:33,093 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:46:33,096 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 235, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")  # Correcting the attribute to 'id'
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:47:13,786 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:49:52,747 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:49:59,044 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:49:59,045 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:49:59,047 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 18:49:59,048 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 236, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")  # Correcting the attribute to 'id'
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:50:37,663 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:50:49,799 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:50:49,799 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:50:49,802 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 18:50:49,802 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 236, in get_doctor_profile
    doctor_id = current_doctor.get("doctor_id")  # Correcting the attribute to 'id'
                ^^^^^^^^^^^^^^^^^^
AttributeError: 'Depends' object has no attribute 'get'
2025-02-08 18:52:12,890 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:52:17,571 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:52:28,424 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:52:28,424 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:52:28,424 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 18:52:28,424 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'Depends' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 236, in get_doctor_profile
    doctor_id = current_doctor["doctor_id"]  # Correcting the attribute to 'id'
                ~~~~~~~~~~~~~~^^^^^^^^^^^^^
TypeError: 'Depends' object is not subscriptable
2025-02-08 18:55:15,149 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:55:26,539 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:55:26,539 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:55:26,545 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 18:55:26,546 - models.doctor - ERROR - Invalid current doctor data retrieved.
2025-02-08 18:55:26,546 - models.doctor - ERROR - HTTP error occurred while retrieving doctor details: Invalid doctor data received.
2025-02-08 18:58:54,029 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 18:59:07,323 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 18:59:07,327 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 18:59:07,329 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 18:59:07,329 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 18:59:07,330 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'property' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 240, in get_doctor_profile
    current_doctor = get_current_doctor(Request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 181, in get_current_doctor
    auth_header = request.headers.get("Authorization")
                  ^^^^^^^^^^^^^^^^^^^
AttributeError: 'property' object has no attribute 'get'. Did you mean: 'fget'?
2025-02-08 19:00:06,230 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:00:06,231 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:00:06,232 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 19:00:06,232 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:00:06,233 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'property' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 240, in get_doctor_profile
    current_doctor = get_current_doctor(Request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 181, in get_current_doctor
    auth_header = request.headers.get("Authorization")
                  ^^^^^^^^^^^^^^^^^^^
AttributeError: 'property' object has no attribute 'get'. Did you mean: 'fget'?
2025-02-08 19:01:46,069 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:01:56,263 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:01:56,263 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:01:56,264 - models.doctor - INFO - current doctor: Depends(get_current_doctor)
2025-02-08 19:01:56,264 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:01:56,265 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'property' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 240, in get_doctor_profile
    current_doctor = get_current_doctor(Request)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 181, in get_current_doctor
    auth_header = request.headers.get("Authorization")
                  ^^^^^^^^^^^^^^^^^^^
AttributeError: 'property' object has no attribute 'get'. Did you mean: 'fget'?
2025-02-08 19:03:27,773 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:03:32,242 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:03:42,172 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:03:42,174 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:03:42,177 - middleware.authentication - ERROR - Unexpected error during authentication for /users/profile: get_doctor_profile() missing 1 required positional argument: 'request'
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\users.py", line 91, in get_my_details
    return get_doctor_profile()
           ^^^^^^^^^^^^^^^^^^^^
TypeError: get_doctor_profile() missing 1 required positional argument: 'request'
2025-02-08 19:04:17,602 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:04:17,604 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:04:17,605 - middleware.authentication - ERROR - Unexpected error during authentication for /users/profile: get_doctor_profile() missing 1 required positional argument: 'request'
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\users.py", line 91, in get_my_details
    return get_doctor_profile()
           ^^^^^^^^^^^^^^^^^^^^
TypeError: get_doctor_profile() missing 1 required positional argument: 'request'
2025-02-08 19:06:29,519 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:06:40,656 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:06:40,656 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:06:40,656 - middleware.authentication - ERROR - Unexpected error during authentication for /users/profile: get_doctor_profile() missing 1 required positional argument: 'request'
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 73, in app
    response = await f(request)
               ^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 301, in app
    raw_response = await run_endpoint_function(
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\routing.py", line 214, in run_endpoint_function
    return await run_in_threadpool(dependant.call, **values)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\concurrency.py", line 37, in run_in_threadpool
    return await anyio.to_thread.run_sync(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\to_thread.py", line 56, in run_sync
    return await get_async_backend().run_sync_in_worker_thread(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 2441, in run_sync_in_worker_thread
    return await future
           ^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\_backends\_asyncio.py", line 943, in run
    result = context.run(func, *args)
             ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\routers\users.py", line 91, in get_my_details
    return get_doctor_profile()
           ^^^^^^^^^^^^^^^^^^^^
TypeError: get_doctor_profile() missing 1 required positional argument: 'request'
2025-02-08 19:07:26,860 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:07:49,311 - middleware.authentication - INFO - Checking Authorization header for /users/profile
2025-02-08 19:07:49,311 - middleware.authentication - INFO - Valid token received for /users/profile
2025-02-08 19:07:49,311 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:07:49,311 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDQzNDc2fQ.JxQF_lv3P_o1me_Z3oYL64L_ySZTGI8EH8D2mTLOBm8
2025-02-08 19:07:49,316 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 19:07:49,316 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739043476}
2025-02-08 19:07:49,316 - root - INFO - Getting database: Users
2025-02-08 19:07:49,316 - root - INFO - Getting collection: Doctors
2025-02-08 19:07:49,316 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:07:49,412 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 19:07:49,422 - root - INFO - Getting database: Users
2025-02-08 19:07:49,422 - root - INFO - Getting collection: Doctors
2025-02-08 19:07:49,423 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:07:49,528 - root - INFO - Getting database: Users
2025-02-08 19:07:49,528 - root - INFO - Getting collection: Users-API-Keys
2025-02-08 19:07:49,632 - models.api_key - INFO - Successfully retrieved API key for doctor_id: 57219736-b2ee-4454-92aa-e87a2b56dc03
2025-02-08 19:07:49,632 - models.api_key - INFO - Api info:None
2025-02-08 19:07:49,632 - models.doctor - ERROR - An unexpected error occurred while retrieving doctor details: 'NoneType' object is not subscriptable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 263, in get_doctor_profile
    api_key=api_key_data["api_key"],
            ~~~~~~~~~~~~^^^^^^^^^^^
TypeError: 'NoneType' object is not subscriptable
2025-02-08 19:08:28,122 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 19:08:28,329 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:09:42,551 - middleware.authentication - INFO - Skipping authentication for public route: /docs
2025-02-08 19:09:42,562 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 19:09:43,114 - middleware.authentication - INFO - Skipping authentication for public route: /openapi.json
2025-02-08 19:10:02,134 - middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-08 19:10:02,134 - middleware.authentication - WARNING - Missing or invalid Authorization header on /users/doctors
2025-02-08 19:10:02,136 - middleware.authentication - ERROR - HTTPException on /users/doctors: Missing or invalid Authorization header
2025-02-08 19:10:25,589 - middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-08 19:10:25,590 - middleware.authentication - INFO - Valid token received for /users/doctors
2025-02-08 19:10:25,593 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:10:25,593 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDQzNDc2fQ.JxQF_lv3P_o1me_Z3oYL64L_ySZTGI8EH8D2mTLOBm8
2025-02-08 19:10:25,593 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 19:10:25,594 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739043476}
2025-02-08 19:10:25,594 - root - INFO - Getting database: Users
2025-02-08 19:10:25,595 - root - INFO - Getting collection: Doctors
2025-02-08 19:10:25,595 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:10:25,697 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 19:10:25,698 - root - INFO - Getting database: Users
2025-02-08 19:10:25,698 - root - INFO - Getting collection: Doctors
2025-02-08 19:10:25,699 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:10:25,800 - models.doctor - ERROR - Failed to retrieve doctors: Object of type datetime is not JSON serializable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 143, in get_all_doctors
    return JSONResponse(content={"doctors": doctor_list}, status_code=status.HTTP_200_OK)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 181, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 44, in __init__
    self.body = self.render(content)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 184, in render
    return json.dumps(
           ^^^^^^^^^^^
  File "C:\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
2025-02-08 19:11:35,290 - middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-08 19:11:35,308 - middleware.authentication - INFO - Valid token received for /users/doctors
2025-02-08 19:11:35,322 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:11:35,324 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDQzNDc2fQ.JxQF_lv3P_o1me_Z3oYL64L_ySZTGI8EH8D2mTLOBm8
2025-02-08 19:11:35,325 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 19:11:35,325 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739043476}
2025-02-08 19:11:35,326 - root - INFO - Getting database: Users
2025-02-08 19:11:35,326 - root - INFO - Getting collection: Doctors
2025-02-08 19:11:35,327 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:11:35,426 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 19:11:35,426 - root - INFO - Getting database: Users
2025-02-08 19:11:35,426 - root - INFO - Getting collection: Doctors
2025-02-08 19:11:35,426 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:11:35,532 - models.doctor - ERROR - Failed to retrieve doctors: Object of type datetime is not JSON serializable
Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\models\doctor.py", line 143, in get_all_doctors
    return JSONResponse(content={"doctors": jsonable_encoder(doctor_list)}, status_code=status.HTTP_200_OK)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 181, in __init__
    super().__init__(content, status_code, headers, media_type, background)
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 44, in __init__
    self.body = self.render(content)
                ^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\responses.py", line 184, in render
    return json.dumps(
           ^^^^^^^^^^^
  File "C:\Python312\Lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
          ^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 200, in encode
    chunks = self.iterencode(o, _one_shot=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 258, in iterencode
    return _iterencode(o, 0)
           ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\json\encoder.py", line 180, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type datetime is not JSON serializable
2025-02-08 19:11:59,696 - middleware.authentication - INFO - Checking Authorization header for /users/doctors
2025-02-08 19:11:59,696 - middleware.authentication - INFO - Valid token received for /users/doctors
2025-02-08 19:11:59,696 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:11:59,696 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDQzNDc2fQ.JxQF_lv3P_o1me_Z3oYL64L_ySZTGI8EH8D2mTLOBm8
2025-02-08 19:11:59,696 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 19:11:59,696 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739043476}
2025-02-08 19:11:59,696 - root - INFO - Getting database: Users
2025-02-08 19:11:59,696 - root - INFO - Getting collection: Doctors
2025-02-08 19:11:59,696 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:11:59,798 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 19:11:59,812 - root - INFO - Getting database: Users
2025-02-08 19:11:59,813 - root - INFO - Getting collection: Doctors
2025-02-08 19:11:59,814 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-00.sst2o.mongodb.net:27017', 'cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:16:46,009 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:17:46,962 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:17:56,236 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:18:02,364 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:19:41,227 - middleware.authentication - INFO - Checking Authorization header for /cases/cases
2025-02-08 19:19:41,227 - middleware.authentication - WARNING - Missing or invalid Authorization header on /cases/cases
2025-02-08 19:19:41,227 - middleware.authentication - ERROR - HTTPException on /cases/cases: Missing or invalid Authorization header
2025-02-08 19:19:41,477 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:19:46,213 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:23:53,576 - middleware.authentication - INFO - Checking Authorization header for /cases
2025-02-08 19:23:53,588 - middleware.authentication - ERROR - HTTPException on /cases: Invalid token
2025-02-08 19:24:49,155 - middleware.authentication - INFO - Checking Authorization header for /cases
2025-02-08 19:24:49,175 - middleware.authentication - INFO - Valid token received for /cases
2025-02-08 19:25:25,601 - middleware.authentication - INFO - Checking Authorization header for /cases
2025-02-08 19:25:25,604 - middleware.authentication - INFO - Valid token received for /cases
2025-02-08 19:25:51,026 - middleware.authentication - INFO - Checking Authorization header for /users/patients/12345
2025-02-08 19:25:51,027 - middleware.authentication - INFO - Valid token received for /users/patients/12345
2025-02-08 19:25:51,067 - models.doctor - INFO - Checking for Authorization header in request.
2025-02-08 19:25:51,068 - models.doctor - INFO - Auth Header: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU3MjE5NzM2LWIyZWUtNDQ1NC05MmFhLWU4N2EyYjU2ZGMwMyIsImVtYWlsIjoidGVzdDAzQHRlc3QuY29tIiwiZXhwIjoxNzM5MDQzNDc2fQ.JxQF_lv3P_o1me_Z3oYL64L_ySZTGI8EH8D2mTLOBm8
2025-02-08 19:25:51,068 - models.doctor - INFO - Authorization header found. Token extracted (not logging token for security).
2025-02-08 19:25:51,070 - models.doctor - INFO - JWT token verified successfully. Decoded data: {'id': '57219736-b2ee-4454-92aa-e87a2b56dc03', 'email': 'test03@test.com', 'exp': 1739043476}
2025-02-08 19:25:51,072 - root - INFO - Getting database: Users
2025-02-08 19:25:51,077 - root - INFO - Getting collection: Doctors
2025-02-08 19:25:51,082 - root - INFO - Got doctor collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Doctors')
2025-02-08 19:25:51,207 - models.doctor - INFO - Doctor with id 57219736-b2ee-4454-92aa-e87a2b56dc03 successfully authenticated.
2025-02-08 19:25:51,220 - models.patient - INFO - Fetching patient with patient_number: 12345
2025-02-08 19:25:51,221 - root - INFO - Getting database: Users
2025-02-08 19:25:51,221 - root - INFO - Getting collection: Patients
2025-02-08 19:25:51,221 - root - INFO - Got patient collection: Collection(Database(MongoClient(host=['cluster0-shard-00-02.sst2o.mongodb.net:27017', 'cluster0-shard-00-01.sst2o.mongodb.net:27017', 'cluster0-shard-00-00.sst2o.mongodb.net:27017'], document_class=dict, tz_aware=False, connect=True, retrywrites=True, w='majority', appname='Cluster0', authsource='admin', replicaset='atlas-13ig7t-shard-0', tls=True, serverselectiontimeoutms=5000), 'Users'), 'Patients')
2025-02-08 19:25:51,324 - models.patient - INFO - Patient found: Patient01 (patient_number: 12345)
2025-02-08 19:28:11,896 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:28:24,162 - middleware.authentication - INFO - Checking Authorization header for /cases
2025-02-08 19:28:24,162 - middleware.authentication - INFO - Valid token received for /cases
2025-02-08 19:28:58,218 - middleware.authentication - INFO - Checking Authorization header for /cases
2025-02-08 19:28:58,218 - middleware.authentication - INFO - Valid token received for /cases
2025-02-08 19:29:51,086 - middleware.authentication - INFO - Checking Authorization header for /cases/cases
2025-02-08 19:29:51,088 - middleware.authentication - INFO - Valid token received for /cases/cases
2025-02-08 19:29:51,113 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases: 'utf-8' codec can't decode byte 0xc0 in position 288: invalid start byte
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 59, in wrapped_app
    response = await handler(conn, exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\exception_handlers.py", line 25, in request_validation_exception_handler
    content={"detail": jsonable_encoder(exc.errors())},
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 303, in jsonable_encoder
    jsonable_encoder(
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 289, in jsonable_encoder
    encoded_value = jsonable_encoder(
                    ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 318, in jsonable_encoder
    return ENCODERS_BY_TYPE[type(obj)](obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 59, in <lambda>
    bytes: lambda o: o.decode(),
                     ^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc0 in position 288: invalid start byte
2025-02-08 19:30:33,298 - middleware.authentication - INFO - Checking Authorization header for /cases/cases
2025-02-08 19:30:33,764 - middleware.authentication - INFO - Valid token received for /cases/cases
2025-02-08 19:30:33,933 - middleware.authentication - ERROR - Unexpected error during authentication for /cases/cases: 'utf-8' codec can't decode byte 0xc0 in position 288: invalid start byte
Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 111, in receive
    return self.receive_nowait()
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 106, in receive_nowait
    raise WouldBlock
anyio.WouldBlock

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 124, in receive
    return receiver.item
           ^^^^^^^^^^^^^
AttributeError: 'MemoryObjectItemReceiver' object has no attribute 'item'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 148, in call_next
    message = await recv_stream.receive()
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\anyio\streams\memory.py", line 126, in receive
    raise EndOfStream
anyio.EndOfStream

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\thaba\Documents\Artificial Intelligence\Group Project\Code\Skin-Diagnosis-System-API\MainApi\api\middleware\authentication.py", line 40, in dispatch
    return await call_next(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 154, in call_next
    raise app_exc
  File "C:\Python312\Lib\site-packages\starlette\middleware\base.py", line 141, in coro
    await self.app(scope, receive_or_disconnect, send_no_error)
  File "C:\Python312\Lib\site-packages\starlette\middleware\exceptions.py", line 62, in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 53, in wrapped_app
    raise exc
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 42, in wrapped_app
    await app(scope, receive, sender)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 715, in __call__
    await self.middleware_stack(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 735, in app
    await route.handle(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 288, in handle
    await self.app(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\routing.py", line 76, in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
  File "C:\Python312\Lib\site-packages\starlette\_exception_handler.py", line 59, in wrapped_app
    response = await handler(conn, exc)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\exception_handlers.py", line 25, in request_validation_exception_handler
    content={"detail": jsonable_encoder(exc.errors())},
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 303, in jsonable_encoder
    jsonable_encoder(
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 289, in jsonable_encoder
    encoded_value = jsonable_encoder(
                    ^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 318, in jsonable_encoder
    return ENCODERS_BY_TYPE[type(obj)](obj)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Python312\Lib\site-packages\fastapi\encoders.py", line 59, in <lambda>
    bytes: lambda o: o.decode(),
                     ^^^^^^^^^^
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xc0 in position 288: invalid start byte
2025-02-08 19:33:13,977 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:46:46,109 - main - INFO - Application shutdown: Disconnected from MongoDB
2025-02-08 19:51:47,960 - main - INFO - Application shutdown: Disconnected from MongoDB
